(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    925243,      17414]
NotebookOptionsPosition[    923009,      17340]
NotebookOutlinePosition[    923383,      17356]
CellTagsIndexPosition[    923340,      17353]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Auxiliary functions", "Section",
 CellChangeTimes->{{3.753034379067154*^9, 3.753034383520705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fidelityXY", "[", "M_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Utarget", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", "\[Sigma]X"}], " ", "+", 
       " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", "\[Sigma]Y"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NMaximize", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"fidelity2D", "[", 
          RowBox[{"Utarget", ",", " ", "M"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", "\[Theta]", "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XYangle", "[", "M_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Utarget", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", "\[Sigma]X"}], " ", "+", 
       " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", "\[Sigma]Y"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", " ", "/.", " ", 
      RowBox[{
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"fidelity2D", "[", 
           RowBox[{"Utarget", ",", " ", "M"}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", "\[Theta]", "}"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "fidelityToGate", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fidelityToGate", "[", 
    RowBox[{
     RowBox[{"Ea_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"Ba_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"\[Omega]Ein_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"\[Omega]Bin_", "?", "NumericQ"}], ",", "gate_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Ea", "*", 
       RowBox[{"cosWindow", "[", 
        RowBox[{
         RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
         RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Ba", "*", 
       RowBox[{"cosWindow", "[", 
        RowBox[{
         RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
         RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]E", " ", "=", " ", "\[Omega]Ein"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]B", " ", "=", " ", "\[Omega]Bin"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"findEvolutionOperator2D", "[", 
       RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"gate", " ", "\[Equal]", " ", "\"\<XY\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"F", " ", "=", " ", 
         RowBox[{"fidelityXY", "[", 
          RowBox[{"U", " ", "/.", " ", 
           RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"F", " ", "=", " ", 
         RowBox[{
          RowBox[{"fidelity2D", "[", 
           RowBox[{"gate", ",", " ", 
            RowBox[{"U", " ", "/.", " ", 
             RowBox[{"t", "\[Rule]", "Tmax"}]}]}], "]"}], " ", "//", " ", 
          "Chop"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"{", 
        RowBox[{"F", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "\[CapitalDelta]E", ",", " ", "B0", ",", "Vt", ",", " ", "Ea", ",", 
           " ", "Ba", ",", " ", "\[Omega]Ein", ",", " ", "\[Omega]Bin", ",", 
           " ", "Tmax"}], "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"output", " ", "=", " ", "F"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"output", " ", ">", " ", "bestSoFar"}], ",", " ", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bestSoFar", " ", "=", " ", "output"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"bestParameters", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\[CapitalDelta]E", ",", " ", "B0", ",", "Vt", ",", " ", "Ea", ",",
             " ", "Ba", ",", " ", "\[Omega]Ein", ",", " ", "\[Omega]Bin", ",",
             " ", "Tmax"}], "}"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "output"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "map", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"map", "[", 
    RowBox[{"x_", ",", " ", "a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"a", " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", " ", "-", " ", "a"}], ")"}], "*", "x"}]}], " ", "//", " ",
     "Re"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.748868042823764*^9, 3.7488681045182185`*^9}, {
   3.7488681749646297`*^9, 3.7488682445255513`*^9}, {3.748868301590673*^9, 
   3.7488685646671*^9}, {3.7488686147372503`*^9, 3.748868696235155*^9}, {
   3.7488688286698513`*^9, 3.748868837837569*^9}, {3.7488690219125137`*^9, 
   3.7488690912574162`*^9}, {3.7488691222425632`*^9, 3.748869137421818*^9}, {
   3.7488691771948414`*^9, 3.7488692534118557`*^9}, {3.748869491181861*^9, 
   3.7488695902772646`*^9}, {3.7488696203817296`*^9, 3.74886962749563*^9}, {
   3.748869733418502*^9, 3.7488697342070475`*^9}, {3.7488698987375774`*^9, 
   3.7488699036307592`*^9}, {3.7488699497951603`*^9, 3.748869981837699*^9}, {
   3.748870032903277*^9, 3.748870183071757*^9}, {3.7488703060429063`*^9, 
   3.7488704085688334`*^9}, {3.7488704500449376`*^9, 
   3.7488705400294557`*^9}, {3.748870584788613*^9, 3.7488706450780506`*^9}, {
   3.7488707240459476`*^9, 3.74887072912702*^9}, 3.7488709149040666`*^9, {
   3.7488711523767514`*^9, 3.748871153813923*^9}, {3.7488714954546614`*^9, 
   3.7488715099193287`*^9}, {3.748871868761881*^9, 3.748871942174532*^9}, {
   3.748872020382021*^9, 3.7488720226896915`*^9}, {3.748872069173199*^9, 
   3.7488722190637712`*^9}, {3.7488722803104596`*^9, 
   3.7488723320313826`*^9}, {3.7488725330016737`*^9, 3.748872619638477*^9}, {
   3.748876640016803*^9, 3.748876666094777*^9}, {3.748877051704959*^9, 
   3.74887715371215*^9}, {3.7488773504125185`*^9, 3.7488773794297876`*^9}, {
   3.748877856107978*^9, 3.74887796041984*^9}, {3.748878001674057*^9, 
   3.748878055889801*^9}, {3.748878088478014*^9, 3.7488781137684326`*^9}, {
   3.7488807866597347`*^9, 3.74888091302888*^9}, {3.7488811187512217`*^9, 
   3.748881124855708*^9}, {3.748882474186612*^9, 3.7488825046242766`*^9}, {
   3.7488830297579947`*^9, 3.748883060950012*^9}, {3.7488834448517227`*^9, 
   3.748883445423387*^9}, {3.748883595607071*^9, 3.7488836543901005`*^9}, {
   3.748883703205963*^9, 3.748883719920326*^9}, {3.748883755293934*^9, 
   3.7488837627846127`*^9}, {3.748884464075526*^9, 3.748884469485408*^9}, {
   3.748884594545309*^9, 3.7488846219585266`*^9}, {3.748884666165019*^9, 
   3.7488846762831864`*^9}, 3.7488847559020643`*^9, {3.7488850776327524`*^9, 
   3.748885115718807*^9}, {3.748885295904167*^9, 3.748885297224434*^9}, {
   3.7488970465029016`*^9, 3.748897082243295*^9}, {3.748897565079009*^9, 
   3.7488975701660767`*^9}, {3.7488977325734463`*^9, 3.748897737291775*^9}, {
   3.7488983530857162`*^9, 3.7488983534495*^9}, {3.749299172533746*^9, 
   3.7492991801593485`*^9}, {3.7493000291645174`*^9, 
   3.7493000312942915`*^9}, {3.7493020534701023`*^9, 3.749302056799182*^9}, {
   3.749302539692789*^9, 3.7493025442311735`*^9}, {3.7493030218320704`*^9, 
   3.74930304316677*^9}, {3.7493036615308275`*^9, 3.749303682676637*^9}, 
   3.7493045937365503`*^9, {3.749305297652417*^9, 3.7493053053120003`*^9}, {
   3.749770451046073*^9, 3.749770481650054*^9}, {3.7497705237406445`*^9, 
   3.7497705560097656`*^9}, {3.7497712105002127`*^9, 
   3.7497712720906844`*^9}, {3.7497713324324102`*^9, 3.749771459847307*^9}, {
   3.749771765194148*^9, 3.749771806057583*^9}, {3.7497721116463747`*^9, 
   3.7497721287605023`*^9}, 3.7497721767080355`*^9, {3.7497724013475375`*^9, 
   3.7497724016073885`*^9}, {3.7497727680317106`*^9, 
   3.7497727718914833`*^9}, {3.7497826469480915`*^9, 3.749782650369113*^9}, {
   3.749782719436269*^9, 3.7497827306588044`*^9}, {3.7497831485477285`*^9, 
   3.749783160115057*^9}, {3.749783768988895*^9, 3.7497837846498375`*^9}, {
   3.749783822590952*^9, 3.7497838507796907`*^9}, {3.750687181309536*^9, 
   3.750687230994295*^9}, {3.750692002223221*^9, 3.750692033173361*^9}, {
   3.750725607432372*^9, 3.75072564377551*^9}, {3.7507260143209114`*^9, 
   3.750726018748369*^9}, {3.7507333632398744`*^9, 3.750733416569871*^9}, {
   3.750733468013812*^9, 3.7507335648851376`*^9}, {3.750767218297253*^9, 
   3.7507672200979004`*^9}, {3.7507678537739935`*^9, 
   3.7507678617330866`*^9}, {3.7507678983593874`*^9, 
   3.7507679925629425`*^9}, {3.7507680372225056`*^9, 
   3.7507680534283895`*^9}, {3.7507685797788267`*^9, 3.7507686069737177`*^9}, 
   3.750772246677681*^9, {3.750775574691947*^9, 3.750775639812272*^9}, {
   3.7507805858844547`*^9, 3.750780607699105*^9}, {3.7507806382722263`*^9, 
   3.750780783429366*^9}, {3.750781582272604*^9, 3.7507815829553337`*^9}, {
   3.750783610280716*^9, 3.750783636885186*^9}, {3.750982968917549*^9, 
   3.7509829947428656`*^9}, {3.750983108460089*^9, 3.7509831245063267`*^9}, {
   3.7509945453079543`*^9, 3.7509946035057135`*^9}, {3.7509946929383593`*^9, 
   3.750994729126266*^9}, {3.7509948936083674`*^9, 3.750995168356369*^9}, {
   3.750995284808712*^9, 3.750995292908842*^9}, {3.750995337106987*^9, 
   3.7509953781793613`*^9}, {3.75099542952024*^9, 3.750995430658269*^9}, {
   3.7509955958695173`*^9, 3.7509956974159603`*^9}, {3.750996040324638*^9, 
   3.7509960477044344`*^9}, {3.7510856463996506`*^9, 
   3.7510856853002496`*^9}, {3.751292570630089*^9, 3.751292579065151*^9}, {
   3.7512926121426315`*^9, 3.751292730456869*^9}, {3.7512927968095856`*^9, 
   3.7512927980884123`*^9}, {3.751292845025528*^9, 3.751292865994632*^9}, {
   3.7512929198532343`*^9, 3.7512929246179304`*^9}, {3.7512929760167274`*^9, 
   3.751293011617013*^9}, {3.7512930454628286`*^9, 3.7512930604965954`*^9}, {
   3.7512933633627343`*^9, 3.751293392247506*^9}, {3.751293494028467*^9, 
   3.751293496774276*^9}, {3.75129384558178*^9, 3.751293855127629*^9}, {
   3.751293973004285*^9, 3.7512940427519665`*^9}, {3.751294074978858*^9, 
   3.7512940854372296`*^9}, {3.7512956349051423`*^9, 3.751295635157172*^9}, {
   3.751299209378405*^9, 3.7512992106235495`*^9}, {3.7518097921335583`*^9, 
   3.7518097928731327`*^9}, {3.751809827906107*^9, 3.751810030181779*^9}, {
   3.751812594259968*^9, 3.7518125989672604`*^9}, {3.751812693651807*^9, 
   3.751812721004077*^9}, {3.7518127780052967`*^9, 3.7518128116041813`*^9}, {
   3.751813371735674*^9, 3.751813387888392*^9}, {3.751929275022686*^9, 
   3.75192938843734*^9}, 3.7519297037486706`*^9, {3.751929858335792*^9, 
   3.7519299004595194`*^9}, {3.751929948078083*^9, 3.751930091406503*^9}, 
   3.751930162140749*^9, {3.7519302374193764`*^9, 3.7519302459684525`*^9}, {
   3.7519306184688315`*^9, 3.751930637754144*^9}, {3.7530306449920783`*^9, 
   3.7530306475715985`*^9}, {3.7530343192444324`*^9, 3.753034352681568*^9}, {
   3.7530344644102917`*^9, 3.753034512818576*^9}, {3.7530345799110394`*^9, 
   3.753034674456778*^9}, {3.7530384722187634`*^9, 3.7530385251163483`*^9}, {
   3.753384737785122*^9, 3.753384738331643*^9}, {3.753385108684747*^9, 
   3.7533851150484333`*^9}, {3.7533867264848485`*^9, 
   3.7533868298171277`*^9}, {3.7533922279582195`*^9, 3.753392243692233*^9}, 
   3.753392656458619*^9, {3.7534387256212783`*^9, 3.753438730116698*^9}, {
   3.753461969821021*^9, 3.7534620194489336`*^9}, {3.753489626868245*^9, 
   3.753489631455593*^9}, {3.7534907660374975`*^9, 3.7534907672637877`*^9}, {
   3.7534928654327064`*^9, 3.753492866446122*^9}, {3.7535467919991307`*^9, 
   3.753546823715802*^9}, {3.7541352154257226`*^9, 3.754135237957716*^9}, {
   3.7541353641309347`*^9, 3.7541353658109655`*^9}, 3.7541354172503104`*^9, {
   3.7541354500044155`*^9, 3.7541354813393407`*^9}, {3.754135535517086*^9, 
   3.754135555945301*^9}, 3.7541356741351223`*^9, 3.7541369320852222`*^9, {
   3.754145435227892*^9, 3.7541454493297586`*^9}, {3.7541666931770005`*^9, 
   3.75416669425638*^9}, {3.767295470987585*^9, 3.7672954734431643`*^9}, 
   3.7673288664160776`*^9, {3.767466286358945*^9, 3.7674662871494894`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimize Gate", "Section",
 CellChangeTimes->{{3.753386837400745*^9, 3.753386839447563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"clearVariables", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setVariables", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", " ", "=", " ", 
   RowBox[{"5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", " ", "=", " ", 
   RowBox[{"110", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmax", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "*", "T1"}], " ", "+", " ", "T2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]EMid", " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", " ", "=", " ", "2000"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]0Mid", " ", "=", " ", 
    RowBox[{"\[Epsilon]0", " ", "/.", " ", 
     RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EaD", " ", "=", "244"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]ED", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", "\[Pi]", "*", 
      RowBox[{"(", 
       RowBox[{"\[Epsilon]0", " ", "-", " ", 
        RowBox[{"A", "/", "4"}], " ", "+", " ", 
        RowBox[{"A", "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"dState", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "2"], "/", "2"}]}]}], ")"}]}], 
     " ", "-", " ", 
     RowBox[{"1", "*", "2", "*", "\[Pi]", "*", "2.0548", "*", 
      SuperscriptBox["10", "8"]}]}], " ", "/.", " ", 
    RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]ED", " ", "=", " ", "3.3767399946666843`*^10"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"BaD", " ", "=", 
     RowBox[{"EaD", "*", 
      FractionBox[
       RowBox[{"d", "*", "e"}], 
       RowBox[{"\[Gamma]e", "*", "h"}]]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaD", " ", "=", " ", ".0318"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]BD", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", "\[Pi]", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"B0", "*", "\[Gamma]e"}], " ", "-", " ", 
        RowBox[{"A", "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"dState", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "2"], "/", "2"}]}]}], ")"}]}], 
     " ", "-", " ", 
     RowBox[{"1", "*", "2", "*", "\[Pi]", "*", "1.9759", "*", 
      SuperscriptBox["10", "8"]}]}], " ", "/.", " ", 
    RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]BD", " ", "=", " ", "3.365817946982966`*^10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]E", " ", "=", " ", 
    RowBox[{"10000", " ", "-", " ", 
     RowBox[{"12000", "*", 
      RowBox[{"twoPointWindow", "[", 
       RowBox[{"t", ",", " ", "T1", ",", " ", "Tmax", ",", " ", 
        RowBox[{"8", "/", "12"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"fidelityToGate", "[", 
    RowBox[{
    "EaD", ",", " ", "BaD", ",", " ", "\[Omega]ED", ",", " ", "\[Omega]BD", 
     ",", " ", "\"\<XY\>\""}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"EaD", "*", 
    RowBox[{"cosWindow", "[", 
     RowBox[{
      RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
      RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"BaD", "*", 
    RowBox[{"cosWindow", "[", 
     RowBox[{
      RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
      RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]E", " ", "=", " ", "\[Omega]ED"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]B", " ", "=", " ", "\[Omega]BD"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", " ", "=", " ", 
    RowBox[{"findEvolutionOperator2D", "[", 
     RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"U", " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[CapitalLambda]ge", " ", "/.", " ", 
        RowBox[{"t", "\[Rule]", "t"}]}], ")"}], ".", 
      RowBox[{"findEvolutionOperator", "[", 
       RowBox[{"HexactID", ",", " ", "Tmax"}], "]"}], ".", 
      RowBox[{"ConjugateTranspose", "[", 
       RowBox[{"\[CapitalLambda]ge", " ", "/.", " ", 
        RowBox[{"t", "\[Rule]", "0"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Uuncut", " ", "=", " ", "U"}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fidelityXY", "[", 
   RowBox[{
    RowBox[{"U", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}], " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Evaluate", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Uuncut", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"], ",", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"%", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "8", "]"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", "  ", "Tmax"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "basisGE"}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Probabilities by t, starting in |gdd>\>\""}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Evaluate", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Uuncut", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "2"], ",", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "8"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"%", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
      RowBox[{"%", "[", 
       RowBox[{"[", "8", "]"}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", "  ", "Tmax"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "basisGE"}], ",", " ", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Probabilities by t, starting in |gdu>\>\""}]}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<----------------------------------------\>\"", " ", "<>", " ", 
    "\"\<startin'\>\"", " ", "<>", " ", 
    "\"\<----------------------------------------\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimeConstrained", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bestSoFar", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"bestParameters", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Delta]", " ", "=", " ", "2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Gamma]", " ", "=", " ", ".5"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<BOUNDS: Ea \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EaD", "*", 
              RowBox[{"(", 
               RowBox[{"1", " ", "-", " ", "\[Gamma]"}], ")"}]}], ",", " ", 
             RowBox[{"EaD", "*", 
              RowBox[{"(", 
               RowBox[{"1", " ", "+", " ", "\[Gamma]"}], ")"}]}]}], "}"}], 
           ",", " ", "TraditionalForm"}], "]"}], " ", "<>", " ", 
         "\"\< --- Ba \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"BaD", "*", 
              RowBox[{"(", 
               RowBox[{"1", " ", "-", " ", "\[Gamma]"}], ")"}]}], ",", " ", 
             RowBox[{"BaD", "*", 
              RowBox[{"(", 
               RowBox[{"1", " ", "+", " ", "\[Gamma]"}], ")"}]}]}], "}"}], 
           ",", " ", "TraditionalForm"}], "]"}], " ", "<>", " ", 
         "\"\< --- \[Omega]E: \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Omega]ED", " ", "-", " ", 
              RowBox[{"\[Delta]", "*", 
               SuperscriptBox["10", "8"]}]}], ",", " ", 
             RowBox[{"\[Omega]ED", " ", "+", " ", 
              RowBox[{"\[Delta]", "*", 
               SuperscriptBox["10", "8"]}]}]}], "}"}], ",", " ", 
           "TraditionalForm"}], "]"}], " ", "<>", " ", 
         "\"\< --- \[Omega]B: \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Omega]BD", " ", "-", " ", 
              RowBox[{"\[Delta]", "*", 
               SuperscriptBox["10", "8"]}]}], ",", " ", 
             RowBox[{"\[Omega]BD", " ", "+", " ", 
              RowBox[{"\[Delta]", "*", 
               SuperscriptBox["10", "8"]}]}]}], "}"}], ",", " ", 
           "TraditionalForm"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"NMaximize", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fidelityToGate", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"map", "[", 
              RowBox[{"x1", ",", " ", 
               RowBox[{"EaD", "*", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "-", " ", "\[Gamma]"}], ")"}]}], ",", " ", 
               RowBox[{"EaD", "*", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", "\[Gamma]"}], ")"}]}]}], "]"}], 
             ",", "\[IndentingNewLine]", " ", 
             RowBox[{"map", "[", 
              RowBox[{"x1", ",", " ", 
               RowBox[{"BaD", "*", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "-", " ", "\[Gamma]"}], ")"}]}], ",", " ", 
               RowBox[{"BaD", "*", 
                RowBox[{"(", 
                 RowBox[{"1", " ", "+", " ", "\[Gamma]"}], ")"}]}]}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"map", "[", 
              RowBox[{"x3", ",", " ", 
               RowBox[{"\[Omega]ED", " ", "-", " ", 
                RowBox[{"\[Delta]", "*", 
                 SuperscriptBox["10", "8"]}]}], ",", " ", 
               RowBox[{"\[Omega]ED", " ", "+", " ", 
                RowBox[{"\[Delta]", "*", 
                 SuperscriptBox["10", "8"]}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"map", "[", 
              RowBox[{"x4", ",", " ", 
               RowBox[{"\[Omega]BD", " ", "-", " ", 
                RowBox[{"\[Delta]", "*", 
                 SuperscriptBox["10", "8"]}]}], ",", " ", 
               RowBox[{"\[Omega]BD", " ", "+", " ", 
                RowBox[{"\[Delta]", "*", 
                 SuperscriptBox["10", "8"]}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\"\<XY\>\""}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0", " ", "<", " ", "x1", " ", "<", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0", " ", "<", " ", "x2", " ", "<", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0", " ", "<", " ", "x3", " ", "<", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0", " ", "<", " ", "x4", " ", "<", " ", "1"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x1", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x2", ",", " ", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x3", ",", " ", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x4", ",", ".3", ",", " ", ".7"}], "}"}]}], 
          RowBox[{"(*", 
           RowBox[{",", " ", 
            RowBox[{"{", 
             RowBox[{"x5", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x6", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x7", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x8", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x9", ",", ".3", ",", " ", ".7"}], "}"}]}], "*)"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<NelderMead\>\"", ",", " ", 
            RowBox[{"\"\<RandomSeed\>\"", "\[Rule]", 
             RowBox[{"RandomInteger", "[", 
              RowBox[{"{", 
               RowBox[{"0", ",", " ", "10000"}], "}"}], "]"}]}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"MaxIterations", "\[Rule]", "10000"}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ")"}], ",", " ", 
    RowBox[{"60", "*", "60", "*", "10"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"clearVariables", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.753386897024288*^9, 3.7533870419085565`*^9}, {
   3.7533915533103476`*^9, 3.7533915629157953`*^9}, 3.753391618669091*^9, {
   3.753392688659405*^9, 3.7533926998099394`*^9}, {3.753461914209146*^9, 
   3.7534619359895935`*^9}, {3.753462128754692*^9, 3.7534621678212285`*^9}, {
   3.753462385033568*^9, 3.753462396723009*^9}, {3.7534896732764244`*^9, 
   3.753489675826951*^9}, {3.7534898173141804`*^9, 3.753489835318776*^9}, {
   3.753489885917534*^9, 3.753489892789561*^9}, {3.7534899405359755`*^9, 
   3.7534899414884186`*^9}, {3.7534907962460375`*^9, 3.753490818064429*^9}, {
   3.753492846587597*^9, 3.753492851019035*^9}, {3.753492905970277*^9, 
   3.753492906249115*^9}, {3.7534985201870575`*^9, 3.7534985227995396`*^9}, {
   3.753498582168885*^9, 3.7534985883393173`*^9}, {3.7535462723504095`*^9, 
   3.7535463019423084`*^9}, {3.753546716535446*^9, 3.7535467514562645`*^9}, {
   3.7541356989608006`*^9, 3.7541357159480014`*^9}, 3.7541358585197573`*^9, {
   3.754136582649293*^9, 3.754136582919132*^9}, {3.754136656541665*^9, 
   3.7541366879655356`*^9}, 3.754144137692554*^9, {3.754144173627823*^9, 
   3.754144204273144*^9}, {3.754144236157751*^9, 3.754144434244484*^9}, {
   3.7541448849323406`*^9, 3.754144907297438*^9}, {3.7541449444450097`*^9, 
   3.754144971023693*^9}, {3.7541450050250635`*^9, 3.7541450312019615`*^9}, {
   3.7541450624329476`*^9, 3.754145098477153*^9}, {3.754145157443139*^9, 
   3.7541451651197143`*^9}, {3.754145304462328*^9, 3.754145335291544*^9}, {
   3.7541453678767433`*^9, 3.7541454181047783`*^9}, {3.7541454689414463`*^9, 
   3.7541456094903665`*^9}, {3.7541456543894663`*^9, 
   3.7541456586919813`*^9}, {3.754145712495944*^9, 3.7541457147316546`*^9}, {
   3.7541457521550717`*^9, 3.754145754886495*^9}, {3.754145827153805*^9, 
   3.7541458451384277`*^9}, {3.754146337840205*^9, 3.754146342713395*^9}, {
   3.7541508806158333`*^9, 3.7541509962210436`*^9}, {3.7541519518295584`*^9, 
   3.754151983358163*^9}, {3.757958084389501*^9, 3.7579580891587586`*^9}, {
   3.757958869670892*^9, 3.7579588728390684`*^9}, {3.757960277329913*^9, 
   3.7579602783213415`*^9}, {3.7579603667754726`*^9, 
   3.7579603671112785`*^9}, {3.757960538718587*^9, 3.757960544516254*^9}, {
   3.7579608976881456`*^9, 3.7579609051478567`*^9}, {3.7661700335976396`*^9, 
   3.7661700343252087`*^9}, {3.767253901186458*^9, 3.7672539030283957`*^9}, {
   3.76725397163984*^9, 3.7672539717537746`*^9}, {3.767254031025607*^9, 
   3.7672540988265142`*^9}, {3.767254755497156*^9, 3.767254761608636*^9}, {
   3.7672554220109024`*^9, 3.76725542668321*^9}, {3.7672557227964964`*^9, 
   3.767255726893135*^9}, {3.7672557754341516`*^9, 3.767255892352744*^9}, {
   3.7672606605762873`*^9, 3.7672606972911205`*^9}, {3.7672607734552116`*^9, 
   3.767260774587576*^9}, {3.7672612020496936`*^9, 3.767261216469371*^9}, {
   3.7672926162746215`*^9, 3.7672926366868563`*^9}, {3.7672927052313366`*^9, 
   3.767292707981753*^9}, 3.767292827961582*^9, 3.767292955781893*^9, {
   3.767293035834777*^9, 3.767293045460228*^9}, {3.7672931335524406`*^9, 
   3.767293134519885*^9}, {3.7672931740560894`*^9, 3.767293317923564*^9}, {
   3.7672934733189754`*^9, 3.7672934753398094`*^9}, {3.7672935605239873`*^9, 
   3.76729356567302*^9}, {3.767295498914482*^9, 3.767295499148346*^9}, {
   3.7673720855930614`*^9, 3.7673720862207017`*^9}, {3.76737218078718*^9, 
   3.7673721831038437`*^9}, {3.767372255295224*^9, 3.7673722562666645`*^9}, {
   3.7673723022591505`*^9, 3.767372303093669*^9}, 3.767372479664016*^9, {
   3.767372712119793*^9, 3.767372717695582*^9}, {3.7673757478649836`*^9, 
   3.7673757484206657`*^9}, {3.767378684196725*^9, 3.767378723197239*^9}, {
   3.7673787651100764`*^9, 3.767378774288785*^9}, 3.767378812519743*^9, {
   3.7673805691370335`*^9, 3.767380576890562*^9}, {3.7673832290875363`*^9, 
   3.7673832595999455`*^9}, {3.767459635230839*^9, 3.767459641455249*^9}, {
   3.767462632718808*^9, 3.767462632899704*^9}, 3.767466301819034*^9, {
   3.7674683119825644`*^9, 3.7674683985503016`*^9}}],

Cell[BoxData["0.9998792123254754`"], "Output",
 CellChangeTimes->{
  3.7533870495211554`*^9, 3.7533916045712442`*^9, 3.7533918359669647`*^9, 
   3.7533925749954047`*^9, 3.7534287007556143`*^9, 3.7534621323526134`*^9, 
   3.7534623187470293`*^9, 3.753472236938385*^9, {3.7534898634745026`*^9, 
   3.7534898775043945`*^9}, {3.753489931227347*^9, 3.7534899543999577`*^9}, 
   3.753490955849803*^9, 3.753492888863163*^9, 3.753492930856896*^9, 
   3.7534986414541287`*^9, 3.753546763857098*^9, 3.753547133917055*^9, 
   3.7541368262657557`*^9, 3.7541370695049496`*^9, {3.7541443409213166`*^9, 
   3.754144356443364*^9}, 3.754144459361994*^9, 3.754144938496442*^9, 
   3.7541453382248497`*^9, {3.7541455622656164`*^9, 3.7541455901135435`*^9}, 
   3.7541456372133727`*^9, 3.7541456779328814`*^9, 3.75414573951036*^9, 
   3.7541460691981745`*^9, 3.754146606193429*^9, 3.7541509817836523`*^9, 
   3.7541517860249367`*^9, 3.754152011269936*^9, 3.757957866651722*^9, 
   3.757958181895426*^9, 3.75795892096539*^9, 3.757960323380427*^9, 
   3.7579604377976255`*^9, 3.757960576256998*^9, 3.757960942081614*^9, 
   3.767254090408367*^9, 3.7672541209118457`*^9, 3.767254779193494*^9, 
   3.7672554569697475`*^9, 3.767255755615574*^9, 3.7672559602743206`*^9, 
   3.767260734291789*^9, 3.7672608161785808`*^9, 3.7672612438056107`*^9, 
   3.767267419753622*^9, 3.7672861877986574`*^9, 3.767292665309352*^9, 
   3.767292818088273*^9, 3.7672928632452383`*^9, 3.76729298813028*^9, 
   3.76729306368672*^9, 3.7672931503827367`*^9, 3.767293337638195*^9, 
   3.767293581907658*^9, 3.7672955222720137`*^9, 3.7673721408332148`*^9, 
   3.767372221428749*^9, 3.7673722824135904`*^9, 3.767372341512519*^9, 
   3.767372594337696*^9, 3.7673727557646313`*^9, 3.7673729552050037`*^9, 
   3.7673739604014807`*^9, 3.7673757702730646`*^9, 3.7673770559823503`*^9, 
   3.767378749910839*^9, 3.767378792422329*^9, 3.7673788314588246`*^9, 
   3.76738061174047*^9, 3.7673832804029517`*^9, 3.7674596696360006`*^9, 
   3.767462663089299*^9, 3.7674663324563694`*^9, {3.7674683408699102`*^9, 
   3.7674683680288963`*^9}, 3.767468426597865*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxEl3c81tH7/61kJRRKKA1UsiXhskpW9h7ZtxmRkMpIqRShEkKKBkWSrHCR
kRHZ7tvehJJRSOn3/vT7fPv4x+P5uF7nnGuec78FHLwNnWmoqKhYN1JR/ef/
67XrTj9YJxSo/vt3sZbKiFqhWvH/2P33FplO+Q5F6r+UWxp//1lFpsXAPx5O
4BNE+bF/+hTSY/58+aV/fKFpLClHng7+jyuUzUTcQjb8Y/r8+rI9VfSw/uc/
f6igI6SgN0DP8M8el5QzlKDF+I/JmwR8jaKZ/jFf2B1a1jbmf+ywtOFeHeem
f/s9dwkUDLdg/cdfe6YLFVM2/9PzPMvZe/EM2z976ZDLaQsO9n9syyNQcDif
/Z+exrhnfYspxz97RtSdE/PL/+MTH3RimhO3/NNPU9FTXshv/Wc/Nzm9tquK
6x9TNX/ij9fa/o/TN95wOTu7/d96dRXVXP1onn88FbS2ckh8xz++mZ+vwtz2
Pxb9ejpy6izvP24REmqv4eT7x1wPEp1CLfj/cVGHYbbN2v/YipXlx9GUnfB/
9f2T7rDz1s5d/9tPGauCzuz6Z3/cv8PVrfL/uKL0bFAgizmHwD/9Me7OXHVH
AaD5S3WlXPkSJjL5/+PiL9MpHKa7/8stpdZCGRNzy//jdTsbsabEPUD7lztK
HyVxBWbJ7/3H/pnOfx4m7QP6v9xXqlWUH3FvVfAf/7lwfcrQQAiY/381SvOV
rLXYMoWA8f9ns9SNVvxlE5XwP+b/QMt601wYNv3lpdL2yG5vjVxhYPrLC6XX
dV+0bmDY/48VOUKkqmz3A8dfXild6DS8F1r4P36WKLisuPnAf89fLLW2+Wm+
Rjrwz84u0FxSVH4AOP+DoTRltWOPeP25DsLWv3aasgvPzwVLeR0E7r+8Viru
qTn0reb/mLZsXIxPNYdPBHb/Xc9WlrT4Ld3jnAhI/LWzlOkVVm/Y3yQCPH/t
dGV0FxJcJvYeAr6/vKGsGDzr0y8eAqG/5WMv86JRPmjfcQgE/sPKbGV7ardE
8YuIAsvf/WZLyTcmv/aGi8LS335dVIg6+U4/sVcUGP7aJ0pV2W/nmUqJwa6/
zFa23OGwdetNMfjbEKGby14mHPZvHRGD/X+ZsUxcdIPnCT7x/+aDuoyZbY5X
UFP8Xz0m5slNdOfEYeXveYMKFe3vg0fTxP+dn/T2pdj7j+Kw/JcnFc7djx9K
WxH/l2/986GxIXslQPIvby07YOWuekpfAg78ZaYyOkXjRYWLEsD7lzeUDfJD
xo7nEv/qUUIlbPKzXQJU/9q5y+6OsNNT/kiA5V/eU+ZVvVZQeFASnP7y3jLN
p+Mu8Wb/473XP207Fy4J+n/zub1s3a243uiV5L96kLXTgyR7JeHnX/9HFd4c
ijrIvlEKxv4ynWL05oC+OUkpqP7LrIqu83ZRzaekoO8vsymqtmtBdqQUkP8y
uyLfW+m5mwVS0PkfDOFQXInnT3MfkYLav8yp2BbIYKDJKv3f/M0ovLRcoBY+
Kv0vn9cU+vLoSdLw6y9/UnDgr3Ucj5X+N88KVLlbq8uk/zfPI4k1jz9L/5vH
+apw/zBOGaD7y0OlHcPq0wEg889e9IfxlJeLzL/1D/iaWp1iZP7VO1g+5rhV
sQy4/mfBkHGZg4VRscGIDLBrEekySyg7HsB1SIP5MHxAairh/TVlwvcoaSB9
GO60b6TytZ8oY3mTvFXG5jDQu28JHX9IXf6txfb6wYjDMHtLJdRmgqu8/evu
XwKvDoPkhUzlQMYD5QUsE97byIdB2ct1XpdytDzpQOYoK7UsvFa4s7D0UrM8
WMPTbMMBWZg8fDDn3nazcnuSWOOaoSwIn+GWeVXuWH7sygIsXJCFViuhoYNC
Z8qFH7/Nm8qQhbEdiqtDvufLWSoCBQebZOEGfV2ciUt4+Vy/fFLnD1mYvhbI
aVh9q7xtbX3Tx51HgMV7kH6q+W55wfb3Ye81joBf5Z9aSf+U8kTZq9+LfI6A
PqMF98K5jPKLJhpur5KOwL6DUVcff31RbneWuf9J1RGIlZDK66vOK1eLbdZP
nj0CDC7PFJ70F5ULvoqtjuOUAzmuPtojqhXlTE3GR26AHGxPOGhKoakp/zLN
/TLERQ4SLVa9hPsaylsYenf6x8hBZONy6LU/LeX5gql3PIvl4JFqjxSbQWf5
/WP2Gx1H5KAxk23bt9Ce8iCHvRcsmI9C5LsQuZPmQ+WnQie/6kkfhSPS91hD
aMbKVVOzHNRtjkJb3UKMq9FU+b7S010KEUchhfaHsqP9l3KGHnEtqVdHwTVG
vNDt8Xz57PJi2X7yUUiWtlbhYvle/omzUGIXtTzor5OUf62tlOdJBT3hOiAP
rEOyyQFhv8vjDRS3bzKSB7LoPNc1U2o8700VRXtRHo6m9+ipatChdVQV1c8M
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
FFt4YDMtOSLnnSqav7Y3jP9K5qHe1qCUNhKv8rXu3G88ON46Mn3SGInXYKz8
sJ0HP7d8qNinzMQLPVR/aTeZH0LLZ5WkH6x/l9q2/eKBpXixjCbpX9aEydXN
vTw432smpcJhotk04avDf3lwInLHle4LTPyo1JPdP0D0FHgrcvod0i9N11t+
Q6S/HTNbaotIv2ZXR04b5cEXk9uymzpIPP0N/tHjPJhbtqDolZwasoyfHKcm
8MF4rUim0lgNs8wX7LknzYd9TiNbjTzU0Mzmpq3hJLLust9K8boa1jgqrnk5
mQ9FNr07NcrV8JDr6YXW0wi+xf+lPaSGI4eHND7N4MPxkwkfAyl1vOB9ZIab
PB9sZN7OCjNXR9ap5tGfND7QuOuT7u9Vx6yQrd08Oh+OPX9maSJWR7PIogZp
FT6Iv3asVY9Wx5qrRmVhTD5AV8AV2Qx1HE7XTEti8WF26oOcpDZyfm5k7CI2
H641+HpxJDWQVTDx7JNZfNBGSdswpgZmveHy1s3mwyOFqLmrFmugWXXXwYq5
fFA0oU2oX62BNY3Ojk7z+eC1c9+bMHMNPNhesf77Qj7otw1GtJto4NBvs+Ve
+nwyj3dNlDXQwPPDj3RGl/LBqrn/mIM2iTdxHj1kOR88KHf9hpkk3oy4ibQV
fFjS8XK6zzCphyH/97oxH84WlN806SD1aAW2zl5N1kcnPF5Vp443Wr9YdJrw
4XHres3N5ep4KNnkfpoZH5oLb9/bUqCO+u43FI+s50PNrHGb9hx1HNEb5y2w
5MN05aRrL1LUsbBnV1PPRj6Mv1wg9LhM+MjKN8u04YP9CYWY1lPq6OjNTPXa
woedx/Zuub1fHbUM+TOXbuNDO+fmuMkmdewcqj3514EPE4/Z5t40UMcHT5fX
5ezgw4ntT79vmKWOIt/Lq7m7+JBauk7xpao68e/fRCMXPgxWS0rtUFZHORm7
KcOufJj15eFdOln/VJJ1NH8fyee3b/5kLXVMOCdfLTrIh9t2Mwor5qijh/Wx
FasP8yEgVen+Bn11XCb/Ll7Ckw+Mfx+q5xmp49iH+RMLjvHBwcHSORjUseRy
qHvACZLPDrFEtqk6Rmzvemfmw4cnR2hpfZbquEPNcpkMjw/DaWat5fbqqN2U
Elss4IOE3ttttofUsfvmJIkzYj4EMUOKIgLUMcdt/z5LPz5wNsvOcklSR1/d
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
51WyeWFFPBXqkJpO7gQTcd0vpW9KocKfoe+LkmNMJPt9tdXVNCrwNjA1v/9g
Ih3hoEK+DCr4dCRcEfvGRLZ7WukJl6hgHnF14FUfEwUfVLCayabCuI64lxLG
J/KSCyn5VMhaDm3U7GeiK53f6V9vUOGnfeQPFv6/fA6s7Muo0CDX3J78k4nM
HOayKRVU6PET43EZZ6Jvtx8OJzygAnH5kFn5FBMdXYrYcbWeCjmLVr4JmF+i
LluTK55QIbr/bUjTaha6e2/ozTOCCheS7sW5ibCQCWfBhr52KjjfNincJctC
R6rEHvF1U+HS0i4LNwMWEuJ+zaXwEcfvWfFNDysWuu2d5qT/lQruPd8dFb1Y
6AvvwgRlmAoBfukj4QksZBQ0vKWNTYUjHG0/pDpY6GNDYXTfErZXcuF3+WcW
ool6EjOrQuCdX0zqnV8stIa6VpifNwTOmM2V/2SzUPHTN94KQiFg5nE7XYd3
FhlInL2rL46x59CB2PWzqCfMZNZeMgRKx6VnUzfPovCWRTOqbAgYPy78Y645
i7ikHmUlKoTA94jjhfkGs6iAFjV4VTkEPm0p7j9iMot027dpVG4LAYmV1XGE
1Szq2jAa36YVAppKOYJH7GdRSHTxy75dISB942ZIpvMs4nzpJUnfHQKCPccI
QbdZlCu/jsxvHAKUI6u2L2C8M7arRsE8BBZnOZ8FY/z69TkOA+sQePaW39jX
ZRaRN5sdcLAPgYOqn7sWHGbR8rHlPKpLCKTonj/uazuLcrofjyd6hoDhhYKl
m/tnkZbKYb1svxDQCGkhpvbOopcJ21Mrg0KgTsl/kaY/i0gfxnraQkJArXhE
3UJrFl1J8aHRo0NAfw3DvEFuFm3/sr6JPy4EArqImap1s6hD4x2fYkII/DAy
+f1QcBb5p553NzgZAqp09dLZ1bOI3Wd+y+FMCAzvfBddusBCl3Zw0KkZIfBk
i5rGGJ2F1M41GiddCgEj6yyT0b8s1Pb9yIXs7BDgJF+99HKUhXx1Nfsr80Jg
zoZxv+YH7jcZ46rtxSEQofmau3WAhS7+LDnafwufX/3WaW0fC6nu9mun3wuB
+UM8+s29LNR6UWqtwP0QIFa4cj5j7D3WE6BYFwJerrLlEVifsSezyqAxBPxp
XOszv7FQ5hWLRQcUApfiksUMf+L+9YfTOqQtBPaJsVKPj7MQ2teUk/QyBDoq
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
juSKR8NPlxfWBcR92fbqrVZS0WD2degyjfD37tnPA5Y3omFo2aXML///f8aA
1W/7bkbD8eSFfcVnlLB5KNkx/RZx7tTj8Om4Ej6O6buxtSwaXITuKFyJVUKU
t1WVrIiGLxraxoo8JbyfefzQw7vRoNn3c1cIUwkrFr/7Hn0/Ghbcoe59SFPC
kjpjT/PqaNjtOyO9PlIJb3iwaz4/jIale1RbTCOUMKe30eRyXTRcWvRA4Thh
Z0RrXNjUEA3VKqt2CaKUMFUs9N/8xmgYTRfNtYhWwgsp9/c+aIqGE4t1F5dz
lfCsifQrWks0NB+7JaQXp4Qn7/k7LHgZDV5fNF4eOq2Ecetv5n16FQ3DFJX1
HZeUkN8+o3Cpjciv1GPFkhwlZIZt5G14Hw0NIe1fueVKGPnvSt+89mggp+S6
ZdYrYejZ4U33OqOhZqndvePvlHC33sr7Ed3R4HpJjCv+QwkDSxKpRl+ioWyk
7O6YsDL6reo+29EXDf9edhZKaSij+67Du1wHo6Fy/cb4W67KuO5Xa8vcUDSY
FqSp/hesjE7HyHZ3RqNhb1BdN4unjA4kenbYz2iYofvoDlxQxqX5j2QoE4Q/
6U2fLhYqo5WdCuvDZDQkiAxpkOuU0fxpSE/i32i4biH+cvk7ZTTyq3BzmY2G
z7eDdC4PKKP+4Pw7M0JMkOoRH/77Vxk1+V765SJMuPy608BaWgVVZPNP7Rdj
wlO/6m/66iool/Hnl54kEzYOa9iVklVQ0nLdzrfSTCgev+/5xVQFRTH1aYIc
ExbVjcU8WqSCs5u/L3FWZEI7Z9nP/dYqONmzLGNKmQnH0gzpkzYqOE47JVFC
YoKqgVp+CmH/EGmn7dFgwt0fZacZS1SwP9msU1ubCcaLxZfWWKpgtyF/7Wtd
JpzzXymTQ8Rrv9NcGm/ABJNrd497UlXw7VodbUcqE8QtE5NntFXw5fuDxyeM
mODS9vPQExUVrJ+W899lzgTNK6JuB+epYM3pnQ0alkzg2x9Y+N+kMlZql1i+
XMyEr7+NSy4MK2MRbBFdsZQJNfJebZc/KmPBi6zwn8uYcEl4OluiVRmzA8ff
X3dgghw+vybaqIzpY07OgSuZ8PqJWH/9Q2W8FHehiOTEhLb8AqW4SmU8p9yr
1rKaCUvP1e+PLlPGUznWcUfWMqH+W8Oxd0XKeNTm2I9l65mwXTblT9cNZTz0
uM1rdAMTbn+Ja665roxcb6PavE1M2HsjUj6XOGd8Y5pt38qElsZWz3vE78M5
Ty4qb2OC9wW1AK1yZdwnpS7U5M2Es1bslz33lZFieal/ix9R/462YK96Zezy
UGn5EMCEH6nr43+8UMZU9vnyoJ1MYK9a1ZbeqYweVxTSvgcxQb/ucLrXkDLK
1Z2NjQphwqqzz17PzSpjY7/M3qk9TBDk/9aPVlJBWCRpLRnGhA2Ni62lQAWn
PE9oJoUz4VN0x6/KbSp4mzNfWCOKCb8k9r7yCFdB00fCz02YTDi0RGvcPEsF
Vb2m966LZcL5Vc1XXear4ksu2/1lHBPmz6dsDdJWxVNXJ6x9jjHB7JFx3yor
VVxTz9DqPsEEA1/7xvsuqij0fVx43ykCj7LGgDxfVaySjfo2ksAEX4+Le/pD
VZFpNfKclciEl1GT4ru4qrjY+2DFXBITFEWv0CRPquIP3uB/J5KZMLbw9aGm
C6qYn7k/Tj6FCdxHFvsuX1HF4Iav+1IuMyGc+ehFaK4qag/s3qSXzoRHsZe3
Wheq4ju5Xpv8DOL+1IaiH8WqeH5JsLZlFhP6HS/FJ5So4gaf7nl3rxHxSjW7
5QlbXLDjO+QxIaDR6BmrSBXrsjpePC5gwqQm80JzgSoKHvvdcS9kQrZd3G29
bFW0G3yf/raICQqZK86fuayKP+W9j+woIeZvLzkLElWx2Lptf38ZE3hVpS/3
HlHF/b4em8MriHmqQr31TFWkxrTaTtxlggepwG/xPlW8/KRFRKyaCTHP9Rz2
rldFzx9uA2ceMoHB2tQXvlwV5RSbXqrWMeH7yPaTX81V8anNurtX6pnw8eif
XnM9VTzq9/iK4RMmqCzZteWikiquPLT6aNFTAr89S/ZEiKvi9LW6UJtmor/F
19SEZlWwotFxS/VzJgiPfHM7PKGCkUM1S9e0MuG43aEB/TEVNFNaodvymuBf
3O0woWFi/m2rRLe9ZULY8on31kMqmOm/bLDjPRNWb3um84Q494+92xrSTszb
OtK72+MqSMq1qfzRyYSke1cPjk0S8/+0PIPRzQTaxlHeXmFVPD28+NjMZyb8
jhdjT0urootyyYGjfUxY2RR98aS6KgrbWWyV+UbwheLz5IeRKj4IuGmXPEDk
61H4RGipKrIOm+ppDzFhQegi6avrVNEqr2B+zggTFhqcYef4q+JQk9EPs3Em
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
4k/eHTJA2/TB9RZ8ot5rU9UvLhngt+sybZ9jeHBKOvhhZKkBXr67cGfKYcLf
bblj9S8McH2D+3e3ozywTLG2F4wR+9WrCLrQCR7E510mqZLIWNx97t/teIJ/
FsOe81eQcedw6Yn9CQQ+4ded5u8h3q+ZV4q6iTzQa2F1LU8iY53kr/9eJfEg
9ADJf/NDMtLVVI1OJPPg3+ru4S1jZKQa2pYsT+HBwezuzkMmFHxr5W0/epkH
cZ6nbMT2UPCEI7s+J50HKlpxNxtuUHCy53GT6VUe7Kkt2vBujIKhR1RbS7II
fte+n7q3kood1JB3tjk88M295x6VTEX3x2WdD/J40JNwq3fRKBVxr3Cv03Ue
7FecplZ5GKKV5OaBxkIerJM6+qEBDTHnRsaoezEPshhOidvsjZC0YWjiTQkP
jkscZSk2GOHJoeX//MqJeVn/1rJsrzFOnz0l0lPBg2dJtentZiYYtuiD5N5K
Hpg3H/UY0luAXa3GCkP3eWDf1zvq5meKm+lMEr2aB8Y0uYDESTOsU2nQnnrI
g4Kz64uKaxai9R1lyqE6Av8XogJ2wkLM8w5eML+BB2rjkpF7npuh+lSJ5ekn
PFiwbJWTzTZTPJU2Z6PYRPD1VPYLqs0CnFnu7pDSzIOck9Xq1ptNMLwz3Unn
BQ+u/bNVzT5vjN0xg+uutRL64h0UtnDMCLfq229a8IYHDw9l3mfuNsL62pPb
br3lAed0UGLloCHa7nrnb/OBB0LyMmphhw2xQNQouKqdB6vX0OPjqIaomcfY
t6qLB4KWb4uFX1MxYe2j8CfdxDwm7zrXc4qKs98Uozd+4UFbpfln/fVUjDwV
yHvdx4MopUd/f8hR8bPZrcO+33iwrZDz9MM7Cj4O33B29xAP2q/TpS3oFLRT
+C95cIQH868UZdLXUJD4rkyLGudBX9QBMwctQq887LL+/CL4fY8m8+UXGc/+
Op4v+EPwv+i42MlXZBS61FYkMs2D5WulVH+Xk5G2lHo7foYHrbkl27NTydj7
nnZffo7A89wnrbZDZPTi1uJFYT6UzX798WIfGRu1FJ5oifJhW6Cv53wPMtpX
72jJEuPDxfQDqsuJ9+rmjqLXxpJ8WFC31S3JlIy6QjMfiqT5sO5CWWeoOhnP
Za3vXiLHh/r7rT8cJcg4z/ly/z0FPli2XOqKmibey96vP1Yq80GkQXiP9ogB
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
SjkJRv8v/3+Zr3hj
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qoMF3OXpfgcSVPDB6k03zney4FGZJa/KsAoe8rt3XvM+C+5vW2u0RVMVLQ/Y
Hap6wAKemIO3+v1V8XdxR+Tqxyy4forr3WimKl7vsnJrfcKCDlXj6i91qkib
aVu78SkL6joe7KQ8UMWV4huUu58R+ua55a55rIrv19zk9upnwU+fN4enbqni
Rf91n4YHiHn4NyqvtFAV/Q/eeBo6xALFfWV2rSxVlC5d3TQ9woLmpzL1t51U
sfdBfSFjlKiHkrVHhIoqZnw2Orz4lgVywrdcT86qoL1ETdShCWIe1H53ul6t
giQzfXfhD4T+L4a5mAdU8FZApdnJKRaMV/XvH92pguxkXRXFGWL+6ZEyTHxU
0PhyOU/JFxbQq9Zoy4So4MxDremV31iwhRwV1JqiguVfSvrq51iQsXQ8eLiR
8JOkerP5TxboeHu7pi2poNK6Sxfu/CLmr/pq3c8rVXGZjNBi8iILfi3Jf/YL
VUWuHwwfq38smBVly2ZfUsVvfa8blkhsuP7XOX16RBXf1WwSa+VmAytdQb9E
TA37j9fF7OVjQ+jGLZofTNSwK1rx4TpBNlzyXNNav0ENW5yOaC0Is+FKbHqS
4io1rNSeTWkUZUNLiNCrXbxqWMjr94YhzgbvmHWjD56q4ol3d8xNpNig+03O
XOyMKqZ0rDrzVYYNRTlSocE7VJFxMW+uWp4Nc0ZVvNcNVDFsP8ktVokNSlHc
6XoCqugTEFWlp8oGbt976z1HVNBp/QuBT1Q2XKTs3ZbRoYIWspZhVzTZoDPH
E2J9RwX158s7dmuz4aTf3j61URVUfS6uorWSDfI+fX+vCauieN2+ve9WsSG/
7lOj7VpV5D7x/mWRIZFf8VrZ5XGqOB/jarrThOAvuLc9kPDXB+eWEypr2BA7
osR49FcVB3U0ZkbM2ABB6YbOzmr4mO+4Y4E5G3ZmeDhGZKth28TPUj9gg4Wt
dwRfpxrW3NlJlrNmgwzn8TuzATUsuvQo8KUtGzbTjZ7IPVTDkwdW3zxlz4bk
HfSn0RfU8Mj2CzKejmwoiy13WgxRQ465AEN8Mxv+u7Xr11N1NYyUS+jt3coG
o7QPeUuThH9/DutlubEhe+rMgl2jKm5+Yf/fFk82RM+ve/Q7WxWhvmZCyJsN
nz1pBn/3qaJhtrzNQ1/iPP1WXX+OKlLjDhWmBxD8o79U3TykipJbPv+2D2JD
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
craWnrFqMDwL9xr9//v/AX4sI5E=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
dS8//RefvUuiaC4J+//4/wB8Najj
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxEenlYjd/3domGc07z6TSSBoXQIENkiWjWpEQapETzGTojmiMVCWWsSIkK
lcxiSZHI0EykqNCEJCF59/eP9/P761z39eznWeu+17322vu6js7WKPdtU8TE
xHKmiYn977f8T0rQmFyfJcPz6u3yMDPsF5N8VbKcDv8fnznBEBQv1/8Pf3uQ
yItXWfQfrrd03D5j/cr/8M+5eSZFl9b8h2tmUaeVzHT4D9/40Kw1p8TpP3zx
TK550SKX/7CmnMlJBUfX/7D/E4VT6/78HzZvmxHuJun2H5b+MM/SU/H/8Jvh
ZbRNWm4QHrHnuA3BZb/t3vgYuoGF/3Hj5mAzTJL0Kt1i5gbrp7U/2bzVDDcp
bdsVtMIN2owz/3X4muGUufFa4evdQGW/xKu7HmbYuihjMMrPDS7c/02f7mqG
xaty7nBC3MBQuEUY5miG6zfd9NkZS+K1e3i9XGWGBSnfTqWWuEGexuaEwvlm
KDjyL/zANTewZjwyC5xthk6nZVccuu8GmdJlRjJ6Zvjj+py3x9vcIOu6ijJV
zQxtPgZMvyDhDh/v9VP7xczw09rGnEeb3WFlvMTJKc9N0Wf3Z7Fjwe4wti+l
pqjOFF9WigXtYLnDqsnRszbVpnhLz3iuzF53WKyf/Uh41RTTxdOvOVS4g/mJ
0Fk9J03RtGrt8wbp9bDr3Q4Xg1BTFJnfFGu+uh5CwsfjExRMkaZ3OrBL3hNy
N0UPD602wbso7sXN8oLJqi/vjrrNR8V5MQnbTnuBvKb0PKb1fAw6+vuiZ4kX
5Cavt9y6aD5SI79PXXzfCz6fmmWcpz4fN2r2VowNesFK2e2zqj/MwxFunZxg
zUao3Dnr2MHYeWhglPFQ9H0j/JHc0bSmzgiF2dSR0MmNYNBoEl55xwifiqdM
3yyzCVLzrOcrlRshpz0uern2Jni42+jukeNGiMls3QmHTZB1unvB1RAj9O7y
jNmdvwmMfT8Yf5MywgNZWovj3Lwh3CNWNtttLva4uLhf2+wNtsbjzlJ2c9GC
khA5uM0b2P9a8rOBPI/5eG6jyBtmxLL3y8ybi8t2VKianvWGf39/OVCl52Lv
Mrtf3aPe8GPqyh6onoOWXZw71sc2w80Nmi4TJnNwYO6T1VLvfMAl4euWCMPZ
2KUgNSLz2QdC7h9IKpg5G1vHVp+hffeBprkO+l3qs7G6+tY/RSlfcJs9lLqZ
NhtPeBff0TL2hZubPRs1vxmiXeq+xWaxvmBhcd+24bohFny2neur7Qe8pBgn
9xWG6HO+RvGKvz8UOm42WRhigNGXlgeHUgOA5vTJfjRfH8U/+3nfdNkKh/3T
LSfk9XDGPb811pcD4dpj18KgKB20lknK8JfeBo+qYuesqtPGsoWcbxYOwfDm
c0DdvlEtLPkF9i5F22FJzJuHWX/VcTiv+bru0A7wuaRz5cwWVbzbbaNl6hwK
Pz5Lv/nykI7HjnZ2vzwfBuXXd3lPJCnh1+muvu8uhoEjX6DQsksJ7Qvutw9W
hMGg8cKpt6OV8HdZwXOpqjAIPNaz7EqQEvrUh1ateBkGxo4rz/PWKuHMv2PH
LvwKgwP+fEE7RQnPb5V3jXcIB6Qsvhl7WhHFPsc9OeASDo6aRis+HFfETVEj
Nqc8wuF6cWSl5WFFpOxqWXHdLxxUolrfP0lWxPCsk0ZD7HDQy/s9b2WoIprU
GUptOhkOwuOdFQEmipjifDwh+HQ4dFdN/fx9tiJ2N1MmOYXhsNP+1e44HUU8
1D00euByOBz2qjyVqaSIo7+vvK95EA7rk5Oa20YV8OZ8q7smg+FQHfOuVveO
AsYZ7JtV8i0cknvlovsrFdBGuzF91s9weKIoN7flogI2KwRt1pgSASrO8V2M
0wr49fvecQm1CAiN7r7ssUcBDW49N2uzjoDtHeE7D29UwEM2/kW7T0bAuaLj
Ba9+y+Omleflxk9HgGdmxIdnQ/I4c+k3LvtcBGxbvH9OSpc8XpyTuGZ7eQRI
9qw651Erj3W0om7XRxEgls0O+JoujxnTvto9eRoBGcdw69EYedwwubRsbWME
zPm8/9Fipjx++FIfs+xtBPws836UsF4eJxuHNfW/R4BDFDwL0pTH2idLEnPH
I2BoZEDltaw8ptfE9atNRkDDvOcah8TkUf2a0k1ZmUgYFhR86u+Tw65Lm2em
yEUCT/LOq6Ov5fBcUcHeKfRIeCWp/SP/mRyaH1+84eeMSOj6UhXUeV0O/2TG
VrH0I8EyW5CgfFEOq1Pr9AfnRIL01Omsy/ly6LLL+3uXeSSUPCz4QM+Qw1D/
mIP1DpGQe9xUenG4HFbE6n796BIJpmebxOqC5PB33kOXaZ6RkHL3jmKmrxym
dsnJW/lHAucJ/8h5Fzm8EJC3/yonElpezl4/ai6HX+OthxoFkYAlLmzHBXK4
NP+j09fdhM+n9WKZhnJY996YZpQSCYznx92q1eXwUyCmnj4VCVd3n41q+SOL
JklB/VVnIiH1/Jvb177LoqBA2qHjHFkvnuvlNCCL0r2uMozySCjNa92e8koW
DYO796bVRkL4hZI6swpZjNyT/PF8fSQU3FdTyymSxWvn5tg+fB4JAsfpb6tP
yZJ5wZIUfx0Jafcfa23eI4vBO6Yk84YjQS9Rw6fASxYvpZzrOfw9ErIX7Xn/
2FEWx847rCkfj4QxCW2vkZWyuOfzIYnBKVHwPf71VtFsWXwmsyRQRjoKrMa1
RV+0ZJExt6PaQDYKvgTuWXJEURYLQ/USAlSj4J+d877Df2g4mPqoO0YrCh6d
8igX/0ZD85KwVad0oiD4cd2Wmj4a1gxcEWszioKW78aPgptoSKNt3DJqEgUz
uVNH3Opp6DFv4p7i4ijQjn/RUnyfhj3ha2KdrKLAQv7948vlNJy3/1NnyNoo
+DvrzW+/YhpGX0yHvcR8U6cOG8afpeGdBpPcApcocBPLklXJoaHEcPPf+x5R
EKCypIpxlIYOckLfd5uiIGzNG1ZiJg0PLZheNeEXBY3NLR3r02moG7Vt15IQ
kl/N/M3SiTQMzZB54xEZBbcVHAY6YmhYcfnicjYnCmS/ycOIiIarv/74Xbo7
Ct77pTogh4YBrD1C3UNR4PDU7Or+YBqKDC/rGhyNAhPHXFvbQBLvbduTOaei
oMfselCvPw2LD4tx55+JAh+11fHePjSstp8zw/Qcef7R8nDORhq+/uf2yLwk
Cor/Lek840HDkasi5tKyKOisDG/wdyX56j6tXnkrCnIN5q59b0PDZe2jYdb3
okDn8tZfx1bR0P3AdBXbmijw54osB5cTPmts7jo8joLtdhPT2hfRMOF35Hbn
ZyS/pNpTm4xpeKLsqIJ7UxR4b4/9w5xN+AbjTc92Us/YCO50HRq+b1Sk+b4n
8TIlZlor0vB3yrKrWz5Gga//lOYaaRoqrQz0CxqMgnNz/k4b/kfF1SWVZWFj
UbDBJjjaa4iKL++XzF0xjQmPpO9rXKil4lstq393pZgg4Rb7bfdtKn7mNzdZ
UZjw8m1dxvpyKoov+LtrjTwT+sOs9i7JoaLpCefnjupM+G7fvM2dT8UVP96f
bdBkgnFFgu+pSCrau/IFLjOYUPTlhLRDMBU9S6jrXs5kwj4LdV6QHxUDJE/r
rNdjwucC1qHvG6gYEWA+1jyLCQq0AcqkCxWFd+rqN8xmwtRhXZd99lRMVvXN
a5/LhJazLwXHramYyf7G8Z7PBJVyj8WmQMWchmS7N8ZMKH72+aybBRUvzNaY
7mfGhCvz7gT8Nqfi1cRL396ZM0HLlH1yjikV73eufhiwhAk2P7fKvJlPxQaL
thMfLJhQeUTnB82Iiq+OhEVts2RChnWM27XZVOz98s/6IzAhdPUn5RcGVPzm
cEQtZBUTXvUej3CbRcW/hbOH+q2ZsGFtSqmJPhVlxKvuh9sw4eTXv+MBelRU
8XHLHrZjgijnhcQrXSrqXO8NZToyQXLZfsY+gucriVaOrGPC0U2SlYEEW0TI
0aNdmfB+IZp7E7y2Lv/TD3cmWGy30fEj2E1vSRXfk+h96sJDf4J9Y55k/vJi
wgle1kUXgkNe+Qfv9GbCtheH/bQJ5pqPLvvrwwS7Fbj0ng4V4zNS5GP9ST4v
D67QIXh/v1aP2FYmmRdR4UtnUvH42vIbCUFMSK/cavxzBhULT6/dP3U7E9z1
Azesn07F8j+vAvaEkPpPY39fpUnFUXnvUghnwrIr+RIxalRcqv96bCyS+EfG
DAxVqLhzqfeqyywm7N8z6bVYkYp3nV6nbY9mgnrjQdnzNOKvAO9WbT4T+F1/
anZKUXEN9/XMdiETHKjTTSvEqbh3n3fYwV1Er7MBTq5/KFif8/qqXSwTdAYx
2XeUgrIV3mLiCUzIeqV6qXuQgq4PXzvcTGJCrPuC9/09FGwdfv1uTioTFAv/
3r7fRMH3KztkqFlMWLD7XoLwEgVneWz2eHCUCe9WJWr/K6Dgjh0duTtPMAHL
Il/knKTg8MGOhYN5JN/EiTO791HQtHBzTEE+E9L4EQp9cRSMvtlR51NI9Fqd
7n5TQME/3R2+DcVMMNolmfYuhIIwtvl88kUmpK6ynOEWSMEEypuRFWVMYK42
/hnsS8HaGT4rxiqYkCTanWm0kYLSC9/svXSVCXE39PTOraego61PY/ANJnj1
Pg/ocKHggc1vtLRvMyE+1+L8MycKvozy2d5WxYSdJp9k4hwoSE96U56BTPj7
T//ioB0FvY75TNg+YILnPZG7AsEnSt/YiD1kQkntlxsfbCn4Fn0yb9SRfDb5
7fMhz2e2vOlgPmHCs7MtC6PsKRj42cdgzjMm/Nbr5so6UvDc3zfM7hfkefee
PwbrKNiv6Hv7eBMTNq1YfOICyW++wdtp7q1M8L4jSot3pyBzma8r5RUTjiek
njvuScFK57cnqjuYoLxy7fkOwncZ/63xwm4mJEqcrYjzp+DuNF/RwAcmnNpy
5mTlVgpi3tuas33E/7q9Hyu3UVCi0lfe5zOpl+ndz6E7KGhT93YTfZDEPxEg
dj+Ugvve+BY8HWbCyLmo8fxwCj79+nY46RsTfOOVwicjKCg/zc9ixSgTFu0u
nP4gkoLu6p2JP8aYcI971P4DwVnz/Z5d/MUEqnr/0HqC21d1qgVPMCGmWUFG
lryvtcEvcMY/Jqj1xF+XCaOgf2jnxVZxFiR3xoXYkXzyY/zGD0xlgY7o4/v6
IAr2HepcbSvFgsnX2suyt1BwTpHf/n8yLHA/d+ZBxWYKht/ubLtOY4Gmfc1n
ow0UvPzcT5cpz4LUxm0/5F0pOPKhM3y2EguMObTG/9VDQHsnflyVBXbls/58
W0bBXZXpdboaLFjfFltWu5CCcT7LMkq1WJBj0TOfNY+Ce0uztFCHBb2z9j7O
m07BVA/rD/b6LPA6ciTDiUH8NPH1QpMBCwbO03bpylMw28lpyUcjFoimmK08
IU78MvrrL3MBCw4ytjEC/shgzqmimt8mLDhcNCJ+6ocMnl7jmZa0kAWtm1Jf
eH+VwYLBKe5yi1ngHLLgYvGADJ4/UqZ2bCkLXt8wXXz8owyWWvq901nOAvPH
6xqNe2SwrId6rmQFC96lK8bwu2XwSvrN8EVWLPhSLqjjvZPBa+bbF95bTfR1
s1I37ZTBW2/ov+3WEr0M9+deeCuDd5OqsdGWBWGZm7o7Ca6ex9zr48ACg8Gv
8s/J+ofN0537nFhw8p/xcm6XDD7e9YTOdGHBOPc7Pn4vg0/1hR2/3FgQMcdZ
UNMrgy+eGuQnerCgdMW05xs/y2BzdPMOWS8WrLSibRINyWC7VoLx0U0siEx7
kqM+IoNvaozHZvqwIK4tzWDWTxl8F/72TrEfC5bfX+OeNiGD7+lpieYBLLh+
oGndkinED3eWOtwNZEHiuTNhKtJkf6EdaXu5gwW6p9oeytJJvStX5W4OY8GG
pbdGf6tT8IfPl6DeCBYMGToI7mtTcHxqjlEUk+hPiVa3n0XBiVKHkXE2C/Lr
k4tj5lJQzHP8RgKXBa4BZVmOxhSc+rcwliZgQX99yto84g/pwvU22SIWfMqQ
hOAlFKSuE5eduZsFUoa/zx8mfpL7canpQiwLTidq7FJbQUGlHJ8TCxNYsKtE
99ggUJCxlhJQlcSC+QpFQkkrCmoMXTe03UvqFd+zPZDgGVnbhl/sY8GhKYEa
YgTrrFC+6p3OgrrFShnvyPv6vbiz5wALvimx/0wl35+9P3J1ZCYL/tTM+CUg
8ect0pIZP8yCiijJV2tIfiZvHz+Pz2aBSfFTLo/kb57Mz6YeZ8HlQlmd6YTf
kvmzfLNOsqDRZjDDgfBf1tKop51L9JjiZqtE9IHdcf3nT7NAT0JJsI/oZ9PQ
wb9TSPrh7SzPbmUKOnD3gc158v1dG9Z9k6XguulLpr0oZsET15JsOVIf19qe
J5susiCWo6LjRurnEXHo0IfLLOj5LLnrBanvRhWrTREVLLjtfmrlWVJ/n6oh
7Z+VLBhx8v/eSfyxZdvJvrjrLMiNCLl1dFgGA2XtL1Jukf6w38no6pfB3Mj3
n+vvsEDaYJvGAdIf7c93GqTdY4FhQ8oTCvGjsqlKoGM1CwJn7D6w7YMMOh+6
lEetJfr0nxQVE//u+2775skjFqxIWWH6nuAaj2619HqSX+qHG4qkv/5dFXk6
NRB/W18JWdYng8tU6YdoL0i/hFV2byL+5gouPnvayILzpflTQ4m/y17ZUPe3
sIBTqC4VQPLvX9Zlu66drNfiJJuOy+CsU8Ik2Q4WuCWvK66fJPz+Kt1veMsC
s5PZTmqSZL/wK/27v4v4d5XVOgk5CirovOPJ9ZF+uhIQa0v0d0wQXHn2iQXi
ijMNg2dTcM8Hxa8HBsh++PfFt4umZH4WrgmR/8aCZcq31RetoeBiqc7C599J
PaJW0s3IvGHu4L/PGCP+y11AaybzpOSxgrbrLxb8ff5o7wSZp31zizcrTLAg
C2IZB8i80Em3PvZikgWPhy+PR5B54DP0pvmgOBsq0nhbk9lkv3PmKbpNZUNT
ceoJ5JN5elneWVGKDfQjF3rkd1GQpngh9aUMG27GHfuwI5b4h736USaNDYet
3S7XxlMwvqlDwl2eDSMKUQP6iRS8Y861UlJiw9tRimoawT+z5HY30tkgtn3Z
HXGCzX4W3Tykygb5s9c6ssj74RtXjblrsIEbMqCwmXy/6OZrM+XpbFissTN2
O4n/XiM6qkmbDfUpYNtCzhdau2RLD+uyYcH9PXeqo8l8f3vu0/pZbFD5Qc13
ZlLwEFjNos9mw13fK+dPkvnUkPcqoHkuG1Kyn21/Gkz6X5yTe2Q+G46Esock
yHxdvZXW4WHChsGfkyn/O4/sflCoqrKQDQN4L1dlEwVv6K/0aFnEhohLBgYL
id4jye0Hs5ayIXEs1bLTjcz7j6wGz+VsiDcKNFpI5v8OOyqFAWwItSmxX0fq
dfZCgU2rFRuenfSzWkXOK50USMy2ZsPrH2k79QlWC2+7t8GGDQq5v+WmkvXr
G5gTDHs2tL0aVB9yJvNpAcWizZEN3st+VPSQeHUZZ7lHndngekT90TDJR+Kb
ZYWXGxv+8nSmS5N5Cu6tw6oebDjkn0kxCqCg8EqUUfsGNrT03KE7kflcSZfZ
cWwTG/J2Jqn5EL2+cPMLNvqw4c9qr+e2QgrObVvereZPvncpwv5nAgW3LW2Z
/iqADQ6lC3xd91Pw9PFI7+NBbAiOvnBo4TEKOd+faVIPJfn9q9lIv0zBpdJ/
zRvC2XB94nHgoVsU9K7cmB0XxYbqLdZWtIfkfZrCpo/RhK9Yytytbyj44EbY
rRN8Nsz+Je3zs4/4N+iRprOIDQeD/lX++UpBGUW93eK7iT8byk65/ib7Y1VM
Z2UsG9jChI+vp1DRJeT1yh0JbNjw77RKIoWKbJXFZzST2eA2Fjr1f+ftI/cz
pzzfywavczPu9TKoeD1iKDAhlfDdtqtxHzm/v1a3r120n+i9bqu2tjYVJ2oL
DD5nsGGoJcX0PLkfaLPFUk4dIu97rBLOJ/eZ1TN8PrtksaGHIk2tInhb/XUH
iWNs+BfX0htCcApPufTaCTbAe8WXjuT+UaIbJRuaw4b0UqdpseR+8exZfeT0
02ywFFEi9Mj94pvI4MWLfDYUslRTN5N86IYJpkmFbLDad1PFidwnNsVajPYX
s0Hi/OCmr4TPLqMsz9yLbBBQ1yR9k6NibtvXa25lbHDKmZ+xhtwn7ic6qU27
wob9vM11skSPHuPzwhtXSb/SulZGSVNR6o1ER9gNNpTwz/XvJfeNuSn+ltq3
2XDWqHcfh+B15rdzGqvYMHx4uo0DWc/sYvxLRjYobn0oOZN873A6e4vFA6KH
67IRCVkqXlv67P5gLem/Br0jYiS/Vz1z9E7XsSFw7vdKTaL3xMHkpPVP2CA0
afrsqUX0XNHdK/mMDY0/uOzi/+n52dL21gs2LD1ckSs/j4pBWcfORzSx4Udt
cA9vEbn/rBqV0Wllg86eeRefrqRi8ZBLWHM7G9bmz8sbd6Di0+MlT/d2EH/Z
ha3pJPdppZGtGcNdpH5rqK7uTKJP/kv6nQE2nPyyOvNMIdHHeT4vapgNcXp0
+8QKos/vlDbdb2Q/2Ts/v+cu0aeoZ2nrdzZkbDgpyqsn+qy3OrFvjA0J9fGV
B1uIPv9O/rH8xYaQ1307jr8j+pT89Pn6hw1TFzZ+yPtExUNe6++enWRDssh5
9cGv5P4tcVnbS5wDe6553fT5ScX2y5R4ylQOeB2t8ZqcoOLvzcHvqyQ5oGYz
4s8Vp+F06WprlgwH5Dm/jB9PpaFV5fRCfRoHqCZJr6SkaBi4RSjZLseB9PFu
HRtpGu6htWxPU+TA6prlcnkEX7hh8hjoHHiof1ByIcFPg9LnjjA4oCme2WRA
3i8rUJHmq3Ng7Pudf/em0fBwT27vH00O6JnsC6CTeDz92Q/iZhB839fbbgoN
vYPKT0/T4cBo7YG6ODEarihYFpOqx4FkxQu3309ScWbPg83yBhww1v/rc+gv
Fafqr7M4MpsDva8cVSoIv4+BrQx1Iw7sLJmXsJXg+rP+oznzOfDgennlfYIv
ffj0UteEA6pSTeb95P1MPfblIjPCRzVv7vd/VIwO/JM+bxEH1OtNxL+SfDae
TQotX8IB51PF/C+SNFz+QdZu8TIOxJZYNf+h0nCG3tFZty058En/1bCGEg2n
BM6UsFpJ+CgId69Tp2Ff/oWumlUcaB/smZuhQyNnYLO79ms48M92jlTbXBqW
6t45+cyGA7JZkiaqi2h4cOta4Xp7Drwc8am1tKJhdP6zDe2OHDJPI6+YONHQ
672Xua8zBywKh5+2bSTxt4Z+CV7PgbMZeeL3OCR+/venA54cSLD6cfp6PA17
u3cVMzeS+iaxdFoySLyAjG0iXw4MrJbe0lFCw4wzatb//Dkw/fptRfZNGrK7
z8xM2kr4Ftz/nvqQhhYBlR37t3Pg+7zwzLJOGmqdWXFTKZQDNatfLN71mYZi
3Q+zj4ZzIITd1Gv/nYYfZrpGa0VxYKFP1slpEzR8uOWV2xkWB77wV8w5IyGL
xae3GhtEE37Gy3RUKLK4v2uAVsLjQOs/L+0AeVlkzuT2Gws54H2E7pemLIse
WyYfVe7kgM6R30ZnGLK49PTeQosYDuxjuTteU5NFzS6FxLtxHDj5SSy7R10W
J7VPbLFO5ICd32EvRw1ZfO+vB3XJHAjvUkmWI/hhXqnmuhTizzzGW0+y/sK7
Rb9epnIgf4/fN0fyvXTte60b9hM/LRqbN12V5ONvV9mRwYHZCd1Px1RIPnkv
M7cc4kCLE693GsFL3nlH9R7hgOWwXQiPLosa2j1OoUc54DjZupJN8KRfxNwv
xzkQIeMdNpOs784dk4o+xYE8WtzKAsKnpjO2dzyXA+VPZt7QIvmcnyHzYPcZ
DoyEsT6e1ZLFNL9Dp6cUED/a39/grCOLkbmaMXvPkXiV/n1zDWXRvbNgM+0C
Bw4HlsxevUAWF81YYJFZwoHu75vMsxfLoprfdQbjEgdcTmWV61rJ4kSO1eiJ
Mg4MR9Y+f+Mgi+/ePn6pfYUDf9dN0b+yQRbP+b5Jn3ODA0EqodtcWLKIG9y6
em4RvzxkzGTEy2KHy8OFp6s4cPH6kgUZmbKosLrsNeMBqdcd4+aLV2Rx7vJZ
CxprOdD2YdG15hpZXGt+In5/HQfO60eZX2mRRZFB0uypzzggkl1ee+iHLB7R
/rXz3guyP8nlLdSYKoeX1SKfi5qIX/+kvgxRlMN6xQ+6i1s5cHpLqu2G6XLY
Q9nI+9ZO9oMzlil3DeVwUqLhcWkHBypSnh9MN5FD9b+rpu/o5ECz7e+s60vk
0HzsGlOvm/hF+9pu6xVy6PzFqKbzAwdyVbYZr1olhzs+nVY90Ucwd6z+mbUc
JnarhHl+5kCfc6yfylo5zH2deldhkAMOdQ7y9gTfaPqn+HSYAwXOFj7n1shh
49PobXu/cSD4yagjk7w/VPv5xupRDlxzzlnwhXxf+p4fbXKMAy9cbW+GW8mh
7o0m/5u/OOAjuH124Uo5tCy3uxI9wYE/wstW6SCHXsVVkib/OLA05VjdLYLZ
Z828B8Sj4TpHYDZJ1qefKrp4bmo0BMU/Dd6/Wg6LsrTEt0pFQ7H47v3ZNnJY
fSDTYzolGjpg2AGc5PDNXsnz7bRokK7QZeesl8OfcTv/HJaPBqFLQPB9Hzm0
K9AInQyOBhGz/AElWh71TKss0kKigVKzbdE7gTxOVvnLqIVHw7aHEmeOxMrj
K4cprwoio8HX8sn0FSnyWNlWcN6UFQ0uj9UuvT0kjxlBtoK7nGi4Kcr6GpEn
j6HfPts68qJB2atiSvtFeVwbk67aLoiGC57TCsar5HEm1fhj0M5oOH1wV07e
c3n8c/TltW+7o0G7zJZz8L08tupH74mJiwaZaI2MxDF5TIebs44lk/hRbxSV
FBRw+5PNP/RTiB4m4ub7NRRw9cbJmvLUaFCxPlfdrK+Av1jWQU8youGKvWeu
zFIFbJ7sXbjxUDSkbXSNy7FSwLK0FIneIyS/1yrbne0UME3NqIl1NBr6y/IP
/nVWwODChvzJ49Ew06I46YiHAq4yY7LTTkVDkkXLAslNCqh1T2m1Wl40GM9x
ynLxUcCfjlcVC89Eg5TEDG2BnwI2tnt1mxZEg6Of4bZMfwW8uO132d1z0bAl
PDLjGsEpI6fiHC9Ew0oPCTsqwYGxK13bS6Khq6l9wy1fBQTae+1tl6KhN2Ri
8vtmBVQ/nvTlW1k0DGnvXjRI4o/OMrwXcyUalNRa6tq9FPB5xeMD1GvRMOuu
474vngpYvDLc79iNaAjf23cgiOQv21HlbkbhQoa/dgB1SAFfVOjaVtC4sNfV
kb5iQAGPpO5dbibPheSFilJi/QrotXXQuEKRC75/yz7v+6yAGsvc9M3oXNg/
JZYlQ56/VbymVsHgQsgpxo8C8v7pzxqyZupc8P+RYS8cJnzux4pXaHIhd0iy
9diIAhoc7/lhOoMLaR8fjVDGFfAz076/fCYXnOMe73syqYCldpc6TfW4YN2l
9bVeUpHMA+Wm8llcYHl0iQ/LK+LCcf4j09lcmPjL3CunoYhjz9/cLp/LhW1S
+sN/9BXxVtGqMtP5XGhtiuPuMlFEKy/qcVMzLlz/4frJyE4RJYyZ+8vNuTBn
54zWx+sV8aFkS7zpEi4sN2mz7vRTxH2dFrxyCy68yO/r0wlRRKdruaGmllxo
eLa4bT1bEeUPSPiXAxeeJQ/2WIoUsXHbjvWmq7iw701yUUWcImavaLAttya4
6LXUiWRF3KRiZmlqw4W+i07yn1MUUWso26Tcjgt5f87VFKUqYlfNH31TRy6Y
pY3++kLw2VNb1MvXcaEm/ZnW4D5FDI6ulTV15UKVyEenZa8iznGaO6XcnQvu
OcnXviQp4qBexpiJJxc6t/f+SYlXxMt/vveXeXHBc/DiyMhuRWQ3bXxn4s2F
O8oNw3Ek30UlVU1lPlzInlizLImviOMJunUm/lzY2btR2p6riLe9994pC+CC
vurNOuVoRYwxGywzCeJCQO7q1zMIXkVxKywL5kLmdJUbx8j6qe+vHjcJ4YJG
YfX+fIEi1t3UOFAWxgVhx6lZLiR+WmZsgkkkFyJydOblJyqic0gPr4zJhaHT
Fvcz0hRRaZV9mAmH8Cmu3jJxRBFb1C75l3G5UKHrb1+Vp4jHvip5mAi4UKjv
4XS8RBE31/HtykRc8GNn6DjcUMQZp99Ymuzmgref38aYWkUscDk3yySBCzxJ
1juJLkXcbkjVKEviggs1vTVrUBHn/ouSM9nLhbd5VVqLxhVxuLV5Stk+Lrjm
hdnvn6KE5ZcsfhqnE31evJnjRVXC6D25A5cPcKGrYOkqXyUlXOon0WWcyYWP
tpu2x6oq4Z9FO5ovH+aCVcQivasaSnhXtqHOOJsLr54qp8lpKWF8r2nV5WNc
WJ/8K+2KphKuqcouNz7JJefhquJudSWUyvpTeDmHC6KVFsJPDCWsD99ywvg0
FxjKt6bNUlbC/WtqD1zO50Lk4ZHHE3JK6Ko1N9G4kAvX9p6I/9//QeijB/iX
i7jw88QsC20pJWx78j3MuJj4IeP7E9OpStjos6a1t5TUs8D9gQvh93ToiNWp
y1zwuv9bNJPghzG9xe4VXPh2rX9nv4QSovxiFZmrJN8iq5kd5Hu3Tu+JvXed
Cz++JJ2cSuJfNW37zL3FhUqFT60+JN+yakOPeVVcEF/wUrdqphIWrxfcfX+P
7A8aus3v5ylhQU/d7OPVpL7ZtuPMZUqYy1U/7FJL/JC5ZfN3OyU8Jhn6d1od
6f9fF7U/eCnh4aO3tt+p5wLt9hKpi8FKeGA2tZHdQPx1ayLqZrQSptzcbDnn
BReKjVKrufFKmOBQeu5dIxfCLA/c9ktXwl0dEwrZLVzoSPIopmQpIS983U6n
di58rj7IMjuphMy/Ob1TOkj9D1a63shVwtADwy4333KhINhrZkmeEm7TXnkr
qosLkl9sn60lz7eUZegbfOBC4955UwdOKKH3qq4Db3q5MDvv5cnp2Uro0Wjy
69AnLpwq9erhHVRC58D4QPsBLsSE+X48maqEdqMvG/4NkfxXpt41S1bC1cm6
S699JfpvxJb2OCW0ZHDyw79z4d4mrQMaMUq4pOgBTW+MC9MoPnHhu5XQbCmd
/2qcC3fpIWsMYpVw3uOg7ow/ZD+OKCyKSVRCA++rjjaTXPgFEor7SLyZA9Ou
TYjxoLL5LtX8iBJq7Now84oED0r7L/fanSZ+kS1KDZHkwZ05h46GX1JCudyf
o9oyPEg9HOaoe1cJZYzt/FupPFgkvbbq+TMlnIrHHqfL8WDeBaDVvFPCSdfP
C60VeVAuODpv1VclHO+2yP2lzIP+MKX2vf+UcISdKl3G4MGjV0+ie2nKOCjR
wQ5W50GKl/fbalVl7Dti9FZLiwefOqMWVGgrY9esXbZNM3jgsf9Sn1BfGTuu
PS3fp8OD88NJ7poGythqO13LSp8HYs+qNjaR5y/aI/aMGfCg+PNhZxUdZawP
ufu1dA4P9lt7tsZpKmPNb7nNgfN4wGoK1G6mK+PdNP9adWMe2Jitqnkjq4w3
tMqMX5jyoHZzGu6QUsaKi2In9pjz4LBHxL+lU5TxIrhNXbGEBzHH9+qOTSrh
+ednIr9b8EDtt/MtQ4Lzt4y0X7DkwfRMeuN8MWU89W219ZaVPHAaXrvbcpoy
ZiccvshYzYMg16Mqm0i8g8o9qg1reGBKfyS5SU0ZUwvMExJteSA/yof3s5Qx
aVHyoIUDD6RF3OyIRcoY+7Blw1cnHgxGXn/oaKOMIi+D++dceLAqdn36RS9l
jP7EM/J154GqdCr78g5ljBQ+ylL25IGoqNolRKCMOyhqYvVepH6hE0/F9iij
nnF2n5s3D+DKVmXtg8rYuZ7e8MqHB2YC9zPrjyrjMcGhKwH+hJ9cgG3QSWVc
n6Nw4nMAD3yHCiddTimjXPWBOFYQD9LM9/e5nFDGuj7a9l/BPDjpYJrfmKWM
idS0dfEhPDjxcnobO0MZwUTGXCacB5Zctn3/XmX85bFXIzOSB1rL/bdKxClj
pXCauDqLB4YKpY2pJN+o3MSPpzk8YBYaHF3NVsa5D8SfzebxILqhTa0tQhl7
P8ZWlgl4EChmc6Y1TBlP0yZPLN3JA4Os2snicGX0Nt0Vj7t58GxVvFQWUxlV
NvzebhfHgweRKecu8IlfRALnFwk8iJxut+JFPNE/b8x8YzLJ/0bohuoDyri2
Jlqzay/x01bZPlquMop9HhHfkcqDnVsr05QvK+NtWdanL+k8+Odmw2HcV0ae
2Zdn/AweMIb2spY3KaOpV8TVf5k8OPel7+aJHuL3nQMn9x7hgWJroITLqDIW
nQ5JkD/Kg5eRM+akiNNxa+3HHUeP88C49On2XCodtfq3uWifIvU8q5enp0TH
NrmeRUW5PLjSdbrmC52OhxZu1TI+Q/xROd3SgGCnjV1Trp/lQf0oTWKhAh2l
dvt9hnM8eJI6awHK0LH6zJvnD8/zwP4MNa+QxNv90PuacwkPdL5OO9syroxL
B9pPtV7kwevV103tvyrjd3mvRL8yHlxV/TA09EkZL5m3hPRVED9El846+kEZ
Qzatd428yoNpgbMsRrqUUT/m5eKx6zzoWPnXKKab+CnfZXrMLR68bS/vSe5V
xuOPGiQkq3iwgm6QpjWkjB6Djv377xE/pTVd0yTx5RTrX6hU86Do7JxQPUk6
Pl5kdz2nhgcz7ButTzHomOT9MGfWIx44qIbl3ZlNx5Wxa5IuPuZBnkTJhczl
dPx9tjp00VMe8HQaFGWd6Xi1zsqt6hnht2VwQNWfjsyhu0vWviT9cihjWnEE
HY2UVsxoaOJBCH9X5AcBHfsW357q2Ur2A//GMf04Op7ebDHwpp0Hd60zi/US
6bg57vrLoA4eeMWsUfkeT0dG4aIbg295wP2xedbU3XR88fhKbnQXD9TfPZ+t
zqVj2rBp8sR7Hvy2MdEzDaOjjXJZWFIvyefhItfILXQUX7rAnfaJBxdWsiQm
POl4x6d06ZF+HmTN5er9dKIjP36uttYQDwbc5nV629DR7Nz5aQVfyH47x2/V
yGo6DtUbDBqN8CDWXaDpbE3H818KGq+M8qDmiqHNXVviJ7rezeU/eXAL9G6v
c6XjdIszeQ9+8cCiIL8Gfegop0qdiJ8g/o+h3qNG0lHsR/RGq388kFnw7Ztr
Ah1HGjsrJ8X5cHnASmn1MTr2lNkpVk3lw5nrfQ6el+jYeqAiYqcUH2RfXlDr
raZjXbhWvQWFD2tXFVV7N9PxlsMeg3EaH4qSOvj+3XQsnf014Zo8H45b5qjR
PtMxV9L7XbQSH/IOyghlB+h4sOfB8oUqfNCt3+V25SMdE6rnH/umygd3Pj2x
7x0do08fHb2swYd90gMzpFvoGBwj7hY5nQ8uV9cXVdfRcaNP2MV5M/ngV35r
WtsdOjosa5EZ0OXDo/lNgcMVdLRUWxl8YRYfvox1nuCW0nHB2Pnq7bP5cKdL
tiqhmI4zm5W0DYz4sMbZ1r3mIh2VKnbt7JnPh4r2Q7d41+g49WBfW74JH/r1
9X771dBxLMLVPGAhH7Q5czXrW+n4yfHWQe3FfHjC9pA4NEjH13P0h94u5cPP
+UkXjaaq4FOpA/anlvOBcZDHuK+pgnd7fxZ6Ax/+qpQ0eJuqYNmDgCnqq/gw
IBperGatgvlnnvi1WfNhkVzPaqaLCh6JXXQ7y4YPT89YmEd5quAe3zxVD3s+
7AnNSu72UEHBcploJSc+eAXk7fF3VsFQdc6LF858EOPdKV1Mvrf555t5GW58
uBFi3rlokQo6tdjsW+fBh8W7DuSFG6ggXCnrpXrxQfVWrUK/mgqaZGqsrt/E
B4kF10b3yKmgblRSbooPH2TsBoV3pVWQvm74t40/H6hfdbhHCJY02ug1bSsf
ln2uNfzf+nHp6isPgvgws+FXQoKGCvb3GSkkbOfDmNSE2UcjFXxTkxVuFcqH
Y9xfTsmrVPBZ/r+6yXA+tH1/7HhpkwpiXMisqig+VKXMeOvKVsEKv6b4nWw+
PE8Jnj57nwoWWK7otODyofXFGdq/kyqYrVG0bJzPh1LD1o3iF1QwZVzh6DUR
HxS7PCUpl1VQ1Cr6Hr2bDz5Ss4tfX1TB8Moel4VxfDCpMV9idE4F/Q45l35L
4MOUGtuDqcdV0JV5Q7osmQ/fXwR+10pVwdXOutsiU/iw017jnJ1IBc3npd+f
l0b4VdxrCw5XQQPK2PSB/Xz4pO8+kLhVBdU++YsuHCT1D3dctNBPBSkPH7du
P0z6Ib42mLNFBSfOLlxokM0HgymdzLwQFRyOz8noOUZmv/NG6WChCnb5Sw3m
n+STfp+/9/EBFWxcwbILyOXD+hSZLoPzKlij2VGgfYYPTk4WWuseqOC1X2vE
O8+S+sGRpgtvVfB82yXfU+eIHycvBmSOquDxq2q3vC/wIfNqOCVvGgOdDMsO
9ZfwYbPM3PoqOQZOHrMNE13iw5CaY36JAgPLKO+sKeV84Nfs1L9OZeDWXTyt
E1f4kDxjyZi0OAPpw7I/5lzjg+HoHxZnRAUf+Rc23LzBh0HG1xKj90Tvl5bn
7G/zYUn/Z6fdjSo4z7o55lUVH6ztxS321apgZ2WYVwjyISn9aQS9SgUzDSRM
flXzIeWVjGjHLRVcc+yE9L5aPuhN5UVZ3VXBMRmzbrU6PkiuP7Xwbh3ht/Px
zfP1fAjMMCsPfkX8PbTl0NIG0l8fnAx1v6ignP94aN1zPmytPHZ+rTQD8UWG
9cZGsj/dHvxQrMtA9mpDrU/NpJ9NHU53LGfgrMq7o/w2PjnlscY83RjYPmtD
g9RrPpy/qDz+YQsDU48OFR59w4cZX8+V/trBQEuZ5BjDd3z4x5jo/kfwF5GW
1/VuPkw7x42KDmBg/uAVY9sePvDudzNa1zPQw89Ruq2P9FusovaW1QyUfPG+
K/gz2a/ehkpfMmbgzVWim2MDpF/V/Ff4z2Bg+BXFQ3uG+VCgTdvzhNRjxqwL
oYxvfIij6iU/I3xeZFtZn/tO+mX7ZtPzUgxMlG7XXDzGh6nM5qgBWQYuFkWN
1o6T/OVz1nA1GfhpQLLB8w/ply/Lo0NJvBO+uYW9f0m9MjKXWtoxcN3zRTFc
MQEUOI/K3ApkoNiqhg3TJATwQlK5Z2ksAysqgoyzpgngS21HWttRBgbpT0jN
khaAxjsLl65iBqpmH+6qpAjgwZPwo8uvMbBeyujmGlkBTD/vNdl2g4G7hNWZ
zfICWHSb4tRXwcAFA5tCg5QEsKK7bXZTIQO7fb6tHqULoGOz73uxIww88ixF
M0lVALvkrrl5xzHQxmrmqLKGAK6qLOt+F8HA8fLrT89qCaBvo2KbrT8DS/Rc
ChdqC6An1nX89gYG+mX17X6gIwDhHceGck8GKkjFbFivL4CBvl1mLT4MrBao
GH8wEICEjufNv2EM5PaXSnHmCEBzpszfuQkMnO2zpmvKPAFMpOad2pfDwNcN
HTcOLRBAq/jmUym3GZi+kpOpayqAoPjqL5RXDFxZTgmtWCiAX1vZi+6NMHBE
N3/16sUCGB7VF8uZpooFRyw0G5eS59pyjRx5Vdwg+fJ7wHKiNyQaBREsI9jx
9NsKAdzoDOczJFXxzud/BfFWAnhUqe97/AcDIzcf3a1oLQC/jpvLf3QxcGbD
gg1n1grgo4ySds4TBjbBwwWmdgJwcs8p+Uj03lPmK3XfQQD2a/9mXShh4FLd
H+9c1wmgMaVkxRjRu7HT+W2TiwB2moRotJ9nYMTJ8683uAsg0Hxk9qZKBkpv
nNL+yoPUs0PpzJNHxM90nxYfLwGM48JlJ7qJ/19ebXy3SQAX0plSG/4xsG2/
/IutPgL4IL+z5O10VWQ7hDT0+gnAwf3SuRILVaRJPajfESCA7yGf1ru5qOK5
B1p1A4ECiLWJrlb0UcVVcbzayGAB3OqsP8DzU8U3li+qv+0QQIlIXat4gyry
fs3B6DAB/Jk/LZBto4qK1xKrfkYQ/y0xTXhmooql7Le3REwB6GhY+Pupq6KN
8ZIbf9kC+FFesO+RhCp2Dxy8GsclfguacX75d9LPV+elleUQvTZkZz5fo4r6
7D0pC08LoH5na1+9uSreW9CVfC1fAIImzVvr56ui94BFokWhAO6uzIz9YKyK
o0WH4+4UCaDC9UrTE0tVPBA0tHtlsQD2ZudYz1+vinN0bHdWlwqgMFfL6idT
FWvenhasvSyAiCLOyd+HVNHvxG9uXbkAruzO+ql7VRXHN3hwHCsF8CTSonC4
URUPK19iPrsmgJw7K/4afVLFBS+kIt1uCuB1VHTM22+qWJceENZ8m/B7qG4+
MayKgfa3d3jdFYDvC4emmi5VnJymEvwaST1+X/24o14Vj1VHBvo+EID5mfwm
hzJVXBhbt6WrVgDHDcyeqh5VxWfLdf0C6wSQde10nlSiKu4Y37m5r14Ach5R
K7fwVVHiasvGkAYBiD9Mn7WIp4q5LOMNg88F8FN+9j6HOFVcumDf+qhGARi+
1i+UzlLFpv73riPNAuD1XVoqqFDFyCJLZ24b8f/bE+kuLaooHZTtOP6K6DFx
9KXhL1XMn/nVbucbUu/EbeO/1NRwxVt7m8lO0q/se7kjxmrYfvysdXw3qZdD
VX7cMjVkb/hrNbWH1P+CO8tuiRrSlL1gb58AjFfOX3TAUA2Lnpctp3wWwJmv
m269k1PD1ekUi/0DAtBjlOoZjRB/2QUtVhgWgAXDzLC0VRUv3b1w4fFXAXg2
nyo8cU8V48y/aCV+F4DS7sMJHVdU0b3Y/KDlGNlPXOapfCX10pspkhgbF8DX
4O01ax4SP2Td413+I4BSXYkvuh9U8SF1Wv+OSdLPjkERV6XV8Fi8g6+uuBBq
S7YzV5mqYejPjBcdEkJQe5w3/NJTDS0jWqyzJIVQRTVflRKlhrIfNK47ywjh
XkNtfZhQDTs3bpkrTRPCCrGfaRS2GpY9K8y5LyeE+b41U6V81DBhzYDCTkUh
tJZGD1usUEOPWyZJ5nQhHH7bmvpFSw0NTHg/hxhCEMt2vmMwRQ1/Ft4OLVIX
QlHC2stbiB51muKdW7SEMJGfx6AQf53ItHHT0BYC94pC06p/qhgulV7TpCOE
f0XTjR9oqiHsfrlkv74Q5gXtWti1Wg0VvjNKbAyFsHjGfcXiSDXs3uEzQ2yu
EB75pu85eFQNKzrPZN6cJ4RKVoPyg6tqmOTxcSrHWAg/GqS01zxQww318wTz
zIQw2PxB/GuVGs62Yg/0mgvBT2ps0PO8Gv6+et0vb4kQJCqsfjamqOETo78v
Ny4TgmPs07NJ29Xw1JnVa5VWCMF8X8t0cyc1jFRNufFkJdFLu0JxxFINrfY3
GCWvFoJKgqxVBNFHSUI5D9YK4fHzXVLXnNWwR7BRadxWCOIZUSqGRP+rwznJ
5Q5CyDAejvI7oYZ7gj6Mh64TQrdcPYP9WA03vp4dru8qhFwtN8P739Vwrmvk
u7fuQritPP/ILQV1nKi94n7Uk+hdu2zPDg110l+/al03CkFBeOroBXl1zCsH
C8pmITifdmi4MqqGTMOk0ge+QtjKZRUlviR+zXmsvXsL8YO3ws21l9WQrix/
eHGgEGp+uw6oZ6thX4qH5NdtQrDX3F9Sn6aGNyaPCy/sEIIV86enw2E13Bf9
bnBrmBCW/ZVZmFaqht79+lu0IoXw9O2Fy+HNajhvS2hTC1MIG55+qX0wVR0n
Wy7bZHBIPQI4zi3m6vjC8cdNOx7h05T69KG3OubfXzZ/ilAIPo2+9csj1ZGz
JO707Z1CmMbYJLchTB3XXKxV5sYI4YvhshhfD3Vk6FH3LogXQvUNt31vTNTx
0zHX3x8ThdCRuNz6FUUdb8llR5zZIwRRjefC4QE1TE/q6PLeJ4SXT67ah3eo
oe/vmR70dCGcvOTZfOCtGi5gBj9qOCCEfZrf/K2I3mJ9Jcv2Zgph7t+KsxJE
38bN3y5aHRHC9CAP935HdSx4uVjnd7YQeBfmTumPVUee7a4jV44LITZx+Y4F
JepoW3VfKuIU6T9TGnQ8UMfXD81//swVwsb6h0rOteoY/qKoL+EM0Sfb78PH
CqLPK41W2QIh9KRPNThzSB0Pfthfe+ycECxsPRZaRqij7pDYVb0LQnC6tKTy
NolfOcYpuFQihLQi59vpi9TRRuzjYYtLQnIethg/Y6yO7TLeiTVlQiigHRaf
a6mOocoNbJcrQijx3rJERPSe0LLa+vqqEPK59zl/9qjjAYMrbttuCKHdVDxt
/m111DExWPX1lhBKe2VOzBwm8SyOm+ysEkLw0d99n1U00MaaNlMSif86StF6
rga2O8XKZ1YTfRYWnks01MDQDSOTmrVCuMpyd5qroIET/tuGzz0SQqJ8wvT+
ARIvpP2tab0QGpbW1LypUceZHMeGO0+FcLS6pP9CgTpe2XX3ju1zIWTOtmFU
ET1s9piWNr4k/ltPX5x2mPDLKDjp2ywEevu4Z9B5wu+4atqnViFcosloBjwn
/PJTRZxXQji+ITDKQUIDD5T+DZnsEELeaePi68s1cOY15qZ9nWR/cazR+Bmh
gRX3PtjRu4VwYVBzj3eGBq59vGFp3gchlCWEnKw4Rvg1Pjac20f8dMfsrdM+
wu+NperVT0KQ/LqizXM74dd7WdJqgPjxVqKm2woS74vuWP2QEB4UbqpOZpB4
v7J6Pb8KIWb5ITn3CXWsmCLT0jVC+HYOlQ2OEn/TdtWE/RACs892sQLJt03l
y5Wxn0I4eKswYGAWiae99Wz8byFovjJpnrqJxJvdcoj2Vwg6skE7TY+QeGZ2
CUf/CcHr+q+ghU9JPMvbLN0pIhhWb8bmUcJv7YKAi1MJHlrHKZ+qiWtczrgu
lRLBT5O2h3q/NLB1I93qgYwIoih39x9p08CQrXuNnWkiGNgf7aReQuKF/Z7x
Sk4EUh/Ns+3jSDxuhFyQoggeXJWM6gkg8WK7/g4ri6C5zNnT3IvES1k/JGSI
wDpnJK8wUAPXHHr4Zqq6CNLe7r5+ew+Jd9LiaYamCAb97ad9u62BOwpLb2vM
EEG2weJtJ39r4J9L2iWFM0UgEZW9fddiTTxw49AJEz0RTI10ypHaqokzq6el
3p4lgmNvbn28ydbEiicCoc1sERT57M++to3waxnY8XKuCGqPPbpgs0oTWzv9
NvrMJ98vvNQ/rKiJOz69tP1oLIKtK6fc3d+rgb+/rVnCNhOBwZ1RPPtIA/f/
uW7w11wE5vUxUyvvEX7TjBgpS0TAeVw0a+QF4SeXO015mQg+HXV8tILku0ZN
8UeOpQh28E0+jS4i8XSSemavFEHMOWP6S6Emnu55b9+/SgTLdjCjDe5oYkjR
qssla0RQMOfcxpYeTTQLPU2PsBWBuMIDH7dPmjgx759wgYMIGD/CQu7UaWLt
F993X5xE4NR5yPrxEaJHxZ015S4imBmc1y63RRM3cjWL2e4iaL9p21+wXBN1
lorkzT1FIEoN6ikx08T+3+3RP7xE0Pdyx8VCe02srFry+pq3CBbtSK6JjtHE
3XHZKwW+hE/3x8gpJJ6N9Y8Ciy0i+P7XrEyToYUKkh6UP1tFcLNz16m767Xw
VV1F1J1tIqgavb99SaQW5qcptuzeIYI3CfYrv/lpYbgzc9nKMBGc5r84ccdY
CxcpPs8TiyT19Ocajo9q4mTT/GnVTBH8VmrZevuBJtZlp4cmckRgIRQ8zCjR
xMxNA8/X8ETwztAw81ylJnprOSySFIogt/mSQvc7TdR/d/7Eo50iUJi28Gu+
gRYOnZES2xcjAhw2+mol0sJrQcHbHOJJvZ7Nn/hao4VxhrX11CQRuAdnGed8
0UL7fj2Thj1E7z0+rnJD/6+IK42rqf++UlIiqadB3Xu7U/McUmSLFBVJ86Rk
KEIpUe455zYYSqRQEZGIKHkyhCg2GuhJNFOJpFlKpUTpf/5vfl6uzz3fvfbe
a33X554X9zJQNi8m5cRRAaTvu1oX+pyBLcFtv9Yfp/3Mjg5RPcTAq8YWm+Yl
CqBk7qj8UlsGBv24WFpzUgBzDBueN2kw0PThpHZyMu0/+6INv2ksQngnuZwR
QMq4WNyBdQysWPb4h8I5ATyqiHwlf5qBydOUvd6lCyAho7qzsJeB9HdnTMsQ
wIxtqQ/yljFR/UijmtdlATSO+r54FsLEwTUmxxhXBfA4tdg3fh8TC6VSBj9k
C4DIqptWa8fEmKphl4wcAVg5Sku0SjJx7UnHx5vyBPDdwlqQUMFAeefbbG6+
ALTn7uQQVxjYqiBzpP2OAEwaPVVMMxl4/X1QX1YBXe+qq7J3OQND0l87+D8U
gGLVR51sGSYu8dW9r/FYANHHq/Plg5goxj2m0lMsgLJ2yc+vypj4+ktPVA7S
/U6k770+ycTU7DWdO1/Q8/7r3pg0xcRNgdl2emUCkDxl1Jf1lolaeuK3v70U
gIcsz05wlIlDA1sV8v+j9STP8B6uZmLRnRdESJUArPeUJmpzmXh4H7fNuFoA
mkOvznqpMdHeNNp6pFYAGoOXXko6M1Hp98fcggZa7+iUqAXZTGwrhnnh7wUw
yL/ZXjWbhTlRF/abtgjgSMfb+r4AFoZZTjSPtwpAuVhZLvMsC5eJe6143Ebn
02Ff1Y8JLBR/VXiN/ELnl3R5WIgjC98eU5oNXQLYFM5I/y7GwjT78JCpHgGQ
BRE5rFImbp7X0IBfBWDvsK694zoTdesWmscMCEDt2e+AgkdMbG1zKTMZEsCz
L/fTu38yMXFgv0PfCF2vPDtu1J2FFpNnmjLGaH29+60Pl7BwaFbhVudfdB7n
DHjdV1bFLKWmbxKTAri3SVJ0ZKkquqj/jiieovfbVvLDjqWK4gsZoqHTCXi6
Nd3ncj0LH65YlqA+g4CUWYVbag+xMHC9j2LzTAKct0Zo5NmyUGVjZGbiLAKq
rpyzXLCEhZWBl3RWzSHgQrvEpXpPFgojnhX8nEvA+Kf10cE3WGhw5PPyPFkC
rupMYykqquKn06IVfvIEYH7XZUasKp7K5DsrKBGgxhyTVqxVRct/rVorlAmI
27hJ3fyDKo4U+W+PZBLwanE889c1VbxWETu0gE3Ano9W7XIOquj27jrZzSUg
u1PHIHaKhRKdr8QvqBFwxjo8VLqGhY+Ge5M2aBIQ1dwsmtnAwp0is1XEdQiY
OGZ4xVRGFRlz9a4+0iOgaa4wUna/KlYx7A2CDQmw4zy9xvuuilHawYW8BQT4
TbwyTdJjo5FpkuW7RQSYPmhKULRi42er26+PmxIQwDcycDJhY7JTjduKpQSs
33HqaOBsNlr7Dbf9WEaAR1aij/YjVRwL+mdXjgUBy+2q9IJovuvkolEfSwJs
nJ1G+reoome8a5ScNQELLQLsW+NVcfbZ8Fkv1xBQ2NLvrtClisVXzyaTdgSI
SaYEzV3AxqC7hSwjewLy39d8/xjCRvazpusdDgRctFto8vkMG6urfhufcyJg
Uu3tjGvJbIxpYRTbu9L6FYfsr9/NxoW9y1aLehBw6e34SfklbOwY86l+4EXA
gZCfiiYybEydEeW1y4eA6hCXfxwnVXGNXGYH24+AgXu+vllSbBxnPw+u30LA
60bX7Ex6/hz99vGj/vT8XgkPK8LZ6G0udgh2EPA+w+2fi8VsnGOrJj28k4DH
4hu/1vaz8Ymb9dnsIAL+dZc2pYbYuGdbANc7hADq5eblJq/ZyN0bd1MmjIDw
f3iM0hQ21kbdMCndT0BXx703W/zZeOhEBR44QIBGbtN6WQc2mqT32eqTBFyx
eK67xZON3Tdm138WEiDi19+XeJiNaQ/0fM9EE1DvYZOiWsFG21L7HrtDBKwr
Htk3Ic/BiZrgvdNiCTDo9ixctpaDtz4lTd47SsC7kkQTJScO+n67HbvjOAHK
evNOmelwUGaiZh4rkYD7t7VqHAfY+Fxy5HzNSQIYBbPKMorYuFdRXj02mQDF
3dvliats5KuZ5C89Q9d/VfL1xW02Nhi7LRlMI0A+YOBydBsbYy0iSrLSCeAJ
opQ26nLwZ1tZhXYG7TcLza6aCA4GHpSvzs+k/SvUXxuZz8EW/tZGkywCLL1f
r6x9xEH7sjsfiq4R8DI5MW57KgcxQOTLyhsEzEuTmZ/lyUFjSYfel7kEKOQM
P3fmcTAr5+Kg/S0C+su7z7BFOaiwtn+0Lp+AEDfzOTNpHNe/dNLzLq1vXuQp
YzUO/joRL9pWQIBPu63YrW0c3GX4XjLgIQFjc76kDj3gYGu1hkz/IwJeFD+6
uUmUiw579yvsLSZgafGWu9M1ufj8n1LG+FOa38Pzop48Fxfel+NFPqf1zNMd
/NrEwWtum7VmlNL3weu8y9k0DiqN5xscKydA06qeKAnkYPy5qUXzKghIWKJs
+dOL1mupvfmZSgIchPIsxVAOBn1IX8l8Q4DX2H+pubkc/CTsW3OlmvYv5M8M
muKgI3vJeq06AgJbZr5PdeNiybM4l38bCBiMerVD+yQXTbY0ei16T0DpLGNH
z0QuXhdT3/y4mc6HgLnnK925qHwtbPuKVgJutfnK2ctw8fjqF0Hln+j82/b9
qHgDB/90z9u3rp2AxaHeEq2PObgnfhNR20GAlIivw++XHPys82+0RzcBZsPL
k5MmOej8ejL2Yy+t98yllZ6OXCwLWntiWz8Bf249cDlyl4umMueT+wboz7UK
WX4TXMy53XMuZIjOp77qRRozechwMs0cGyGg4k7qcFoNF0+MHMmmxgiQnS8q
UXmQi9NS6/NEf9H5ZF1lVW3BxdDF/HtHJ+h8330ygavKxS/vQh/NnSLA6vQ0
0UANLroKnmGKCAmtdz7ZPfbk4ksVmXIVMRJaxNabPbnDxSXFPq8zxUmwWu8a
MJvBw5s+ebUakiSMB42+tQ/mIWvaxPs8KRJcWTcj0iN5mJRp+2mBNAlV4+eT
f63m4XTLtM5CGRIUxrzL5g5xMexL19flciTM3Dw7bsYNLnYeNhkulSeh2pUM
tjnERXeNw+N2SvT5gnF+73EuVrysnapWJiFNecd9mRIumgdyxd2ZJEiIPt5v
wePhLamQ2a2qJKztsU2LTOEhO++p7FYuCfNjqs6afePhKXvp+b18EtS9mT0+
v3goNuitukeDBDk32Gv0kIf7T+aqjWqREFwf+GLSg4fdxr90SF0Svi+X7reW
5qFn3Rrj6QYkXM4K4P/p42LlvjOmcUYkyHPqD1r85iIodoL0QhJ0U/LmxZjz
MP/hQqtkExLOR3rc6crmIdfzoJ2yGQn9TzYcGOXxMfl39YZLS0lY6sfeelvA
xxkX2O7qQELPMvfa8H18vDXmWffZgj5fp+kwX4mP7o4pDhmWJDxQz3P6mstD
kbw3lV7WJAj4S4qe+PMwZ+YsGyUbEl5mMty/efPQafOq0jo7EjBAzsLyNA8n
ioQrTtqT8Ma43zRJjI9XFQuL120g4aj9Z6tfqXy0Dx02m+VM19dbsJQ5Qw3H
KvXul7mSEPSf1NSKCT5e0thufNCD1vecQ0RKEh9tYi7fWu5Nws/zjsHxDD4O
tbRoT/jQ/hDZlrilkYfnFytmP/QjYc3pTQde1PLo97kNvH1bab04Y0/D5fnY
//VYhlEACbl/tEocaf7U1WUq33aQcNWZ+MBbrIbLL087m7OLhMUCGZ9Tl9Ww
e2LJPwHBJEhf2nHAMUoNT7rtS+KF0nqJffL8NsXHJXf+nf0pjPZvgb2kfBwf
22f3xqWHk+ClVNJfaMvH4wH8GR4CEu7n6nxXceWjyXOfaHmK5nM7/J/dTT5+
ZKRNVkeSsPC7ZU7EKjWMC689cCKGhJqTpEBpWA2Na+aM2h4mYYvskp+8NerY
rLsmdGYcCQk7ST/jn2p4KDbm24t4eh+5SZMtm9VQ73NRYFQCCfE82xMSg3xs
MB/rNE8iQfThto3NJXyMPGO0ZfwUCYaxoo8Ge/ioObTzY0EKCYwVctucfdWw
eu01r9CzJIhl6AyqKaijIPtTo/55Euo4A5IyL9WRN13Fue8CCSrxnhtd2tWx
0tvlbfYlEkZNnC5muavjvgeJa7deIcF627u4qkI1ZMlWvGRfo+ddaHhz1EMN
X+4Ss/pwnYT9yw/K169Tw5ByeJaWS0Lz+O4QzzQ1VOYeWOZ6i4QysqVcZok6
lpB3C2Vv0/c9snuYmKeBuxv7F725S8Kdgw12Spc1UMFY886x+yRozZE87+em
gU+Pb9ZfU0jPmz/RNXRBHbd3peeIFdH91nhtSputjvNWNqo/e0JCaVd0oki1
Gj5Kn3eFekbCE8kf4R+H1HDLmJ3qkhISUp3mbh7Zq46zHY+cHy2j90ttCz5g
p4EFN1Hx7isS3rbvqLTS10Sfmb9PB1fS9W1dhG/WauLMzYtkdN+QkGyc8bD2
lAbmFwUf764mgerxc3aoU0cPxRyJq3UkWMp8a0naqY7TQ78c8msk4bmgPjjF
Xx1zK1kirCYSco4NMNvK1dFZw4NqaiEh0mv+IdMkDZyMPj2e+pHu52Be5JN0
TbzW8nqf02faL+R5m0A9LVy/WGJobgcJ5KyrUiuTNPHnyZVBlV0k3LZyTgm9
oYGXv5K9cb0kHNj5p1taQQPtVj/wt+onoSQ0WNrgmzreW6TqWztAwscxrri/
jgay+LFufkMkpKS6bjH6TwPjZAfWD4yQsL3g+s2WV5o4NM1tDTVGQsOdpYvG
arTQe+CJhdQvEixkN4T7NWlh6Qd1s7QJ2g/TZ3UmfdVE/coTRhpTJKzcuOHg
QVlNPPtoVKtAhAIp1+5re85p4PQbPlxLMQqmB3EeF8Zp4K4zZcrV4hTUNv/n
IPiggQ2H9eV8JSlYK7/wo2iGJi4PS5Xql6IgqTKsULlCC69v/iNKSFMQOPdM
q12zNspu8J+QmEdBl4dT8YVIbSSXV42kylEgMmp3udNXCzv1TPr5ChQ4PTFr
mHFMEx0YFzvuKFEgDIQfHE1NLJwl3mqhQkFBX4POV2NN5I7vbqhiUqCQ1rzw
+01NPN5VX+XNpmB4d/SDnkwtHK1fVt7LpSDx84WhcEkd3FRy9WmEGgV9oWEn
FvbqYMWdOQ/FNSnotdU3KRnSxgWZ+/KTtSngkW4r5hZpYXrih+tcPbqfkQ4b
UxEtFBdaZeYbUBDf1/XG+bkm7tmVlwbGFDSM2ZR8GdPEJk/5U5ULKTiQ+nGz
7A0tXGVDxXsupiA0TO7Tmj5tzFvcEdNtRj9vUZSmkqqLCurriP3mFDQfWX4l
+LYuRv1TsFdsOQVKitofTPV0sHc6c9epFRSwtkaIPZqjjU7fD21lr6LAXf8I
SyxGC4s+fvW+ZU3BnEqbBef2a6F6lbOLuQ0F+oLmDxHdWphUVLSuwo4CN8o4
x4zm/5XDt3a3p8BubMbYwBVd3Jp2HDod6H12Ws27Ya6Pr2NHTMKcKLDxybyd
26aLyr8X/GoPoGDFKv7v4VZ9PNRzfigkkII7S3cWOtP99jeK9k3tokBZKzB+
/h4ddC3b2Z4QTPthQ4t2Yqc24r3aZpVQCvIK/dao9Wuj9pWldTfCKCgu3PaA
F6ODySevVC4Op+C0yoItsyp18U+kVGnpAQr+DXUsFZgbYEDQ3mInkoILDQnN
zFOG+Na7uaBNSMHL+4Uuiyz1cYmd5a3gaAqaVlysmZ+gi1lmudcmD1Kw+VuX
6ccSHZTWlMs4doSCqNonw+8v6mCEAnFm/lEKvmhFfFGV0sU2sfbE7GMUlBw7
fkZEXQ9th23jFp2g/v8X6gd3bTXAe213ol4k0X79HD1ntMgIxVU+XFh1mgLP
6105i2YYorvzzMelKRT0H93p3/FCD3MSjN5Zn6XgIP9PZ2uhLv4u8/pRfo4C
pmrpGrlturh22hFZmwsUZC2ty3Wm93/RLN+gIoP2Z6HlL9EYPRwMbVprd5mC
WRcehji6GODKm2KBlVkUZPaaN/k1G2Fyh37sumwKJFh/gpe7GmEnyyOr6gYF
Pyd/zukwNUBT94PP1t+kQJ37wO/Vaz08ejKv9e0tCqwqzQrMVuhhU0Xj7w23
aT7usXKhox7qik2fX3uXgtuKJzzeTemhcJmuifN9CnxKrH/JHTLAt/tdneof
UuDv0uTXShohNz9qj+tj6n//3xrWk5PQWEyB7++uKsLTEMu49TnuSMEmq2ot
hR59VPSeKn//nIL2iTejh3X1cXuKVodnKQVVP6/fcVHWx0dVTtNbyilIuOjP
c7uij7MlhKobK2i97s6OWzZogD4rrpu3VlKwo1zVvXOjEeYLajx83/zlF7k3
sf9TNQX5rnsZiRJG6NivnuxXR/v7rG2e4aQBZqlvuP25gYJpaTf32LIMcNSX
qNryntY/YJXClWF9XJN2te9LMwVFBb0r2bTe52reSPi30n4+5ZHRaGWIfVK/
1Lo+UaC6+pi+cpgRmlvxLbe3/+U/IbTf1NNB36/GffzIRCP89CCCCuymoG17
Ke+50BCNv18+19dL54fsjwhtCUM8pP36wa5+ChYbd0zWvTfA+i1jdf0DFOyO
4cEhliGqX+AMBQ3R+Oj07CPXDDGiwW7u4AgFT9uHAhryjLBi7n7dkLG//Ayb
SzZD4xSsNl10SKPHCINiKvz3TtD54d/qeWLIEJ8+Hjk48ofOg66UZqsoQ5T5
wcrcJyKEByNWHY+3GeJmfZsno6JCWBl2ctrXFEO8F7C3OVxcCLtvaxqsU6T9
nnnh508JIfAX9M6LmDJC96ZyeYGU8H/8OXJDxr/nCOHs0ROJZRrGOLGW4UDK
CGEJQ1x61NsI1x2x3j0pK4R/nOcwen8a4sWne+KF8kLI0LshZdRhiIM/z2VP
KQqhsaOrMUzJCFcal5ZEKQshSfs5uT2V9vvOgTYRphC+8eWjn28yxs6s+VMx
qn/5TVstGWJcIZhNe4DrNhtjvGKQ2WG+EDQCAwleqRE2O5x1Fdeg50s/cv31
PiPUjX++N1ZLCE7bn3Lzdhuh8MXXJAldIdTJlEcvzzbCtxMKt47qC8E/eNAq
gmuMXJMV/80y+stnHjulNxn7F7u9K04aaP2L8wMz/BZER/4P924arCtp/otP
5bL5OipR/8P/BxB48ms=
         "]]}}}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -19.341714781149985`}, PlotRange -> NCache[{{0, 
         Rational[3, 25000000]}, {-19.341714781149985`, 
        0.9210340371976384}}, {{0, 1.2*^-7}, {-19.341714781149985`, 
        0.9210340371976384}}], DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.4489795918367343`*^-15, 
        1.199999975510204*^-7}, {-18.420680743952367`, 
        1.909583602355251*^-14}}, {{2.4489795918367343`*^-15, 
        1.199999975510204*^-7}, {-18.420680743952367`, 
        1.909583602355251*^-14}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Probabilities by t, starting in |gdd>\"", TraditionalForm], 
     PlotRange -> NCache[{{0, 
         Rational[3, 25000000]}, {-18.420680743952367`, 
        1.909583602355251*^-14}}, {{0, 1.2*^-7}, {-18.420680743952367`, 
        1.909583602355251*^-14}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|g\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7533870495211554`*^9, 3.7533916045712442`*^9, 3.7533918359669647`*^9, 
   3.7533925749954047`*^9, 3.7534287007556143`*^9, 3.7534621323526134`*^9, 
   3.7534623187470293`*^9, 3.753472236938385*^9, {3.7534898634745026`*^9, 
   3.7534898775043945`*^9}, {3.753489931227347*^9, 3.7534899543999577`*^9}, 
   3.753490955849803*^9, 3.753492888863163*^9, 3.753492930856896*^9, 
   3.7534986414541287`*^9, 3.753546763857098*^9, 3.753547133917055*^9, 
   3.7541368262657557`*^9, 3.7541370695049496`*^9, {3.7541443409213166`*^9, 
   3.754144356443364*^9}, 3.754144459361994*^9, 3.754144938496442*^9, 
   3.7541453382248497`*^9, {3.7541455622656164`*^9, 3.7541455901135435`*^9}, 
   3.7541456372133727`*^9, 3.7541456779328814`*^9, 3.75414573951036*^9, 
   3.7541460691981745`*^9, 3.754146606193429*^9, 3.7541509817836523`*^9, 
   3.7541517860249367`*^9, 3.754152011269936*^9, 3.757957866651722*^9, 
   3.757958181895426*^9, 3.75795892096539*^9, 3.757960323380427*^9, 
   3.7579604377976255`*^9, 3.757960576256998*^9, 3.757960942081614*^9, 
   3.767254090408367*^9, 3.7672541209118457`*^9, 3.767254779193494*^9, 
   3.7672554569697475`*^9, 3.767255755615574*^9, 3.7672559602743206`*^9, 
   3.767260734291789*^9, 3.7672608161785808`*^9, 3.7672612438056107`*^9, 
   3.767267419753622*^9, 3.7672861877986574`*^9, 3.767292665309352*^9, 
   3.767292818088273*^9, 3.7672928632452383`*^9, 3.76729298813028*^9, 
   3.76729306368672*^9, 3.7672931503827367`*^9, 3.767293337638195*^9, 
   3.767293581907658*^9, 3.7672955222720137`*^9, 3.7673721408332148`*^9, 
   3.767372221428749*^9, 3.7673722824135904`*^9, 3.767372341512519*^9, 
   3.767372594337696*^9, 3.7673727557646313`*^9, 3.7673729552050037`*^9, 
   3.7673739604014807`*^9, 3.7673757702730646`*^9, 3.7673770559823503`*^9, 
   3.767378749910839*^9, 3.767378792422329*^9, 3.7673788314588246`*^9, 
   3.76738061174047*^9, 3.7673832804029517`*^9, 3.7674596696360006`*^9, 
   3.767462663089299*^9, 3.7674663324563694`*^9, {3.7674683408699102`*^9, 
   3.7674683680288963`*^9}, 3.767468428612695*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
0qCm4CPAwX6PVRMZSVz9fu4ihfBxsGW/v8XJFG7/Mh/Hfl3GwY9SXVky6WQQ
6WtY9nqRjUW/DyzrzSTDvaNPdvX+ZuPjthfHk7PJIKTwLMJnlo33Cze+d31C
hs+J+cNmP9lotSPv7tdcMgQFDxy7N8XGpUTzc7QXZBhssOwQ+cZGz2CS9IPX
ZPgWu3jDcIyNKiYsRkcJGU44yP4y6WMjs+m2iUsLGbgX2bOZejYGGO+Q/sIi
Q2VD5frKOjZuLyidIbeRwagn36qqlo3t253qV3WSgRxqaTlSw8aoe5OP7nWT
QbPHT0mQy/prrjJ29JHB9Pan4/Kf2PidJu385jMZSuWVl4lXszFj4rW6+RA3
3+RZntpKNjq4H1rdNsKtX3+zxu4KNvI1DfSfGSPDte3vamzL2fjOiPZudpzb
j9dV2yQ+sNHvtcjda9/IYPH4eGl0KRu3bH/iK/GDDMpLhd7MYjY2JRiaZP8k
Q0tbSOmHt2y8srpdSneW25+xcqmsQjZ+Geerd/xDBuPKhgyXl2x8cDzl0fAi
GR6mLl+0fMZG68ZdDCIPBSzkPq9yfsLG/Hwv9fiVFOA9YXCqLJONXvJ/V21f
TQHGCUGVdels3JAQ21/ATwE7ZXP+YylsDKaW3WEJU6C8/ODtzEQ2qo0f9fUS
pcCMXnF5WDwbP7v9MJ4Ro0Dsz78NCnfZaGYoO7N+EwVofN1xJVFsnH/1pi5T
mgIyY8LDZdfYmLvt8CNtGQq0Li+Zygtj47pVDCd7eQqM5mvnZdPYWEYRVx9U
oADbwru5j8RG4tdnqwKVKFD4vUDMI5CNim4H+nlVKLCxMnm99iU2dtZ3vb2r
RoFlKfLdnufZGG0QeEdOkwJH770ymfRlo8Erft98bQo8d9M0+eTDxmm5DGNj
XQqs6Y44OHqGjVlxelIte7h6yG3z0j7NRie+5p8n91HgipTk4L1TbFxD8an7
sZ8CJ1RjLXk82Xjh2D26iAkFXB6/C09zZ6NsvZpTuikFNr9586bGjY2tUKmm
aUGB+t1X1Ptc2bhH7lefrTUFMsV3yi44sbGl16an9TAF1ORGPFUd2Xg+6XGn
0xEK7BXcbXzDno2rXXjbOxwocJ23J0HuCNdfYm5sN2cKiPfVc/7acv3YXNjS
d5QCS+xKd2kut90UbvJ049a7YPEw6DDX7wfP1g+7U2DVkxEbQS6vXVVe43OS
q5/HtZISGzZml0tXj5+igKPRoy4Cl41CSBUXzlAgSeLKn41c7tZvKvvhQwFJ
my0td6zZSPqtxCSco0CLhqtDrRUbRYqulMydp4C/t4PQ20NsfBbQ8552iQLZ
U9SsIwe5/Vff/XYxgAJ/v98/lGLB9cd4TGEIkQIxQc+3ZJtx/fT4a/5yCgUu
7u84E3SAjRKnD+Rdo1GgsltTWNuYO/+9c0+jL3P91lS/9+F+No48sHssHMbt
n4lMyaV9bAx1zn10N5wCeeTjQ6f0uOdLk3ta4nUKRF0Kr07axUbbm28fSkVT
4NkOsdgqbTaOW4ompdzi6p0y0z+kycZrfH6JW+9QQC/lI7tXndu/8or4rFgK
cHSsazNU2fj+skzsjgQKGKm/d9y2k42O+tSYp4lcP1qvTnFVZOPUfMtN1SQK
BPFuLji0nXteFKrcyHtIgZztyWm8cmyUD7gWqZ1GAbMTx1Rjt7AR1fqvFmVQ
4M0doRgJKTa6jutd0XtEgY7pL+aPN7BxJic25L8cCpiQniV5irHxltck3eAp
t77pWJ1jImxU2moeVPaMAlNBfifThNj4sSeNYvqSAitS157avZaN7g8WiNWv
KHDuo+s/KX7uvDk5BB4qoIDH3TUXjVazMXb9i0sNRRTA2yfj4vjYWB198hyr
mAI/7iWInlvORu3L1Sf6K7j6vdpWqPGXhQ375NxPVXOf5+v7QnOBhT7zQcdG
arj1Wx3lN5hn4fJCtsvZem7/nhwIuzTLwhR/daeJRq6+E96l3TMs3KN23f5i
C/e86ac+iP/JwtavA7bTLArcr3+x8dE0Cy/k6NsQ2yjQtT6RIMDl1V4Jh+Y7
uPqPH3xU+oOFGbJTFkHdFEggz/vncnl/j6XZUi8FGq8Xzb3hcvv9TJPQz1x9
3t/YVcXlAKdFwxVDXL17giVLuLx2vTNEjFAgWq2cEMblnMa8ffxj3Pm5NqW1
msvG0fx6N8cpkBiYYWU5xcJuCy/ddd8oUDfTL3/oOwtflD558mmKAvGmOks8
31gYovNd+spPCliJ7jqXOMHCI091YvRnKaBgHGmnPs7CbbK05bPzFHh4MNS9
f4yFM/FIevmHAuH+l9VKvrCwUmDlV58lCtiY7+OvGWVhYujB43LLqDDpJhn4
d4SFvnO3m7qWU0GuctV9fS7rn2ebxPNRYYhWSjo7zELBwU1vbNZQwT+mleU+
xMJelxPKq9dS4fsROcG/AyzMa3j08IMQFW41DBopf2Zh2IHxdUEiVHhQ+6yu
v5eFDu81wnXEqOB6rPafQjcLFTRIc5MSVDh3aIQt2sHCuUfFvjmSVFDBz1Uf
2SysllrWe0KaCjk7/9092cLCB3fM7DbJUEGIWbFdoJGFQG/efVOeCoMVNkId
1Sxc91Mi12wHFX5b6tXzVrLws4/bFh5lKlDnOUUm5SwMdxhdEahOBcnK5MaY
EhY61ahQVLSo4D0xftT9PQsVDQPGh3WoUDU6VNJaxMKFwjfuqbupcNT/6eJE
Pgtrdy42u+ylwsqa4KyiFyxMTjc2Fd1PhY87DD8fesr104bIt7UGVMi3xBvN
j1gounx9KphSgb73BdPsIQuHKC6i8+ZUmNZc+HvhPgsLvz28+uogFe6k8wxN
xrPQpVPRT96WCovSmSsLbrMw9RXo8R+jQmep4dOxMBaqnPBtZV+iwukjFrWC
p1m4xH5pdjuQ2z9in7yOJwubDv16Z0Hi6jErnuHpwfXvh72qvFQqhMk50i+6
sTBwd0hacRAVzLf2ndt1lIUHnlesJzKokHU+yDvJkYUS2wQi1EKpEHm1sOa+
HQvfCyWcT79GhamWpTNJFiyMDu/qd71OhX86h3f2mLDw+IKsg1g0FUQpOXbb
DVjIM5K7N+IOFWqHPxUp67Kw5diP54ZxXD/4+b/9rsnCrGbdrQsJXP19jwtW
q7LQvOTDqvPJ3P7ka2nKbGdhZ6XO3FwK9/0U/0XkyLLQrylnJCydCoVt1ffr
pFgYM3izIjGbCjN1ljlf1nHnb43rlY95VMggbLnxdb4VfZ2ml6QqqKBaMLv3
SW0r3vouN1szye3XltxP4t6tKPs7fthxigoHBEbfuJ9oxXzeNez+aSpcf7N7
e+XRVmwT//56do4KC4OM64esufH6xf5yvDTgydqbGabLjY+0n6RK0EDz0J2y
Qp5WPHC3snuFJA0qZHHPl98tyEnSq7stRYO1o0PKZj9b8M8LmdxHsjQwsujo
VhxpwQPscZ9mZRr0S8wUbfnEjd8aPqRoQAPay+tRS9daMG1owPKrEQ0i5+wK
TBgteDbH6GXuARo0EpWELYkt+FflH1XtIA32JFELFDxbcOsemrCOIw0c3/jz
Vu9pQT+bS3sNztHALLolwX6sGZcFucU43qPBZsKBYlnjZqzZX/xL4gENBAZH
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
h+/mysrvlAoBzpv/b/3/ASXH9sA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qoT+v/8HN24uag==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
JIHnxQT3pXj+H6LSzT0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MfDolNTeW0VsOFOkwPNVcgxUtsv9Eb/Jhrs1oX7sBLGvfsu19y4bDqCmH1Q8
FwPJoTWhMQ/Z8CGVKkXlCzFQ+jKzWKKR+DfwsX3DFcJv0vIrzmdsuNlqg7xW
aQyopKjUV78j/iq+bjasjwGDexW+rnNseNun+UgTFAOGZT/paUw27JizStKi
NQb4H6S/ecrOjpMXokNt38SQecO1WlaCHX/rFhXw+RYD023RddGb2fFCxrY6
/7EYuPSHc7ZpGzsWMwzyDZ6OAfObVevfGrPjnWW11ZF/Y6Dq3lA2nx079gwY
8IhhxsALVsGtG13Y8WP+lOP6LLEgLG9Cn/dkx2+bylR3cMbCypwo/8QQdjwg
Z/SvkTsW3gUo3YcIdjxx4P07I75YkMh1yrgTzY7/dIfdbhaIBVU9yZLmOHbM
qr50xFQ4Flwmt8/l7GfHgifPOjwXjYVn5mZJEofY8crvSsqWErEg6+IV4XmU
HSsZ1i+8XBELP51L2sOS2LFWgW3nrpWxsI9d+pJlCju+x/wckB4eC29MBa0L
tDlwgsAQ6yUpKhilyUuf7OXER2qz2hRlqBDkdDLObJATJ3lvO10uRwXhCMGF
J1858YnyPDmsQAWdyT+vWMc5caazybDVOip82DMFE5OcOGdx5s47ZSrILyxR
Hv/gxPk2NnpjG6kQoEMdtJrjxAXzjKVYdSr8G3y3cd1fTlx45VbrgiYVyv7s
1pdjcOJrpi6nUjdToeGG5lNY5MQl02yOQrpUOH9ry+P8f5z4dm619MWtVHj2
Yn2dJjsXLt/uO6RgQIXi7WN9ktxc+H7W4z1bjKjQWmFvMCbMhR/ohG5GO6kQ
u6Kk+KsEF67vl1iwNKNCweynHjMZLtyY2oy7Lajg8Do6a8UaLtysFnvC25oK
essVnG7KXPj5+1W2ozZE/7S1OM8mLvzySLtErB0VWP/JHF+vw4W7XivfSHGm
gk+3WFyVCRd+v/d9mKAbFb7caO0QsOHCn+SSNS54UGFQ1jWpzZkLD+0ZaLjr
S4WM25c19EO58E+B3I9vw6hgt11AuC+HC8/WGl/1iqRC/pad5kKXuPAf71/B
I1FUyBqU/mhWzIUXy61n6XFUuK4RmZT+kAuzuNAfJe+jgulrhV17m7gwx9LN
YwIJVPh5eSBTs50L8+9mFVxzlArG63SDhga4sNCfynd3jlFhzmkrpWGUC4sV
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
0fmOSERTDg+Ebg7mnK42xvQB0+SNeTxYcyLpe+kzYxzU2pbTcosH1OKZj9RW
Y7T1O/x40x0e2Oh3r2h6bYzHThf0tt7lwbrdc5cfdhtjd2PXH69iHqQnOqhu
6zFGExEhtY5SHkTkBu4peGeM/JUm1t7lPDAR9d7a+sYYW+k+WzorCHt+TrXd
xH2nVxQX4/OAB/klTUbfm4yR+i3/ZFcND7JH6jpMnhpjvV5nvh/yILdyr0tL
pTGqBPx79raWiE+/5vGCu8YYfs54wL+OBwkTXtPK142xqmWLUM8zHqxIZXw1
P0vcl043HXqbeCDyTth3Lc0Yi9jt24Je8qDTQLowdbcxCt6bo/e1EfeD3JOY
uK3GmGPkVfzxNQ98TwQ3v7UyxmGpWcMvfTy4Npv//OwEBR3WGLiEf+LBz77L
2nYDFEzlewR/G+CBqNLsHXhNfD9/ZV8aHuLBvdLwuMOVFExc3Hw/coQHbSRz
vbbbFOzcNfVq5CcPZA1bBa9kUpD5eoPM6ARxH/0RP1Z3hIKNMnSTA1PEPC6L
cF/CpiDJLcttbIYHhr8vG5P2U/DRg4nDE/M8CAhoVTrvT0HZ31rXaYJ8eCNp
okXyomCIqdvDSWE+NAwsCqW4UlDs+tXp6QV8ECtMNOqyoaBf9zMlthQfYqTT
G5nmFMxXGLP8s4gPdpnr3l41puCcO8mTK8sHB7ttWs76FNyYtDbqrzwftoj6
Ou7UpGDmo5gUvhIf+k5SCqZUKDg6fSnvnwofOiKEfgspUNDZsu5pnDofHk9U
UeOlKZi+72e/oCYffDuLTx6QpOBgjtq/BG0+HH38tLdVjIK2vS4kET0+zGVX
DV4WpmCKSrTdEQM+rP2x3rZFgHh/eGb4iJH5EMkJVt01T0aTlNrYZGM+/JQ1
W+IzR0b+k+9pC0yI/DiKnf/NkrF1TvnuMVM+pHsdMHCbIaOetdMLSQs+FG0y
DXCZJuNtim9g7TI+qJ2cfHp4ivg/0oj6xbLmg8LrI1naBFcvOpxoYceH/6r2
WcsRvEbgosq3FXw49Nr10GaCW8bu5mcBH06s4Da9J9hn4OlKPyc+SL+T0r5L
2P/Q1d0qs5oPpR6BQo8I/+GNo7uereVD3dtIuYV/yPirWmyK78aHzUmp/DQi
fnYhKcXanQ/R6bVDa4n8hLMtNX948OFiHDfTmMj/RLprUa4XsX5Hc8pSiIJK
yYEuO7z5QJ7pf7RDhOgHi/pa0ZcP/VpbXXKJehYGZs0dDuCD1b6GeqYUUV+v
8lMrggj/m6jFfxZREF2a9MZ38uH44nyJY7IUbKdMu4bs4cPfFhtukRIFt2tI
96hF8MF73cn1zqoU/LzIYH9bJB/WxCjMN6tTcHJs0znHg3wwbugXqyfeE4cG
dlOmqXzIfJsvbaJHwQVvOA8KGXx49EuUdciAgmo1ef1aPKIf2mWnP1MomF1Y
Q319iA89VZpBY4spuDi7Qzw1gQ8mV7aVDpgQ85X8b+nfZD5E+aXE/U+fdSyl
x/dS+BCr0riReHuhR+QS78iTfEh+uH/X+WUU7Ap0+qKfxoea3rm701YUDPby
Zb87wwde91jMSmsKfnOJWnT2HB9e7MtcupvQ/0Hrw1nrM/jwrOzelRhbCs5S
Li4TukzE6//sWrAdBQ9rFNZXXuUDfeagkzXxPl4oXbftQBYf9tN1KsYIThd4
953yHx/CJzJ2X1hBQc3x0UN9uXxIq7RvNXSg4I0BMYWMm3xQ/BR24RrBZm9I
NzbdJljcMVxsJQUrGi3txO/yQVRZfnI7wU41rk0Pi/ggfql18jrBjYWBQfRS
PsikDOp0E7wlmzq2tJwP97fuJosBBXvSU44MVPBhBX+olExwaHKW6tUHfPiq
tDnIkeARVvlt74d86N1557YXwfTIJlj4mA83NzgI7CB4PvBj25MnfJCfMMzb
RXCy13Qop54Po79jX4QRLLtaetryOR/OjrDpewi+aG1wfOgFHxbryJz837qe
sb1WdgsfCpRFmkMJvq3hWbytjbhPdva9CCHYSjpstdwrPhyTOjAZTHCNALer
4TUfKrd9TgsieO346Yi4t3zIbda5H0hwy0DeX5sePuSo2e/4H/u+qUn72cuH
ZX9ueP6PE6+bsuTMDwFFMO//clHEtZ3L4g9B0tz/Wx8KHn319N0hsPz/+8/c
1jFYohEHev+f/w8kM1Dz
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4f8HcmE33A==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
pEKUKESWCq10ylIJqewhChWKlBLhd35/Pp85M8/MnGfm3CvRpYjsxQqX3mhl
g2TKswXlVCXEc3ww+mAHG8qvG50o+sJARY3S3NLdbMiUODTMF8RCVhvtye4e
NozWfviR8p2J5iLO/734gQ0zGoF+6U4MlNfTdMLyIxs28wqLm1groX3blk4K
D7Fhl9PpdP8B/J6f0/Nr/MwGGU77IusJRZQzxh6JHcH6cTvSnon3xW6je567
vrFBabHon6THDFS+db3Lu3E2uGZY3zU/wULS8jG2ByfZELLiSPUzAQLFrhrf
N/6LDd8NnQ1DjjLRJJetMfkH6/8/Bw89YQZyGq/euXyGDVdmli8MmSmhul4F
jfR/uF9hf4SzhZWQcmPi5o0LbDi8O7nns6ESSnv4W6mCm4S8qi27Li7gftx0
ltXnJeHFT+2vy52ZyOdS/bo3fCS8/BkSI+FGoPZTyqtdlpHwafpuL+VAIJ2g
i8u/LSfhjNOlDUVuTFTgNr8oXIiEWmvZiymiDLTKwvPf0pUkCKY9ki72U0Js
neZfF1eT8MekvKNztxIaJtS/ya8hYSbiGLdWnhIyl7wydGctCfnJafc1Uxjo
AT9f304JElb/kuWdM2Uh2b++7c1SJCglbexekaGMEj63NTvJkOA3bWA2rE2g
323az0dkSdhM1Xc828xErrU3noRsICFgwbvwuxADNdwRvM+nSMJnvrLID8lK
SO3aibJUBgkhkTa+WmlKKDOpt0CWIMF+Re9knwID8VG7rpWpkPCFyXS9doiJ
AnyK00GVhKCGs6/jHhCo20E0pXELCYa0v++bMyrIwISMd9hGwmxfZ9TPChYq
3jYU+UWDhIysus+XRxlojcLe8GAtEgYj539dwPPEEakI5NUhQeBje0bUUyU0
wiPlk6JLgkLo7OJqHgay/BHtLmNAgrNcOtd8LwM9/jDmVGJIgqwt7Tp5jYUU
mq2stUxImPRYcfX8qk0o+fHjvQ27SbBwCxDQa1NGM4XyhnZmJGi3JNb38rKQ
e3oCDJvjenvN4uMKGKgp5pd6kCUJtsUngvtXMZB6sJMKjw0JDf5rrLNXMFC2
e+3GZDsSTi2q4XhnMxC/JUtG2pEE6eauIu9JJgrSTV176wAJ41nmWcP1yqhP
5d8KTVcSds26PzklsBkZSbsve+FGwranQuetXQlUJtDIbeNBQrfg4vlxT7xv
ZtVmPnnh+74rHVlMM1D018uTx7yxfjq3hV7bid+LjkWjCz4kZK72uCWdykA2
9Uc/nfUnwcGUJXE8lYlQ+bv3EsdJqLuT2/ilikCM3B2tN4NI2NiCtK1UVFHq
udzGbSfxfdcWbZ9eqoLm6eV1daEk3MnVqOHdzkJefoFVlmwSGuPrPZb8Y6AW
p/cVAxS26zvOyZxmIM3d+iX+ESTUVBhk1uB+XdcoypuLIqH9h9dcoi8TCSmu
vnrmNAnRgn7BvxQIFLIm/JJ4HPZvrr22/fUmNMD7KSn/DAkMR6lX56hNyPSn
aezWRDxvFXXGgfwEKh+4w6lJJiE3REenKpyJ+CR6swzOk7DoXJv+ik4GsrNa
8qjuAgkHgs14Kl8zUOHZzZ2GaSTsMFWsqjzARLP1jlPPM0g4X/FV3uAuC+3h
Or3KJIuEiasjTXL5KuiKRplKw1USlqj3Bgr1b0YTx7v37M4hgZlobD6wURnp
3eL1brxOQr1ZnXvMBhZKHVKO2ZtPglvM+ju3gImGpe2vN98k4ZCG8UQgDxNt
t4t6uu8WCbvHrjYrOzBR3LnivpYSPI9H7BTNXFiou6Fj1uI2CS7RCTsko5QR
i5dH/N1dvC+Mu5ovO25GlDZL3aqShN7ktn4NdRXUEmxj2XafBI8Lrif6X+L5
LuME2DwiofPfbM7bm1hfXwvPdlRhPYoff+Ovz0T1sm2FdogEc3qrWM4xJhJz
Wnje9QzrzUO2yx1Y6PAFpSGHOhLWSpjkuIwS6GGzJU/PcxIk2w7pRx3fhASW
UusPNJCwMCa41KlNBTnrFmj1NZJw46FbRa8l1mfYW3uX1yTc/qmwWk2IhbjL
/wX3v8H5rVVyOBjHRPu/KaQebMX1+SzvsUtnousKFrc/tmP9fLCfFcP8v13C
mw91kRAet9A0l0Ug4/Qbo4PvScihijzLulRQxtvXSz37SOg4Yay20KOCRpfP
bPjcT8JVnT9XCm4TSGuXvP7hT7j+guafV9xYKJEyc/06RIKVqVKHThMT9d8L
Ib2/4H7kVkPNSyZS/ZGTMTqC73/LGqWX+1komtF0z+cbxoM2Gg/YBGo79Kf1
2zgJWQUaVbOaKkgh679Jv0kSdiZoOsrHq6CQ9t3CE79IeK19cqKol0ANwsGs
Y39ICNZN3DOE94ukSbbJ5F+8n6+VXInhZyG/yAbPwH8kqDius66dY6Inj35F
/ZrH+3ksdkcxfi9XTElfO8FNgefAWXXzYAK5KZtU/15EwVymNlnQrozKvQLf
n+SjYH3ZqgdzMiqI71rW9PRSCjQcGk36+glk1/1cNGw5BQah4nZDr1iocPWk
6qwgBW+5rJ646rDQvz2S5uwVFFTWyu3docpCe08b+s6touCWTne25hUWuvIk
IJ4SpcC2z2qSQRNoYjojf0GMgi98R7hensN6V62r5ayjQNM+vPdPlTJKPTo+
wC1FQZ+hxzPRVwQavi6+ELmegtlat8N1gyy0vU9fkleWAq/xxY17fVgoXsxP
45Q8Bc7JNwVPe7DQe/M0G76NFCxiZcswcL6s+GeBMUoUlB2asz+RSCCqZix5
KQvnEx1ddN1JGbX8W1MSp0zBK6NSqPZSRrLquq/4N1NgMm1TWVZIoCJFW+dn
ahSYGhecejvMQlskfH+EqlOQXRkq9jWBhR4LRkVv1qDAV3H1tEA+C+3iShf7
ugPX0/XH/yaDQM2TJYXZQEGj8K6GwSEC2QzVatvpUvBXU1qBS0cZfejobhE2
oCD87TtfyUYCHW6YOPTckIIUrZfEpCyBfjzm+0OZ4H70r3sET1gorFQyXn0P
BU0R9+IuV7HQohxVqe9mFCw/GibGtZZACanGZTcsKOhwFNmuUEAg0Rhn/QNW
FHC81T8q8CmjK6FB7SK2FPj33w5a2kIgBZ/4I432OL8HOjOTewhU6pz9L8oJ
5/fRJevcGO63RWXSDhcKHr07VejcxUJIv1H250EKXE3498mIEMhE/WNFoTsF
Qqvnl73C9/tWcdrYzYuCAPXkHq5WAjlKCPWIe1NQVdwreLiGQIOC8v5vfCio
lni9scaTQL5cmjxx/hTUx2RNWK3C3wuT+y7sPI75nquOn51iIXrIQ3E6iIIs
C8YtRVzf0s7wR6UnKVC8QbBfeBAoueGcmVcYBXc9I3I6iggkXpU/IE1S0Hpg
H3dyGYFySquC2mmsj46AE1VB+D3KebckMRLzy9Y8WrOJQHdTv2bsOkVBTFyu
5WZhPO8xC8RcDAWXP3ro+a8nUF2o6NPyeAqChyUPj1oRyMyHaeVzloLfSXki
amcJ1OGs+1kumQLeJNFzD/F+cbWwDXufQsGLgei+kHACfdX3FTx/gYKNN1dq
XTYk0HH1qGzTNAqOuvv15soTaEYxXY3nMgV5VmtEZ/B7FSVRWv8gi4ICqfKU
+yYEEhCqsz+WTcE2MG/Jw/ObyvV+TDGXgoPN99R+YX6pnxN0/w0KimRV/5AU
gfKG+FanFVCQVhL6cZktgVQ6JfP2FVEQNmBiqrqVQPcbVDWWlFCwU8p5K5Mg
kG6VcWN1Ga7fttxKWg/vm1Jnl+C7FNy3Yxc34PuxzAmaJCpxPqU/ao0iCdST
Gn9q6D7Wq0tA72d83+4x2WuzHlFgHbnYIRB/j34LrSyyqsb99hDJGtxJoGCf
RhB4SkFgE5HB2UygeeePb2pqKBg2SNIUwt+HMRbT7uH1FAgzzu90dCLQCgOh
adWXFJjVkRWRYQRKV5c/M/KKgucZ+UqXOQSSVdKUzmmmgBiwvPXiCJ5PCfPb
9m8oOCmXuM7HmEBbhDwNVrZSIEX7bDLYQqAqLnbHi3YKVh+ue/1bg0CGP895
c7ooSJxX2MZtg+dzKH9uWw8FurF71G6fIJBtZ1XyeB/ed+hcUhfmy3bmzg4Z
oCA9vidiYwCBRgYNSrkHKUid1ktV3E8gtaOx1fHDFIy+QDnauB72j1dNq7/i
fcL1+bs7rr/+pHBv5igFEUIa+WN2BBKe3z+24TsFgjoxUeM4nl30xdmSCQou
RLkp0P5Yr/zd/Nt/UjB4y2pLC85vLFlq3dMpCnZYMEO3GRBoq9hBJdNp3G+v
6ONce/E+y7q+/d0MBSwHw+YmPA8v5L4YOc1R0BN8RNvIh0CrCpm2QwsUTM/M
5m3DenDc5O/px0PD2Gj4TX3cr+uVd0784aUhUW/E+wzm+671O5qzhIa62CuF
HNzf7TUaqcv4aRjn7K1pdSZQhAmZmyJAg8NJgfLJ3Vgvr9EdCWEaFhUL3OJY
E0jEhvfZ9ZU0sAtS/m7xItCBHqM3hAgNMod1Xyx2xPp0O9NfuYaGLVu3x3ng
/Ce+NI/riNMgyiWmsf0AgTT8Vy28kKDhR5DzvmeHCBQ5ZS20X5qGR3YXZo5Y
EKgxPF3qvQwNsfKnGqYxnyhPL8tdjgan0huJOu4Eco6V0fq2gYYkza0G2the
IOS+O1iRhpER2ePmeH5/pOY7LDBosL2ZJKyI42tKjB6JJWiYiwzYGIzPR19T
Dl25CfPPLbOR/L8+Nh6PzVClwWyZ6E1+rG+xkopLcltpeOfTnaWFv09ct/zN
u7WNhux9ckdH8f9X4UOtyq2amC91fnAH7tfPnZy6ai0a9BpueJVivWg9r2k1
0qHh98HxdEf8/X1675LBFl0adr/mCTuA+V6/M/1pb4DxEZu+E/YEWuuQyPPJ
kIYLepejPXF/3PrfrPQxocHUSWxkL66nyFP0v6ndNFQkjVfNuRDo15jdJsqM
htxsTrQctkNgps4SCxpe/2CGh+B8Yv5+MEu2pMHo0OX7JOZroeWcxW1o4JeW
1x/A97OOz8s3x44GDt+pvrdYr+4JhWymIw12eb+/zuN8ild9P1N+gIZlUhu2
KeF6f6dtvqztSkOjx1VRNWzfuf5EYb0bDbc1YD4Q2+Nu3H+wz4MGqcw2Xxds
f8v896LTiwZ9IxvuLowl7+h0HvTG/RAZyXXB5z22R30e8aFhtijQjcL8JdX1
vwP9aZi6J7R0Huc3bcDPN3eMhh0b/XWbcP66r/aKng6iIT3h3HwE7k+8xTl5
4ZNYf2n5eh/wfbZ2tKqlheL61vo5H8d2Kee1+v+xaXhWsSJYD8+D56Dj/kKK
hp1XUuA65i/zvnpQLYKG/3ycbHkwn9ukxrcl0TQE/w1Wt8d8ImGtIT2ncX/E
VnT0Y3s9tz/v7Tjcn1xj8QiMT8YtSz6VQMP1iIi2S/i84srrEg5JNKwteWUp
juN3p0G+cgoNE1zLdF/hfZcg06W66AKuf4NzrDeuFwoCqzsu0VCm7XJnD85v
QkXI9FYGDdwBbhfCcfycewVtnCycj6P+Y2Xsb6Wjf9A6mwaB7b0u/tif73nv
mFIuDaMJh/T0sf99s5CQ+Rs0HBPRWqOL+b3bV/G+K8B6sA3k98b+ks7FSflF
NIhce5/wDtubhowk2CU0LFVufrgMx6N8P+aZ36bh7V+H3jAcb9MUW3VDOQ3r
btYTHvj+PrLFqv9W0tDOf/PfWZxfKu8dk+YHNPh8fXVREMc3TNjTlvOYBueu
4c5mHH969WfXk09oAHMpX27sX3g5Ymz3M5z/5/Nd73B8JznJEJk6Gtp0eNse
YSxUVLlo6jnWV9PqDRE4H6RqkfSygQYxg/tnr2H/4w9H111pokEwKSDhJo4v
p3c673gLDQGS7aKOOJ/WlzKqRu9oCGukPxRhfNriUZVEOw0NcfxFZRhv77I2
meikYVe8jFssxiOuE6217/G+ufif5D6MM7/Eu6b3Yb1HPJEXx9gsYMOY7wAN
asrDpyYxH9f0k5N6gzR4F3UPfMD4Du2wSOwz1ntLQtEAxu5LphJHv9JQ2J5b
8hvjNUlJ69AYDbXlFRX/j/diDSMvdZyGfBP5Nh2MQ6/Ubj4yifntx0/ZY8xQ
cKnSnsL77bKHqyXGPcV/jVdN02Ce+XvX//0Tt6a2Ds/QMGisZ56J4++sUnZ9
NIf3ddj95gHcn9CcwSkjLg64ZMaKrcR4//DtHXe4OXB4p/6nINxPJoOOkFzE
AaeJjccOYszrt+f5aV4OoLDMzgWMe2+LC/5YzIHLDwIuieL4lVPD+x2XcOBS
Y/jkX4yTNMrT6pZygJ85+Ov//ThMRvSp8HNg+KbW7k+YT/epmXzGcg60sAYH
ynC8dYslvXkFORCaWbo3G+NJ46+lfkIcUJ81aPyIz79KqJzqFObApv6DXlM4
3vWWqB36Kzkwqt592wJjtohFRPEqDsyUPDZ9g/2t7aSfi4lwwFH6Tno3xsqZ
owKRohwwkdbUDsDnl/Tf3z+2hgM2qfUfSzHulzudZrOWA/ZiR8IEMN8DL8s+
JM4B7vPyKiPYP6VIRp4pwYGLH6tvZODz/wOekSnb
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFmnk41O/3/2nRDLKU7MvYo6yh/UTJWkT2LYRknUGatWxFJZUoLbYiuxCK
qJNsiYpsCUkpZalUSKnf6/vH7/35Z+Z6XGde9/Pc536ec89c18h7h9r6LuHi
4moiXv7vvfx3gs+swIdtovZV98sDdfEzF8+roq0i8P85+6oovXCr0n/87XFs
ZPQa/f+4bZvlIdn9O/7jOfVM7bxS4/+4UZlveRHF4j++965bWq1oz39ckp2h
l6dv/R9LCWhfE7Lc9x8feCp0fe/v//ES9WjpoP02/3FOwrfrp4v+x/SUf0FJ
1TbgSdY/ZeSri3uyVm5PfmQDD8Ub1iS66iKlWGrlpXYbmLHlOjFso4s/76oN
XemzgbOFNT82m+miyUcvmYKltnDXAMMEFHRxfHdXeourLaSMS5YU9+mgG+cT
V5qfLSyjZc/XP9PBzkouH3+aLbSubEh51aSDtYpa6uR4W3CS4jHSqNTBRO7E
aosKWxjNE7tneEEHdep3P+8g7Qc+g5O03j06yNSr4equ2g/ctUwQbtZGfsWs
gyOC9lDNjCh/flwLYwuC785K2MObuOK2YpoWLmht5VupZA8vZKX0Mw9q4cdt
vRWbN9nDQ9p+0mNTLWxw4F9y0dMeDuwp1uUS1kL6aXrW7nJ7aGrIDo67pYlj
3/YNFdo6wFPFY+ZLezXQjS6r88jNAc7dXkiab9XArr8TcX1+DmD08GLr5H0N
RL749ctYDvCLrdzWla2B15XrWe43HUDsZM7+W8EaaOusJin0wwGOZ+RUH+HR
wAfI7Xgk1RGsx9p9eYzXo/D6YzG+WQSb7I27vHE9+lxeKLEvcoQlW/607Fi3
HvlCvi8zeOQI3V2CHl2r1qOT1FjF7KQjcH5vtewfXYczR1oF6MZO0C627fCH
uHWosu5cM/O7E3QeUqp1fqKOjEt8MwF/neDmxfbRnHp1bOdOkHElO4N7g1vH
bLk6hvdHRWyVcwZmd/LXqqvqiCfCFP5YOMMm/XpKT5A6uozYH+PccIYlBWq3
60XUMSlV2iDKxgUk/IJ/VoSr4Xtra9tqVxdwX7xklxeghpt5Y0ImfV2Atszj
bboXET/28ZYT0wWo7uqTidZquMW/Qkznpgs455ATnNap4dgWs19vf7jA1gM8
ghGja3HbSHjdrjRXcK+fPsVrtxYn1J/uXPHGDYwme85nuauiW36j8J0DByDU
uHlbUq4yRpRu9Qvg84JlgZfzOVOKyP3Jw6XG2hsm9k5RDwcqoOxDD+Ndtw/C
RdNr9aI9FNxFjjt3gOQLJUUZfz5lyGLZhvBvmy384JsVibpzVAqLfoG5dd4h
uGd+W6VouQROZ3bfVZjyhzb5X2YxdFF88NZEWscqAB4GLVBbv67GtMvDbzvz
A2Gj7aEdjo3C+FVmn/ubkkBQFDBL6KoTRvOcR/2TFYEwLtRjYl4ljAtlOc9X
1AdCTS4nb+0tYXRrC6jf3hkIua2K32vjhZGyOJtW8CsQPn7b+HLEQhjzvQX3
RVsEgah3qyZXvxDWaBg+0J4MAqeWxLPtK4QwSuWUctG3IND+qDh+h0sITeS6
EpXngsBsd83Mju+C2C3k4yq5JBgSfuhQ1vQJ4tfv8fNLxYNBTIL8KDtTEFVq
n+v27QqGfXuqhbkMBDHZ5EAe51owOJY6/e6LFEDnHfkC81nBMKL4XMEkUAAp
m74dCbsVDKUfjipVHBDAErVY40PlwfAEJuI5ZgLYyp/3dl9LMFzls3vVKiGA
f7umpZS+B4PC2hPVkfdXYsCBY+fbLEKgsXnsyacVK7HiuMLXj9YhYL/uct3u
v/y4kNlsvdw+BIKOlmrW/eDH0yMCgoYHQmDttam0n2/5scAr82xVeAjQYm5P
sur5cfwgns66HgLZOwW+UI/yo5//khOR0yHQelgs7d4kH5Ym3Hp/8XsIXKpZ
z1p8x4ez+RbG5fMhoFOnPGH8mg9PfkpeOrkkFPJzTwy+e8KHuQGKMV5iofBF
N0kwKY8P3wcZH99jGAoO6XfG/vnyoRftJEMhORQevXu6vfw7LzJVbyuoXA6F
c3yG+YZTvJg81PdU7XoofF9+LOvVB15sMFeT1bkVCml+yo9lB3hRQaG9YUdt
KIzk703qQV4c7RLmdx8NhYSFtPDtSby4kLClyvNjKAg7BRuNxfPiqh0HPXwm
Q6G+W4jrbDQv7iyqLAucDYXyg3G730TwYuejIvXty6nALezlUOzKizpXrZ5b
SlCBKf1ignsdL27/OXqzQ4oKXvuMBbSUedF831G6tSwVGmUCb4bI8aIXT5b8
fkUqrBR9R1krwosXwr6Fu2hQobpPau7CXzJ+s0gRP2xEhQ/lokYGfWRczF07
9XkXFVRpvaHXushI5q5/FGRCBcZafUnBZ2SUvzsWQLWkQpeZZL9MExltFDfW
H7WngohB3sG7d8hY/vuV18nDVBDbYvTh8wUy/hB0KYYgKqjfr9Q5cJaMm5QG
ZmdDqBA29PNHdwIZH+wZOHMoggpP3lXHNBwnY1v6QJXZcSpktPeerg4m48oK
Fy7uGCpst5cjJiAZ9zUPWNTEEXo6Ly+3+pCxd3rgjdppKkh6vfWbdSXj6I7X
ZL5UKmxzCPz73IKMynaudo8vU+FfRqBMgQkZ/f1fZ7CuUkEiZfL8hZ1knD7/
esNkJhVK1N+mpW0h4++3r907CqlgDZt0UtaREWZd80+UUCFTVusWaS0ZY3gH
Z7aXUcEnouhushIZSRsG40urqCBqWnPpkwwZReIGy88hFXS+6munCpPRMc3t
j+ljKtR1lpwpFyDj1eJBE65mKjRo1a4f4SMjpWfwNfUpFaQzaPEhPGTUUBla
bttLBcur6/fp/iGhSeuQs8gkFWL9b6U4fCLhqUH3nPZpKnSvi38o9JGE7V+H
puO+UWF+4oLcs/cktJUYjv05S4V7p80MbUdIeCBguKSXmwYtWxL9TvaR8MYx
j/mkZTRYMlZDP9BDwg/JwztNV9BAyzayF16SMOj+cN9dfhroMMw0RZ6TkM7/
hvuKGA1S9X+81G8hIbsysVVBkgZV8Q2H2U0kjHLbcq5YmgZOXjkPnz8mYXxx
qjTK0+DUmNt0BpLwtN2ud+ZKNBi3iamVfkjCpD9fC16q0GCN/+HqgnoSXtqz
Z+PHdTSgkhWHftSS8OqPX4tUTRp8naIfulNDwvTreY0L2jQ4cu6Mbew9EmYZ
25+J20ADA+vtsz53SZgzucRWwIAGIaV/aI7VJMxPKRNP20SDV6RacbcqEhZv
83gjv5UGNnF9xbRKEt5JrAnSN6RBYV0640UFCav1Dm14uJMG8+Y29uIE1w6K
LJjtpkFZJt8QtZyED+IasMuUBhtyKnb2l5GwYT013s2CBo5eJsVWBDd3y1h9
2EMDiaMtli9vk/AJ+6kI1ZoGJbM3n/gQ3K7EeP3LhgaHxn2ilxL8ol3lRqwd
DXT5d7uUlJKwO6Lbf6UjDSJy/tC9Ce6XjtG67EyDaO6wRnmCBxu1ZiluRH1O
ab7+VELCN0FDdYUeNFgxc/lFLcGjImdi9bxo0Hw1ty2Z4A91myweHKTBH4rm
/jCCP/t8EDLzI/anO6/tSPA0f0pfpz8NMi2mj+wkeKbSKMM1kAYFzSO5OgT/
dPviMxZMg+f0ZCsVgueXpa8LpdIgIKb3hQzBf4otZubDaOB1/LaCJMFc9vP3
Yo7Q4LiRZK44wcsWc4/z02mwym71NSmCSbn7TS4xafAxLfQMhWC+vdwrKRwa
pFfKv1cjWOBn6cuC4zSQ3Pc2Up/gVeluVzfE0CBcKrFmN8Giu3m96uOI/Qmv
+uhEsOTUXVXTeKIePEvdaQTLpvpOvzhFgye79XrOEiy/fXWVSyKx38fy9DKC
lcaQ9T6JBkFW0on9BK89G7Iz5AINzr5gTqwg6rteX5o8f5EGJzN8jIBg7aEn
z6Mv0SBl7IYuh2C9E0cv8V2hQeyd2gNNBG/UUHZPvUaDLXuXZIkR57mlp0tR
LoMG/F9I5REEAyfqc34WDc68SfYdIninsma57k3C70zTHFvCLyYdr4/W5RJ+
XSbi2EOwxZFTYJJPg+RGSw0/wm97ZTYuf1FIgyulhk+WE37c1/T+qXMJDRq2
1LysJNguODn53W0aWE7+XhJxh4ROawydgytoMEn79GwX4W+3+im5uUoaDMsK
5ioR/j+40ryEt5bwp/vfTEmiXzJCRj+11dHgaVP0ejOin/qfs1TOPKQB73P3
pNNEv1kll2byNdHgWl7Fur11xLz5bjr4tIXIr0C1up3o10a7t+KJbTQQ3rOn
8gDRz1vERJL5X9BAcCZOrr6BhEfoJc/au2gw62veeqKRhGWvTPjO9tBAVcDF
26OZhMrXGXErXxP9aYY9W9pIKCT/JlLgA9Fvd//FcrpIaBlDv/NsnAYyZxVC
b3aT8OQ74a9JE4R++iPX570k/J1rfFjwG+GngqPVeq8Jv6sXugr9oYHDMf09
0sT8q9M7YrhqVRh4TZUpiM6ScC5VgNMlEgbObRvSPOdJqDuXV5MsFgab3Tz4
yxZImFczoLtaJgyWJyo4+P0jYTIYKousDQNzYe8UJzIZOzJfeXWrh8Faqefd
C8S8JnGHZ6RohMGZ/tTpUmKecx7niq3ZEAYidz0S7ESI+8WMj1cUwqDUh0u7
kkLGmwU5Jr2GYVD1/UUdmbgvhnkh9tKuMLgvZ6nBVCXj/g7qH1HzMFg9lH/y
liZx39j2TovZhcGIiv0zOSDjGrfslxIBYfCV4yWx05O4P0mLeh1BYRB7W84k
lbj/XCqdLkWFhsHV9JrscX8yZvELOX+MCAOz6xY6CTQyrq8/Nlx5PAyU5wbK
jseQcaes2yfr1DAghS2LHL1BRt+2uxZL08LAIm3Jxf5bZEyIXF1cfTUMPOXC
fjwvJOOzZ20hMllh8MJrKq+jgozOxzf/+FwYBqeyxhIdHpORvS7VPqOEWO/+
+ea8FjJm9H2ttikLg/0rhQ4Jt5PxvVY+415VGOz44HVwUw8ZqSOi/05gGDCr
H6SSP5HxYmKY5+bHYZCAvur202Ss3vTs0WRTGOzTP8Xb+J2Mf86fiNv/NAxW
ZLTuJf8jY7zRD7J8bxgcLNsezS3Gixk3OkXqJsJA6mRm2YQ5L7b7JKrPiIbD
VKXl8u5cXizLWUM6KhEOXbOiOXcKefHi+4yx31LhUE8/OnPpNi+6+JRnLZcP
h/C5FHtGDS9+PNgrKrEuHF6QL61SesaLbTcP/EjXCIc1XwUbUl/yYum78U4F
7XCwemTPUn/FixEHfyeu1w+HbVWtQS3veXHJQcpSwx3h0Hjxp+38Ii9+uFEw
0mgUDmW1ujWly/jwyajuA3PjcFghVpBxlo8Pz3vvZuw3Dwd6zOPO+xJ8KOsd
8MVvfzi87KFcY27kw81ela/PHgoHx3xHCf8IPpTO3l6zKiAclEM2bG1h8SHX
2+ZLl4PC4bKS7kneWD5s9nxlk00LB+mj9T4bLvChnefflkpWODy+Pe44WcSH
1ANmla/PhcOloxAdOEjEMzsveCaHw8oUyUP7R/lw4xuX0LEUon4hp1KNx/nw
r0ew+pcr4SB4e/ik8w8+POORnLUkJxy2tsSKD67kx5AMqWPxt8LBgpJ7+7oI
P9oO57jyF4RDh/v7kFNS/CjucVdUtDQc1JtYZybV+PGW+2Ci2r1wMKU+2thp
xo/oYDPyvjYcdvy6vDfbhh9fWzdvyKoPh0e9r1vSXPhRaGfZgOjjcHCX3n5t
LIgfmSpxa5c9CwfPbLkU/WR+tPqyrnH4XTi4/DSgLhvgx7ko1u+LghEgd582
HeS6Es1yJAP++kVAoDRJvoUlgCtf19vq8h6BLv2//NYHhbDv6fdArcIjMBzd
w16TKIz+vOJcbY6RID6odmV8cBXKbM7OfPwrEvZYMERvrRTBK1XitS4FR8HV
zfraqP0a3KTw882+vXRoPWY1tJ/4/dg1bDX00poOlhP5Fm+Oi2LwtfwBB1s6
yGrZaHLHiyLJaUn/Kzs6MDpGFhzOiuINEbceN0c6TM036l1OFsVtnVVdb5zp
sLru4MHrl0Sx76zgC283OvDK3NMNvCKKYRaHO8Y86JB2bPG47jVR5F/xuM3f
iw4tqlK7d18XxVuPpVsnDtJhxydFL8F0UTSKimwK8aPDkU8/F3kyRHFw24uG
b/502P3Op+V6pihG/lLDiEA6WMTfUNG4IYrC1bH1c8F0sI77vuVHrigWhw3V
Mql0+LBtpn95kSiaaG28txhGB3JLAseiXBTfTpyvijpC7C+tNy76niierlp/
piydDt1FT01pi6KoFHYyYUMWHfoGvB+6LhfDh5ojJ6pv0OF7wc6h2yvF0GVi
c+zmXDrcD80zHFkjhj/yLkbV5dEh1F1H30tGDJN8pjg7CungOT7SW68ohmry
pqyGYjosPKhtLFwrho1DWfTdt+nAZ/h6bNV6MfS4unCktZwOAZpHyqU0xXDe
wS7cspIOp3bdnJbTEsOLq0upz6rpULS8rzabYM0XK0JsauiQdHNZkoG2GLYm
egV236fDPE2wnKojhgfN7/s7PqDDVVfXq082iOHf5Wv8BpAOKrff7Di/UQzT
GkIOuj+mA1RtiRzaJoYbjrd6jjTRQXDV29Rzu8Rw0MzHQGiaDlVOE2P+J8Ww
9EFBwZOvdDA23C9KOSeGUXpfpGO/E/vVOrPJKk0MbQv1zm+bpcNK21F3wWwx
VKQwl87O0+GfIN/Oc/lEfVIfRt7+TQe1mbZqvVIxbOZb/tn/Lx2aTbZlPy4n
8om2cFfgZkD1oZrrgXfEMGDu3IvXSxkQH/Xl1kOCtwX37ErlYYBji+7TNIJX
vpO8a0VmgEqp8ffPBA87eaqT+BkQGbDyemqVGJY9y01/JMCABMGsos01Yhhj
PCHEEmbASe52R6mHYmhXqx2nJ8IAhYxDISItYqiiHTk3JcqAo7YDgldeiOFc
7v2APAkGhPJMcz8fEMNVS1dnwm4GrPKV8ry4TRzf051WzZsyIHWgXUpvlzhW
TaefKLdgwILwRy5rU3E86fNuPmAvA/TnllzaYS6OTgNrg5T2MUBgwBIGCVbf
F/JmyJYB86e+nDKxEMc/TXdsL9szQOegJanYUhyfbf3VtM+JAX6HxOp5rMUx
sxw287oy4M/nmrlPduJIVY0rfuzOANuBrC8H3cVxZ/oTOY4nA6LNstLmD4mj
yGrBiwYHGUAdTtC4Gy6OHxLseL76MmBRrb/B/7g43vt7hVHgz4Ahzr9rnafE
8VTEm0nvQAa4kSIn5y+Io8tnJU/pEAbk1LRc870sjus9A172UBkwKRvFgqvi
+Lfntsm5cAZ89drtu+uaOL6w/FljFsmA9qKGxiyCbzzaorGEwQAr8b3hhdfF
MXxjVNZ9FgNWD1zWOJ8pjsYlTauPHGNAoc3qaOlccRRV5IvXjGZAOvP8+KkS
cRxP27fwMZYBj/1UzkXcE8dagUvB2ScZcP1jvvNEozgmxr0ecTnFgI4bLw9n
doqj+wLFTiSRAT/azmivHxJHTapfS0cSA1ZuGXwR8EEcuT4UbYm/wIDLu4zO
1k2KY5frtxLDFAZEuT40MPgqjjmdBvILl4jzdxD+kv5NHCNN2Sl3rjCANKe/
ceuMOJrWP1oRfJ0BM/taJ+O/i+NAs97cXAYDNqszDpyeFcegF3kfYrIZUFcj
OM33h6jPK8nelTkMsPsdf8hqmQSef3e2Ke0WA0zGMuN5BSVQYYqrSrGAAU9v
nNnMlJLAytnwnNIiBninFcqw1kqgCdfHi5tLiXzkS7ia9SSwn+wS21jGAHf/
zHHdHRIYsLojzPoOAxzO3ir8bSKBf6QNvQeqGHAliXdwwlICk1Tu2PjeY0DX
urUNoVYSKK+tYvS1lvCb3o81HGtCb/MVbVY94bfoFapu+wi9XfwUHiTyT9wU
6WlL6O05LnihgXhev30224HQc5j5K9XEgMo98s8b3Qm9A77Tt1oY8OROsX7/
IULvcP+QThsDQriGHu+LkEBKuGVHXTsD9nMLPpWLkcA77Ad1ps8Z4LRbyvHD
OULvpE5xVyeh/2+mbPt1Qu9czjX3biL/uxJapFuE3hWxM+O9DFCMmX5cXUzo
3TjNDH/FgA2Oa4dDygi94sXDf18z4Ij3zOzSCkKvmup8apjo95gZaCa44uE7
M5G3DJglZ2nqV0rg7icOmzLfEf5NqvpQeJfQ63qiqv6BAf6+r0xXPyD0BreJ
VY0T/jyq7Xy/hdAbu81jOEHkX2+QsqOb0PuiMNs2xYByDOq9Nkro/Uods/9K
zKfz5++7fSP0lpB7RmYYMJHlbD71VwKN+dmNgT8ZcGxs9fPvZEnsW/Plzuwc
A+K2M0XyhSUxQM77ZvQCA7irZALIopL4Z21PMv8iA2JOcnRGxSQxSdcs5vI/
Yj4FFYxdEpdEyrb7NIUlTIChVo0XEpJYsVvTq2QZE5wNGsbFZSTR2Dp736YV
TBD9mJwTryiJvU4iho/JTCj6Oc+O1ZDEw97xWlb8TPh+jTu6eAuhF7gg+0qA
Cbnc2+Y+mxN6R4IFfISZEJJW9CXXmdA7PrI4vZoJ947vpEn5E3oJ+6cYokwI
k/x44mk4sb583Pu1O5hw7NET7JiRxKz3o+afjZiwNKnkycvvhF6e0e0iYyZ4
R/Xs7Z2VRN2ALJFgUyb0/ul5MLBI6K//x9C0YEKj77trHWQpbPri/ubLHiYc
NCKFGklKYVJFnXG5NRNU9Eo2x2hIodMRqcIwWyZ49l2Y/2sohfKbmIJ69kw4
P9TksWgjhZ8X+iN+OjJh53xDbaiHFFbWbxyodmHChdjg+7d8pZATdWkH3Z0J
BqKKySn+UoTff+Zs9mTCv89HtaIPS6EQjx3vb28mbH1Sfcc6UApftVaE1vky
YVqEMpJBlcIbZ4R7OP5MMH0DbD6WFAZZUbfsCGRCRa+a98PTUqgv/DyTK4QJ
r33P1XpkSOHflxrLG6hMkLRZF+d8RwpbLyUGxIYz4YXNvzPXm6XwgvPEc+NI
JuwdZEVF90ihi7SFPg+DCWacX+lVw1Ko9Cb/aguLCXdma5bWjErhVPYKrlPH
mECSv2Zc804Kq338fC2imfBZKuhs73spjFJtauOLY4Kq2679Sp+k0PyzonbH
SWK/7VelcEYKV5XEpCadYkKrIHfE5iXSOBj6dsE6kQmP7gav9BGVxlxdQ0/h
c0R+s32r09dLY8jPjKauC0z4pVw+Fm0kjZvuLaqnpDBBRi2/8beNNHKz3M7b
Xybqs+9qrK2bNLZtv/9T9CoT3GfH+no8pTGFS9K1/zoTwoWtVJ54SSPxXQOv
ZDJhcLa15oq3NKqc7FN2vcEEcRKXxH0/afxqZnBGOpeox5aLamlUaazhS/06
lEes31/RMRIljTHPvttnFhL+16opsbkkjXsu2N73LGFCfUh/4b8SaVxjV05R
KGPCc7nFEtVGaRwWFTr5roIJzO05PN490pj/KmQip4oJPqWpYUNvpJF2vWOf
3z0maGiLjku8l8YtB9ZXq94n/OUybtFA8DKFM1Kf6gl/d6hZVY1JY8f7T1GF
yITR4TG/O5+l8VKe2YfAx8R6vj8cdWel0TMgz1KjmQnvF268vUmSQTUNnvLp
ViZELq4YtaDI4MwXH9Gyp0wwjhNpK9gsg3UVj1m0Z0yIFze4Gb9PBk8cUXir
20nkyynqdveSQatN0SY/XjJhvYqzRUWADIr/flNU1UvoDYu21QbL4Nt6ED76
iugf05qiSYILo9IjNw0yofNKVvudUBmM2PXn9a9hwg/52dGTkTK4ncfV6P5b
Jtzc0fGo5IQM8jypucV+zwSeyEMb8q7J4Isz4vzwkQnzAkqn11bL4BWro7R/
n5iw65Fx3MALGfQW7u3FSSbM2fV4y32UwfXdettivjAh8NBoe9NPGRx+a99s
MMMEv76bdXv/yOC5L5H7Jn4Q80hJXyhiUQYNFy8PZM4xQXOEsy6K4BneGh+7
BSZ8rU1ZKsAtizniA9OkRSb0PHUXO80ni/Yqv+n1/5iwSe2Om7qsLPLoSS8N
W8ICHr/FqMSNsnjPaPtZleUsuNcd4MxjJ4sB1h5ir1ewQH+3+LPbIbIo5X48
+xwvC5y2DfxcESuL7QFZ64xXssBboGxLZZIsHqM/qpoXZMHz4un38cmyqHVy
dEfJKhbkqUks3ULwyMWlbV5rWHCXMV33jeDkbCU7UXEWdHDPdQRckcVdt3cP
t0myYJMpQyA0XxZ/1Pn5H5dhwWKsH/3fQ1m81RY/s4HCgu/cefY7h2TRsT+f
Pa7AguoS3Zc7f8si6cMTnnRlFvzSzjGKEZHD2u+fz9usZcFZTwPSCmU5DOTm
l+JZx4JthXEewuvlUFpQI7dWgwXvrga8iiL4mbSVVqg2CwbTmbp56+QwSj20
RnEDC/4aG/cYaMmhzqbzu/r1WSC9P7bZfKscju4u70jcxAIVo0RbKRs5TNnf
5Wi0lQUj37TvZ4TIoYnX97c/t7PgSJu06N8kOZwLEQkqNGQBa00kj3CxHOaz
9Wc9dhH673kir6Mcupx2iFptwgKfM0ZtSW1yyJ92lLfVjAWvVc2oS9rlsD43
LYVtyQJujdx+NyIecqdGVseKBfXv7+eJEHHKo4H8sX0suJFgyGfTK4edz37r
Xt3PAi1hHqsdE3IYMyhdb+XAgrZDMorlyyio93m76VJnFpxWjzw7s4aCY3Me
nXddWbD+1cnty1QoeGl5lGuQBwv0RG23tulQ0Gx19hjFiwWToWK1jzdS8Bel
IbTnIAte3T4h9WQTBQs13/065ccCz1n5e2VE3G3bsjg4zIJi97n1a4j4Sgtl
ge+BLIALsi9ntlHwgaNJWl4ICwI7JU0LTClI9T2k4EYj8tFLnDzjSEGF8IRi
oQjiPEJdQpcFUPBlVIFBUyQLzldbKjiwKBiX1IYMBgtOVFzT/BtPQYPrExaa
bGL9tGauXUkUHC/g7xk9RpzfixZ70XMUvHJX48DlaBZsLOFSLDpLQYsmq0+W
cSwYVry3ZwXx+T9doeFc8SxYBqnOIRcpWDpyfrHyFAs2+wXJmmVS8MB0efzh
RBZcqEy9V1xGQaE/XcKy51gQ7OVbntpIwQbyj2tdF1jgOEw3f9JLwXCxNSrx
KYS/e8/sZr2joJKyQdnWyywolxZ1FvlEwV5dxy1fr7BAsbiCJkhwvCG9Mec6
C6ZrSgRNP1Jw/m1zm3omUV+lFNYvggNi13SWZbNA8jjtRvsUBQeVfPoMcoj+
MP2U1PuLglbNFUN1t1iwPW/ggjafPOIh7vc7C1jgr99XJC8nj7rkfZ9bi4jz
/Fu2qVdHHnMKM75albIg9KbMw6Id8ii6Z2q2u4wFMyJtylUm8pgwtXXR5Q4L
mJ276gpM5XEh6fTSt1VEf5tJilzbLY9B2q/Ih+6xgPIrPfamsTwOd6oKTdWy
4DauW+VmJo/7wiNFw+tZ8FFD3a7eVh4bRJqkfz1kwbVDdN6Ug/KoV71a8XgD
C77xxjZz6PJ4y9FbbXkTCwxu3xNinZVH8V9lWmdaWGDFNOnWy5DH01f/6Qu3
/V99evgf5snjn61W2y63s6CRI3p8SaE8hgxd3ynznOi/y39neon4yLEJs5ud
RP1WtW69myuPtpQt1mrdLJB5s0brGxFvfJRgf7uXBVN/V13bWC6PBgf7XPVf
scBOJHLH20fymL9Mxfv+axaUvfIyfNwnj5K3IvyNhllQFVCTXDQtj4mmj0Na
RljwyBld8rkV8O+48JG974j6Ths+XbpSAamnPVkvxwh/TbwoXyOkgKPrbkc7
j7PAuqj0WyERt+tYjH/zmfD36hi3Ul4FbA7Zk+Q7xYKdx9LqBPgVcJPQtZSJ
L0S9Jh7ZkNcoYGH5p6u0GRak5P9+u0NFAaX3b8qe+0HMy49XfxzfroBJP07m
ceZY0FTkEbPJQQG5LvWULF1ggdkeo7FXAQoYtlGp8tQf4jy/3z0ncVQB3/eH
1Qr+Y0GuS5yGLFMBHZiPMJWbDZ9f+75aQcRbpYRapJaxgbnfSsczXAG31Ht0
ZPOwwcLe5m9ehAIWe5S8VCWzQX7BrMP/mALKcv15VcLHhqpkebVNFxTwfLbF
yAYBNvx9p2Z/vFABl+y68qFGiA0/zrA7lzUpYMT7j5M7VrPh6oTum1MDCvjh
hMH3pjVseJEjcufIBwV0Uj3xy1KcDfscfEstxhWwrfXlv05JNsiGf7Vd+l4B
twUo8DjJsGF7dfQv7hEFLOWj8Q/LsSHLhyK5ZVQBKSUPV/kosOGuXsCoyrQC
JlsJSHxWYkNhY8jHgaWKuOyrmxxVlQ3Xw+oPjMgpYuSFIuVZNTbY5ijzLGxV
xHHdhXXs9WxoHVnXvtFGEV26zXSXaLGB+9Gx1Tquith+5PKmBB02RHDTY867
KCKIfQABPTbIRJU1tNopYtk9vd0pBmwQVfZM3kA8r+ASaym5mQ1uew9IfLRX
xJTfnTZZW9lgaLo0odlXEZenU5xUgA1yTn1NDccVsXTOpXvUkA2dlzrvJ2cr
opNt6r7MXWyIjt2zvvWhInKXPG93NWHDxYy2nuhORSxcwWsubs6GmIhVqN2t
iPu9jZu6LdmQbRESkNShiH/qjhldsGKDR6/g98EWRcwVq6nfa8OGy61NhYbt
imgV9n0zrx0bMtalTcm8UcRLps1S04fZsFpm5GO5pRLuuMGVVhjEhp6MYO/Z
g0o4/meLyKFQNmiepdu8TlDCC45HziuGseFBxoqH3mVKuKXiNv9IBBviqnOW
3+lQwnf8nxOuH2WDt02mvFe/EiYeUlruzCTOK789oLlLCQ0aPKLXcNjw+8Z7
m0OtSvhG+spi53E29CuYTFk1K+HamcA3ValsuCF+N//BXmXs3HPLNSyNDfXm
Vc/1bJWRmTfSp3mNDZxd/97VBSij4hIpu4l0Nvi0vDbmpChju5v9i7wswq8u
PWOrGpXxyN1ze3xusmHtzNInH8aVUXZVWyvlFhuMjdJtTs0qY2vQst1D+WwQ
DvGWr5hWRloLPLpSxIa0oNo7q0eUsfa68E3OI8JfofcHTrBU8OCcpdyWRjYk
/Z3oPB2qgvy2J6/NNrMhN/B0ydmjKlhVjGJ3nrBhhy/ZojdNBT1W/L4Y2s4G
Lb+uG5UdKrgk7H2cVx8bHIK8Ng/KqmJRuyy37AAbjj/YP/OcXxXtVJ05A4Ns
0KhtpWauVMXF6Iu/Lr1hg3L9gJSzuireGuw4sn+UDS0XZjN/HVBF642kGcEx
NvheTRkZzVDF+Qs7Q9o/skHf+J/3hmeqeGOS/TnhMxsenxlL6R9QRUvTu367
p4j+L7iQwH6iipX6cgdefmHDz7ZGWfodVZRVinf0mmHDcMRhxtpiVUxY9cX6
yw/CH06Udw0PVHGGy9GMM8eGonvf0n0nVdHtywNDvgU2jB/9vun8urXYNKSy
+cofNpTqajAp/mtRsz1JR/UfGyzP9U3ZnV6LabWzalXcHHih14nrEtbiBw2D
KSVRDhxW6tjsbK6GUSJV4ct2cGBbst2q7ifqWPm2IurxeQ48yDUTEJTRRB6p
oXTjixx43vVJ0fWyJjrZrbjflMqBbPGbdo8rNbHwrE6/SRoHMl2poSnhmvi7
2fVny1UOZEzH192iaOIerpOrzNM5cObIeMvtOQ3M2Fym1ZbJAYHRna83C2ni
17CBPZY3ONBQYTxxIEQTdxYvC2jP4cDZy/bNKcu08EWkw/6eexzok998j8ml
jQplUVSH+xwwNTVK9HDXxohPhWf76jnwO36Fi9YZbWxW6Cl0Qg6Ir5FLdPXX
RjG3fy2vGjhwY8Cn8qOaNvqnqo25NHGgomHhW8USbax9tn/JYAsHXsldzN+2
TBv5Scfk3Ns4cEkrof+KrjZ6GOVvG27nwMVqFacLxPoTfAvKH0c40Bv8J5+h
ooPbdivt8n/Hgf4lGoVXC3Qw6ZiV56cxDsTJ733/akYHR+7SOQHjHDBWem7L
vKuDut9uXJ34zIGCyY2iWi46GKfecTdoigNiK3h6SpR0sOfgXPfUFw4UiY8m
ZCjroEq6/EzIDAc4eq0jzw7oIL3XUvDrDw5063X3m/foYJtg5HraHOe//6dK
m2eZz/z6H4fEtPmF/+EAF1rqK/rp4sP7P2J//OXAfH3Pru5ZHRT6KZt9hPsY
KIW5uR18qIPemuYPZpceAyfZipLeZh2sPBT++ijPMTh82757taAu8mSnz8+T
jv23fkrgl7fcMv9jBQOjp7w6/+Nt8f80FuP/x4799ee/DP+PywIyvTZEH/+P
P3t+7W58/T9OLqIorZOK+o//H0+tI3s=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zF/+H8kBMeg=
         "]]}}}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -19.34171478146283}, PlotRange -> NCache[{{0, 
         Rational[3, 25000000]}, {-19.34171478146283, 0.921034043767332}}, {{
        0, 1.2*^-7}, {-19.34171478146283, 0.921034043767332}}], 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.4489795918367343`*^-15, 
        1.199999975510204*^-7}, {-18.420680743952367`, 
        6.256870113540278*^-9}}, {{2.4489795918367343`*^-15, 
        1.199999975510204*^-7}, {-18.420680743952367`, 
        6.256870113540278*^-9}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Probabilities by t, starting in |gdu>\"", TraditionalForm], 
     PlotRange -> NCache[{{0, 
         Rational[3, 25000000]}, {-18.420680743952367`, 
        6.256870113540278*^-9}}, {{0, 1.2*^-7}, {-18.420680743952367`, 
        6.256870113540278*^-9}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|g\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7533870495211554`*^9, 3.7533916045712442`*^9, 3.7533918359669647`*^9, 
   3.7533925749954047`*^9, 3.7534287007556143`*^9, 3.7534621323526134`*^9, 
   3.7534623187470293`*^9, 3.753472236938385*^9, {3.7534898634745026`*^9, 
   3.7534898775043945`*^9}, {3.753489931227347*^9, 3.7534899543999577`*^9}, 
   3.753490955849803*^9, 3.753492888863163*^9, 3.753492930856896*^9, 
   3.7534986414541287`*^9, 3.753546763857098*^9, 3.753547133917055*^9, 
   3.7541368262657557`*^9, 3.7541370695049496`*^9, {3.7541443409213166`*^9, 
   3.754144356443364*^9}, 3.754144459361994*^9, 3.754144938496442*^9, 
   3.7541453382248497`*^9, {3.7541455622656164`*^9, 3.7541455901135435`*^9}, 
   3.7541456372133727`*^9, 3.7541456779328814`*^9, 3.75414573951036*^9, 
   3.7541460691981745`*^9, 3.754146606193429*^9, 3.7541509817836523`*^9, 
   3.7541517860249367`*^9, 3.754152011269936*^9, 3.757957866651722*^9, 
   3.757958181895426*^9, 3.75795892096539*^9, 3.757960323380427*^9, 
   3.7579604377976255`*^9, 3.757960576256998*^9, 3.757960942081614*^9, 
   3.767254090408367*^9, 3.7672541209118457`*^9, 3.767254779193494*^9, 
   3.7672554569697475`*^9, 3.767255755615574*^9, 3.7672559602743206`*^9, 
   3.767260734291789*^9, 3.7672608161785808`*^9, 3.7672612438056107`*^9, 
   3.767267419753622*^9, 3.7672861877986574`*^9, 3.767292665309352*^9, 
   3.767292818088273*^9, 3.7672928632452383`*^9, 3.76729298813028*^9, 
   3.76729306368672*^9, 3.7672931503827367`*^9, 3.767293337638195*^9, 
   3.767293581907658*^9, 3.7672955222720137`*^9, 3.7673721408332148`*^9, 
   3.767372221428749*^9, 3.7673722824135904`*^9, 3.767372341512519*^9, 
   3.767372594337696*^9, 3.7673727557646313`*^9, 3.7673729552050037`*^9, 
   3.7673739604014807`*^9, 3.7673757702730646`*^9, 3.7673770559823503`*^9, 
   3.767378749910839*^9, 3.767378792422329*^9, 3.7673788314588246`*^9, 
   3.76738061174047*^9, 3.7673832804029517`*^9, 3.7674596696360006`*^9, 
   3.767462663089299*^9, 3.7674663324563694`*^9, {3.7674683408699102`*^9, 
   3.7674683680288963`*^9}, 3.7674684300852*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"----------------------------------------startin'------------\
----------------------------\"\>"], "Print",
 CellChangeTimes->{
  3.7672541235778627`*^9, 3.7672547814062195`*^9, 3.767255459485298*^9, 
   3.767255758440946*^9, 3.7672559626399574`*^9, 3.7672607370242143`*^9, 
   3.7672608194556913`*^9, 3.7672612468108788`*^9, 3.7672674227019234`*^9, 
   3.7672861918823037`*^9, 3.7672926762500443`*^9, 3.7672928192556005`*^9, 
   3.767292866575319*^9, 3.7672929942777357`*^9, 3.767293068792774*^9, 
   3.7672931575076294`*^9, 3.76729334484704*^9, 3.7672935889406033`*^9, 
   3.767295529021124*^9, 3.767372145265658*^9, 3.7673722255043983`*^9, 
   3.767372285311919*^9, 3.767372345539198*^9, 3.767372599352804*^9, 
   3.7673727598342867`*^9, 3.7673729590657763`*^9, 3.7673739632528353`*^9, 
   3.7673757728765645`*^9, 3.767377059880102*^9, 3.767378752845146*^9, 
   3.767378795442588*^9, 3.7673788345230575`*^9, 3.767380615579256*^9, 
   3.767383283245313*^9, 3.767459673024048*^9, 3.767462666255474*^9, 
   3.767466335323716*^9, {3.7674683421951466`*^9, 3.767468369367124*^9}, 
   3.76746843034505*^9}],

Cell[BoxData["\<\"BOUNDS: Ea \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"122.`\\\", \\\",\\\", \\\"366.`\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) --- Ba \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"0.0159`\\\", \\\",\\\", \\\"0.047700000000000006`\\\"}], \
\\\"}\\\"}], TraditionalForm]\\) --- \[Omega]E: \
\\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"3.3567399946666843`*^10\\\", \
\\\",\\\", \\\"3.3967399946666843`*^10\\\"}], \\\"}\\\"}], \
TraditionalForm]\\) --- \[Omega]B: \\!\\(\\*FormBox[RowBox[{\\\"{\\\", \
RowBox[{\\\"3.345817946982966`*^10\\\", \\\",\\\", \\\"3.385817946982966`*^10\
\\\"}], \\\"}\\\"}], TraditionalForm]\\)\"\>"], "Print",
 CellChangeTimes->{
  3.7672541235778627`*^9, 3.7672547814062195`*^9, 3.767255459485298*^9, 
   3.767255758440946*^9, 3.7672559626399574`*^9, 3.7672607370242143`*^9, 
   3.7672608194556913`*^9, 3.7672612468108788`*^9, 3.7672674227019234`*^9, 
   3.7672861918823037`*^9, 3.7672926762500443`*^9, 3.7672928192556005`*^9, 
   3.767292866575319*^9, 3.7672929942777357`*^9, 3.767293068792774*^9, 
   3.7672931575076294`*^9, 3.76729334484704*^9, 3.7672935889406033`*^9, 
   3.767295529021124*^9, 3.767372145265658*^9, 3.7673722255043983`*^9, 
   3.767372285311919*^9, 3.767372345539198*^9, 3.767372599352804*^9, 
   3.7673727598342867`*^9, 3.7673729590657763`*^9, 3.7673739632528353`*^9, 
   3.7673757728765645`*^9, 3.767377059880102*^9, 3.767378752845146*^9, 
   3.767378795442588*^9, 3.7673788345230575`*^9, 3.767380615579256*^9, 
   3.767383283245313*^9, 3.767459673024048*^9, 3.767462666255474*^9, 
   3.767466335323716*^9, {3.7674683421951466`*^9, 3.767468369367124*^9}, 
   3.767468430658869*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.7533870495211554`*^9, 3.7533916045712442`*^9, 3.7533918359669647`*^9, 
   3.7533925749954047`*^9, 3.7534287007556143`*^9, 3.7534621323526134`*^9, 
   3.7534623187470293`*^9, 3.753472236938385*^9, {3.7534898634745026`*^9, 
   3.7534898775043945`*^9}, {3.753489931227347*^9, 3.7534899543999577`*^9}, 
   3.753490955849803*^9, 3.753492888863163*^9, 3.753492930856896*^9, 
   3.7534986414541287`*^9, 3.753546763857098*^9, 3.753547133917055*^9, 
   3.7541368262657557`*^9, 3.7541370695049496`*^9, {3.7541443409213166`*^9, 
   3.754144356443364*^9}, 3.754144459361994*^9, 3.754144938496442*^9, 
   3.7541453382248497`*^9, {3.7541455622656164`*^9, 3.7541455901135435`*^9}, 
   3.7541456372133727`*^9, 3.7541456779328814`*^9, 3.75414573951036*^9, 
   3.7541460691981745`*^9, 3.754146606193429*^9, 3.7541509817836523`*^9, 
   3.7541517860249367`*^9, 3.754152011269936*^9, 3.757957866651722*^9, 
   3.757958181895426*^9, 3.75795892096539*^9, 3.757960323380427*^9, 
   3.7579604377976255`*^9, 3.757960576256998*^9, 3.757960942081614*^9, 
   3.767254090408367*^9, 3.7672541209118457`*^9, 3.767254779193494*^9, 
   3.7672554569697475`*^9, 3.767255755615574*^9, 3.7672559602743206`*^9, 
   3.767260734291789*^9, 3.7672608161785808`*^9, 3.7672612438056107`*^9, 
   3.767267419753622*^9, 3.7672861877986574`*^9, 3.767292665309352*^9, 
   3.767292818088273*^9, 3.7672928632452383`*^9, 3.76729298813028*^9, 
   3.76729306368672*^9, 3.7672931503827367`*^9, 3.767293337638195*^9, 
   3.767293581907658*^9, 3.7672955222720137`*^9, 3.7673721408332148`*^9, 
   3.767372221428749*^9, 3.7673722824135904`*^9, 3.767372341512519*^9, 
   3.767372594337696*^9, 3.7673727557646313`*^9, 3.7673729552050037`*^9, 
   3.7673739604014807`*^9, 3.7673757702730646`*^9, 3.7673770559823503`*^9, 
   3.767378749910839*^9, 3.767378792422329*^9, 3.7673788314588246`*^9, 
   3.76738061174047*^9, 3.7673832804029517`*^9, 3.7674596696360006`*^9, 
   3.767462663089299*^9, 3.7674663324563694`*^9, {3.7674683408699102`*^9, 
   3.7674683680288963`*^9}, 3.7674684802559824`*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{{3.7535467676761885`*^9, 3.7535467693921957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999793195771143`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2000"}], "+", 
      FractionBox[
       RowBox[{"40000000000", " ", 
        RowBox[{"Re", "[", "t", "]"}]}], "3"]}], ",", "0.2`", ",", 
     "5.597446`*^9", ",", "116.6811850892453`", ",", "0.015130524804322143`", 
     ",", "3.3878701996967476`*^10", ",", "3.3722858986273052`*^10", ",", 
     FractionBox["3", "10000000"]}], "}"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999793195771143`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2000"}], "+", 
      FractionBox[
       RowBox[{"40000000000", " ", 
        RowBox[{"Re", "[", "t", "]"}]}], "3"]}], ",", "0.2`", ",", 
     "5.597446`*^9", ",", "116.6811850892453`", ",", "0.015130524804322143`", 
     ",", "3.3878701996967476`*^10", ",", "3.3722858986273052`*^10", ",", 
     FractionBox["3", "10000000"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.754144224152676*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate Spectrum of X-Rotations", "Section",
 CellChangeTimes->{{3.7534385604715657`*^9, 3.753438564841041*^9}, {
  3.754152128035116*^9, 3.754152140074914*^9}, {3.7541667394762926`*^9, 
  3.7541667400769444`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"setVariables", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", " ", "=", " ", 
   RowBox[{"5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", " ", "=", " ", 
   RowBox[{"110", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmax", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "*", "T1"}], " ", "+", " ", "T2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]EMid", " ", "=", " ", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]E", " ", "=", " ", 
   RowBox[{"10000", " ", "-", " ", 
    RowBox[{"12000", "*", 
     RowBox[{"twoPointWindow", "[", 
      RowBox[{"t", ",", " ", "T1", ",", " ", "Tmax", ",", " ", 
       RowBox[{"8", "/", "12"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]0Mid", " ", "=", " ", 
    RowBox[{"\[Epsilon]0", " ", "/.", " ", 
     RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ea", " ", "=", "244"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]E", " ", "=", " ", "3.3767399946666843`*^10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", ".0318"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]B", " ", "=", " ", "3.365817946982966`*^10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Ea", "*", 
    RowBox[{"cosWindow", "[", 
     RowBox[{
      RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
      RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{"Ba", "*", 
     RowBox[{"cosWindow", "[", 
      RowBox[{
       RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
       RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"Ea", "*", 
      RowBox[{"cosWindow", "[", 
       RowBox[{
        RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
        RowBox[{"T2", "/", "10"}], ",", " ", "T2"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"Ba", "*", 
      RowBox[{"cosWindow", "[", 
       RowBox[{
        RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
        RowBox[{"T2", "/", "10"}], ",", " ", "T2"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"U", " ", "=", " ", 
     RowBox[{"findEvolutionOperator2D", "[", 
      RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"U", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[CapitalLambda]ge", " ", "/.", " ", 
          RowBox[{"t", "\[Rule]", "t"}]}], ")"}], ".", 
        RowBox[{"findEvolutionOperator", "[", 
         RowBox[{"HexactID", ",", " ", "Tmax"}], "]"}], ".", 
        RowBox[{"ConjugateTranspose", "[", 
         RowBox[{"\[CapitalLambda]ge", " ", "/.", " ", 
          RowBox[{"t", "\[Rule]", "0"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Uuncut", " ", "=", " ", "U"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"fidelityXY", "[", 
       RowBox[{
        RowBox[{"U", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}], " ", "/.", 
        " ", 
        RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "\[IndentingNewLine]", 
      "\[Phi]"}], " ", "=", " ", 
     RowBox[{"XYangle", "[", 
      RowBox[{
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}], " ", "/.", 
       " ", 
       RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ubase", " ", "=", " ", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "*", "t", "*", 
       RowBox[{"(", 
        RowBox[{"HcorrectedStatic", " ", "/.", " ", 
         RowBox[{"t", "\[Rule]", "0"}]}], ")"}]}], " ", "//", " ", "N"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]X", "[", "\[Lambda]_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Ea", "*", 
       RowBox[{"cosWindow", "[", 
        RowBox[{
         RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
         RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Ba", "*", 
       RowBox[{"cosWindow", "[", 
        RowBox[{
         RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
         RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"statusString", "=", 
      RowBox[{"\"\<\[Lambda] = \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", "\[Lambda]", "]"}], " ", "<>", " ", 
       "\"\<          \>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"findEvolutionOperator2D", "[", 
      RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "Ubase", "]"}], ".", "Uuncut"}], 
        ")"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UU", " ", "=", " ", 
      RowBox[{"U", " ", "/.", " ", 
       RowBox[{"t", "\[Rule]", "Tmax"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"gateDecompositionParameters", "[", "UU", "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]s", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"\[Phi]s", ",", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "\[Lambda]", "}"}], ",", " ", 
        RowBox[{"\[Phi]X", "[", "\[Lambda]", "]"}]}], "]"}]}], "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1", ",", " ", ".1"}], 
     "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Phi]s", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"clearVariables", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7534385940641537`*^9, 3.7534385947367644`*^9}, {
   3.753438640257456*^9, 3.7534386408311234`*^9}, {3.753438680590303*^9, 
   3.75343869404253*^9}, {3.753438788587888*^9, 3.7534388323815784`*^9}, {
   3.753439015687639*^9, 3.753439019853233*^9}, 3.753439109519411*^9, 
   3.753439156757144*^9, {3.7534395363552513`*^9, 3.7534395513235893`*^9}, {
   3.7534396524399805`*^9, 3.7534396530646205`*^9}, {3.7534398087126656`*^9, 
   3.753439825702848*^9}, {3.753440456958552*^9, 3.753440457150441*^9}, 
   3.753440992456448*^9, {3.7534540838868036`*^9, 3.7534541327859373`*^9}, {
   3.753454169792453*^9, 3.7534542000931406`*^9}, {3.7534725874966307`*^9, 
   3.753472620793396*^9}, {3.7534726659043245`*^9, 3.7534726756387*^9}, {
   3.7534727088826957`*^9, 3.75347275289065*^9}, {3.753472983179538*^9, 
   3.753472999803565*^9}, {3.753473312758294*^9, 3.7534733580661106`*^9}, {
   3.753474187342518*^9, 3.753474187656336*^9}, {3.7534793771401815`*^9, 
   3.753479395002859*^9}, {3.7534794414290266`*^9, 3.7534794825982337`*^9}, 
   3.7534869739285374`*^9, {3.7534872949670525`*^9, 3.753487297456613*^9}, {
   3.753487981686454*^9, 3.7534879895209227`*^9}, {3.7534906410791955`*^9, 
   3.753490680853208*^9}, {3.75349072549393*^9, 3.753490727193948*^9}, {
   3.7534917090165234`*^9, 3.7534917461780453`*^9}, {3.753491828975195*^9, 
   3.753491836813664*^9}, {3.7534945511697206`*^9, 3.7534945767699246`*^9}, {
   3.7534946752969847`*^9, 3.7534946882604923`*^9}, {3.75349472273557*^9, 
   3.7534947248673353`*^9}, {3.7534950413015704`*^9, 3.753495050200431*^9}, {
   3.753495361166711*^9, 3.7534953748597975`*^9}, {3.7535263948926044`*^9, 
   3.7535264036645355`*^9}, {3.75354573685289*^9, 3.753545745476906*^9}, {
   3.7535460997711487`*^9, 3.7535461403526955`*^9}, {3.7535461868008533`*^9, 
   3.7535462515574265`*^9}, {3.753546289502497*^9, 3.7535463366692386`*^9}, 
   3.7535463771908197`*^9, {3.7535558230841513`*^9, 3.7535558247981577`*^9}, {
   3.7535561073905663`*^9, 3.7535561084269686`*^9}, {3.753556179192072*^9, 
   3.753556220774041*^9}, {3.7535565064579344`*^9, 3.7535565414716988`*^9}, {
   3.7535567050491524`*^9, 3.753556712460867*^9}, {3.753560329096689*^9, 
   3.7535603503963785`*^9}, {3.7535608016004286`*^9, 3.753560803817149*^9}, {
   3.7535610803416867`*^9, 3.75356108265335*^9}, {3.753561310295788*^9, 
   3.7535613304271584`*^9}, {3.753563469822636*^9, 3.753563494683288*^9}, {
   3.753563891224118*^9, 3.753563897234642*^9}, {3.7535641759615574`*^9, 
   3.7535641762423944`*^9}, {3.753564523408758*^9, 3.7535645282579556`*^9}, {
   3.7535645688664923`*^9, 3.753564571522957*^9}, {3.753564611543455*^9, 
   3.7535646142298927`*^9}, {3.753564658114532*^9, 3.753564659728597*^9}, {
   3.7535646997815933`*^9, 3.7535647082846794`*^9}, {3.754152156989487*^9, 
   3.754152164607692*^9}, {3.7541522039466066`*^9, 3.754152262124956*^9}, {
   3.7541530736894865`*^9, 3.754153192941249*^9}, {3.754157458518914*^9, 
   3.7541575516861115`*^9}, {3.754157659143594*^9, 3.754157677953416*^9}, {
   3.7541577318742228`*^9, 3.754157755824049*^9}, {3.7541590514435263`*^9, 
   3.754159104884698*^9}, 3.7541591822680607`*^9, {3.754159229663718*^9, 
   3.7541592576455774`*^9}, {3.754159946733574*^9, 3.7541599472113237`*^9}, 
   3.7544921038028784`*^9, {3.754492263901336*^9, 3.7544922694125*^9}, {
   3.754492360605641*^9, 3.7544923896433897`*^9}, {3.7544924668472595`*^9, 
   3.754492503587507*^9}, {3.7544925433458242`*^9, 3.7544926001743097`*^9}, {
   3.754494811964691*^9, 3.754494812187563*^9}, {3.764772159826379*^9, 
   3.7647721628996124`*^9}, {3.7674685313420115`*^9, 
   3.7674685759203014`*^9}, {3.7674686452591467`*^9, 3.767468660681748*^9}, 
   3.7674687790532064`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.`", ",", "0.6300899294471359`", ",", "0.`", ",", "0.6300899294471359`",
      ",", "5.7156185196475855`", ",", "0.9999999972774983`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.02`", ",", "0.3060004154121339`", ",", "0.0016430431155629328`", ",", 
     "0.9635240583335325`", ",", "5.761556250759143`", ",", 
     "1.0000000185331706`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.04`", ",", "0.31117671865596064`", ",", "0.006572179309799549`", ",", 
     "0.986338722978213`", ",", "5.89931872503263`", ",", 
     "0.9999999899900845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.06`", ",", "0.31978101041107393`", ",", "0.014787368015516014`", ",", 
     "1.024243732687002`", ",", "6.128754109163186`", ",", 
     "0.9999999423017287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.08`", ",", "0.33177955539693055`", ",", "0.02628834310505841`", ",", 
     "1.0770613209389674`", ",", "0.16642519319404908`", ",", 
     "0.9999998726741071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1`", ",", "0.34712625562945576`", ",", "0.04107433230091952`", ",", 
     "1.144545347355629`", ",", "0.5783523326954768`", ",", 
     "0.9999997673710597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.12`", ",", "0.3657637580739168`", ",", "0.05914369313040554`", ",", 
     "1.226383971848621`", ",", "1.080903955328873`", ",", 
     "0.9999996164816924`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.14`", ",", "0.38762480691726253`", ",", "0.08049348016683337`", ",", 
     "1.322202998623629`", ",", "4.815133391594471`", ",", 
     "0.9999994473835667`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.16`", ",", "0.41263377839233284`", ",", "0.10511894726419367`", ",", 
     "1.4315697814448018`", ",", "5.49722641833344`", ",", 
     "0.9999993644008502`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.18`", ",", "0.4407082927076731`", ",", "0.13301298925958965`", ",", 
     "1.5539976339100674`", ",", "6.268061102250142`", ",", 
     "0.9999994392792648`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2`", ",", "0.4717607415367939`", ",", "0.1641655378939865`", ",", 
     "1.6889510160142525`", ",", "0.8436563723815443`", ",", 
     "0.9999994100396857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22`", ",", "0.5056997147046403`", ",", "0.19856279896761686`", ",", 
     "1.8358517694053664`", ",", "4.931103656541358`", ",", 
     "0.9999988500039679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.24`", ",", "0.542431484533586`", ",", "0.236186072622928`", ",", 
     "1.9940851991818207`", ",", "5.963089356309519`", ",", 
     "0.9999983471373064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.26`", ",", "0.5818613223149092`", ",", "0.2770104835073171`", ",", 
     "2.1630051709350395`", ",", "0.7970110115063274`", ",", 
     "0.999998906164374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.28`", ",", "0.6238939368933596`", ",", "0.3210041464650468`", ",", 
     "2.341942761234257`", ",", "5.139761441223211`", ",", 
     "0.999998950173883`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.3`", ",", "0.6684328055254327`", ",", "0.368125579229682`", ",", 
     "2.5302169487118396`", ",", "0.14066105760861658`", ",", 
     "0.9999977903256652`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.32`", ",", "0.7153802249807135`", ",", "0.41832065718093014`", ",", 
     "2.7271359741573837`", ",", "1.5064984852845131`", ",", 
     "0.9999984670033758`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.34`", ",", "0.7646382265983616`", ",", "0.4715239988951825`", ",", 
     "2.9320082346486385`", ",", "6.094461705750973`", ",", 
     "0.9999982601272988`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.36`", ",", "0.8161065895194484`", ",", "0.527652733247467`", ",", 
     "3.14415702856626`", ",", "1.336925437743891`", ",", 
     "0.999997750118691`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.38`", ",", "0.8696792162783777`", ",", "0.5866062509543635`", ",", 
     "3.362910035287257`", ",", "6.082153773264306`", ",", 
     "0.9999985988088335`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.4`", ",", "0.9252479527332944`", ",", "0.6482703805686515`", ",", 
     "3.587626194043816`", ",", "1.4792751245184763`", ",", 
     "0.9999970449715225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.42`", ",", "0.9826991170684067`", ",", "0.7125054716187871`", ",", 
     "3.8176821411907786`", ",", "0.09331781523441202`", ",", 
     "0.9999992516794058`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.44`", ",", "1.0419105229926924`", ",", "0.7791671004654096`", ",", 
     "4.0524838885021275`", ",", "5.0645165993004575`", ",", 
     "0.999996566069532`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.46`", ",", "1.1027571844753221`", ",", "0.8480850388952287`", ",", 
     "4.291466692290712`", ",", "0.6835357331031834`", ",", 
     "0.9999995271594498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.48`", ",", "1.1651063921412987`", ",", "0.9190965066871579`", ",", 
     "4.534087153220521`", ",", "5.798548136355354`", ",", 
     "0.9999966632873856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5`", ",", "1.2288206665929713`", ",", "0.9920194631211133`", ",", 
     "4.7798284188546045`", ",", "1.5586115055462402`", ",", 
     "0.9999994750704766`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.52`", ",", "1.2937619941658742`", ",", "1.0666958312711992`", ",", 
     "5.028190211236938`", ",", "0.5287064390689075`", ",", 
     "0.9999971391305593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.54`", ",", "1.3597868608939798`", ",", "1.142959272048494`", ",", 
     "5.27867966584691`", ",", "5.849036973235435`", ",", 
     "0.9999988394944628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.56`", ",", "1.4267608198165664`", ",", "1.2206786281103974`", ",", 
     "5.530824633169894`", ",", "4.951851671184229`", ",", 
     "0.9999984269815045`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.58`", ",", "1.4945451377338141`", ",", "1.2997363101282695`", ",", 
     "5.784135269462907`", ",", "0.9773641444481121`", ",", 
     "0.9999973081518153`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6`", ",", "1.5630192969499461`", ",", "1.3800368630273407`", ",", 
     "6.038144631777875`", ",", "0.2073971067910674`", ",", 
     "0.9999994590483476`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.62`", ",", "1.6320677531531536`", ",", "1.4615286018409`", ",", 
     "0.009186739853368486`", ",", "5.782189520720962`", ",", 
     "0.9999973726529507`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.64`", ",", "1.7015886744942392`", ",", "1.5441622608459806`", ",", 
     "0.2631484127253887`", ",", "5.134029733906314`", ",", 
     "0.9999972308374203`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.66`", ",", "1.7715059763240175`", ",", "1.6279167983564597`", ",", 
     "0.5163883288365352`", ",", "1.403192278790677`", ",", 
     "0.999999210927375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.68`", ",", "1.8417536904251448`", ",", "1.7127977997500117`", ",", 
     "0.7684414574145326`", ",", "0.8715561937082527`", ",", 
     "0.9999964214148843`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.7000000000000001`", ",", "1.9122817131894694`", ",", 
     "1.7987857535561398`", ",", "1.0188590942004445`", ",", 
     "0.39624211218619915`", ",", "0.9999959123396454`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.72`", ",", "1.9830759223540264`", ",", "1.885864832814614`", ",", 
     "1.2672489596654182`", ",", "6.259175289425297`", ",", 
     "0.9999982356165718`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.74`", ",", "2.0541279676335424`", ",", "1.9740261111756956`", ",", 
     "1.5132314772027744`", ",", "5.892741463970827`", ",", 
     "0.9999959707069033`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.76`", ",", "2.1254313714208495`", ",", "2.0632060461886117`", ",", 
     "1.7564516021800676`", ",", "5.578903254001402`", ",", 
     "0.9999937953397071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.78`", ",", "2.1970157734338844`", ",", "2.1533054058292294`", ",", 
     "1.9966347145948986`", ",", "5.316466893726138`", ",", 
     "0.9999954879807668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8`", ",", "2.268920905641958`", ",", "2.2442230554612355`", ",", 
     "2.2335510875344577`", ",", "5.104260782825974`", ",", 
     "0.9999957980128485`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.8200000000000001`", ",", "2.3411582062172007`", ",", 
     "2.3358137269145445`", ",", "2.4669765863192223`", ",", 
     "4.941134380331485`", ",", "0.9999935253706678`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.84`", ",", "2.4137380530266883`", ",", "2.4278711713085532`", ",", 
     "2.6967294571443885`", ",", "4.825963409695061`", ",", 
     "0.9999921257663449`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.86`", ",", "2.4866803610115453`", ",", "2.5201689621008874`", ",", 
     "2.9226790257982045`", ",", "4.757650427947205`", ",", 
     "0.9999930648836666`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.88`", ",", "2.559957341297821`", ",", "2.6124754061483793`", ",", 
     "3.144678089735363`", ",", "4.735122435418038`", ",", 
     "0.9999937859372887`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9`", ",", "2.6334218101735427`", ",", "2.704534617109135`", ",", 
     "3.3624815168156275`", ",", "4.757329369177719`", ",", 
     "0.9999925908012601`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.92`", ",", "2.7066945711241406`", ",", "2.7960646929973114`", ",", 
     "3.5756312748665033`", ",", "4.823246661654433`", ",", 
     "0.9999916330587348`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9400000000000001`", ",", "2.7787905659738414`", ",", 
     "2.886776987764628`", ",", "3.783076277915732`", ",", 
     "4.931876131720876`", ",", "0.9999917668971432`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.96`", ",", "2.846474517606735`", ",", "2.9763886345031914`", ",", 
     "3.981515626930287`", ",", "5.082243657726961`", ",", 
     "0.9999919226205201`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.98`", ",", "2.891464936144946`", ",", "3.0645963189434493`", ",", 
     "4.15259567911909`", ",", "5.273399173436173`", ",", 
     "0.9999919978544167`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "0.35997441308918154`", ",", "3.1305485857799`", ",", 
     "1.7424451606044309`", ",", "5.504417026482096`", ",", 
     "0.9999919473473347`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7544922074787693`*^9, 3.7544923217014227`*^9, 
  3.7544925510754642`*^9, 3.754492663542673*^9, 3.7545043538516965`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]s", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0.`", ",", "5.390828769701158`", ",", "0.`", ",", "5.390828769701158`",
        ",", "0.9552540826724437`", ",", "0.9999999972774982`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.02`", ",", "3.5442927887405924`", ",", "0.001643043115562933`", ",", 
       "0.9635240583335326`", ",", "1.0011918137840012`", ",", 
       "1.0000000185331697`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.04`", ",", "3.5494690919844194`", ",", "0.00657217930979955`", ",", 
       "0.9863387229782129`", ",", "1.1389542880574886`", ",", 
       "0.9999999899900847`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.06`", ",", "3.558073383739532`", ",", "0.014787368015516014`", ",", 
       "1.024243732687002`", ",", "1.3683896721880444`", ",", 
       "0.9999999423017286`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.08`", ",", "3.5700719287253904`", ",", "0.02628834310505841`", ",", 
       "1.0770613209389674`", ",", "4.8308387169882865`", ",", 
       "0.9999998726741064`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.1`", ",", "3.5854186289579157`", ",", "0.04107433230091952`", ",", 
       "1.1445453473556289`", ",", "5.242765856489714`", ",", 
       "0.9999997673710601`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.12`", ",", "3.6040561314023756`", ",", "0.05914369313040554`", ",", 
       "1.226383971848621`", ",", "5.745317479123111`", ",", 
       "0.9999996164816931`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.14`", ",", "3.6259171802457217`", ",", "0.08049348016683337`", ",", 
       "1.3222029986236292`", ",", "0.054768954619329284`", ",", 
       "0.9999994473835663`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.16`", ",", "3.6509261517207916`", ",", "0.10511894726419369`", ",", 
       "1.4315697814448025`", ",", "0.7368619813582986`", ",", 
       "0.9999993644008502`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.18`", ",", "3.6790006660361305`", ",", "0.13301298925958965`", ",", 
       "1.5539976339100674`", ",", "1.5076966652750006`", ",", 
       "0.9999994392792653`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.2`", ",", "3.710053114865254`", ",", "0.1641655378939865`", ",", 
       "1.688951016014253`", ",", "5.5080698961757815`", ",", 
       "0.9999994100396856`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.22`", ",", "3.7439920880331`", ",", "0.1985627989676168`", ",", 
       "1.8358517694053664`", ",", "0.17073921956621627`", ",", 
       "0.9999988500039685`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.24`", ",", "3.7807238578620432`", ",", "0.236186072622928`", ",", 
       "1.994085199181821`", ",", "1.2027249193343776`", ",", 
       "0.9999983471373067`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.26`", ",", "3.8201536956433686`", ",", "0.2770104835073171`", ",", 
       "2.163005170935039`", ",", "5.461424535300565`", ",", 
       "0.9999989061643745`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.28`", ",", "3.862186310221818`", ",", "0.3210041464650468`", ",", 
       "2.341942761234257`", ",", "0.3793970042480693`", ",", 
       "0.9999989501738833`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.3`", ",", "3.9067251788538924`", ",", "0.3681255792296819`", ",", 
       "2.53021694871184`", ",", "4.805074581402854`", ",", 
       "0.9999977903256646`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.32`", ",", "3.953672598309173`", ",", "0.4183206571809301`", ",", 
       "2.7271359741573837`", ",", "6.170912009078751`", ",", 
       "0.9999984670033752`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.34`", ",", "4.002930599926819`", ",", "0.4715239988951825`", ",", 
       "2.932008234648639`", ",", "1.3340972687758317`", ",", 
       "0.9999982601272985`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.36`", ",", "4.054398962847907`", ",", "0.527652733247467`", ",", 
       "3.14415702856626`", ",", "6.001338961538129`", ",", 
       "0.9999977501186913`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.38`", ",", "4.107971589606836`", ",", "0.5866062509543635`", ",", 
       "3.362910035287257`", ",", "1.3217893362891642`", ",", 
       "0.9999985988088336`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.4`", ",", "4.163540326061755`", ",", "0.6482703805686514`", ",", 
       "3.5876261940438163`", ",", "6.143688648312714`", ",", 
       "0.9999970449715222`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.42`", ",", "4.220991490396867`", ",", "0.7125054716187871`", ",", 
       "3.8176821411907786`", ",", "4.757731339028649`", ",", 
       "0.9999992516794063`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.44`", ",", "4.28020289632115`", ",", "0.7791671004654096`", ",", 
       "4.0524838885021275`", ",", "0.304152162325316`", ",", 
       "0.9999965660695312`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.46`", ",", "4.341049557803782`", ",", "0.8480850388952287`", ",", 
       "4.291466692290712`", ",", "5.3479492568974205`", ",", 
       "0.9999995271594498`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.48`", ",", "4.403398765469758`", ",", "0.9190965066871579`", ",", 
       "4.534087153220521`", ",", "1.0381836993802118`", ",", 
       "0.9999966632873855`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.5`", ",", "4.467113039921431`", ",", "0.9920194631211133`", ",", 
       "4.779828418854604`", ",", "6.223025029340477`", ",", 
       "0.999999475070477`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.52`", ",", "4.532054367494334`", ",", "1.0666958312711992`", ",", 
       "5.028190211236938`", ",", "5.193119962863145`", ",", 
       "0.9999971391305597`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.54`", ",", "4.598079234222439`", ",", "1.1429592720484942`", ",", 
       "5.2786796658469095`", ",", "1.0886725362602934`", ",", 
       "0.9999988394944623`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.56`", ",", "4.665053193145024`", ",", "1.2206786281103974`", ",", 
       "5.530824633169894`", ",", "0.1914872342090873`", ",", 
       "0.9999984269815045`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.58`", ",", "4.732837511062273`", ",", "1.2997363101282695`", ",", 
       "5.784135269462908`", ",", "5.64177766824235`", ",", 
       "0.9999973081518153`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.6`", ",", "4.801311670278405`", ",", "1.380036863027341`", ",", 
       "6.038144631777875`", ",", "4.871810630585305`", ",", 
       "0.9999994590483477`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.62`", ",", "4.8703601264816125`", ",", "1.4615286018409`", ",", 
       "0.009186739853368486`", ",", "1.02182508374582`", ",", 
       "0.9999973726529512`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.64`", ",", "4.939881047822697`", ",", "1.5441622608459806`", ",", 
       "0.2631484127253887`", ",", "0.37366529693117284`", ",", 
       "0.9999972308374201`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.66`", ",", "5.009798349652478`", ",", "1.6279167983564597`", ",", 
       "0.5163883288365353`", ",", "6.067605802584914`", ",", 
       "0.9999992109273748`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.68`", ",", "5.0800460637536045`", ",", "1.7127977997500117`", ",", 
       "0.7684414574145326`", ",", "5.53596971750249`", ",", 
       "0.9999964214148842`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.7000000000000001`", ",", "5.150574086517928`", ",", 
       "1.7987857535561398`", ",", "1.0188590942004447`", ",", 
       "5.060655635980437`", ",", "0.9999959123396455`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.72`", ",", "5.221368295682485`", ",", "1.885864832814614`", ",", 
       "1.2672489596654184`", ",", "1.4988108524501553`", ",", 
       "0.9999982356165714`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.74`", ",", "5.292420340962001`", ",", "1.9740261111756958`", ",", 
       "1.5132314772027744`", ",", "1.1323770269956857`", ",", 
       "0.9999959707069028`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.76`", ",", "5.363723744749309`", ",", "2.0632060461886117`", ",", 
       "1.7564516021800674`", ",", "0.8185388170262596`", ",", 
       "0.9999937953397071`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.78`", ",", "5.435308146762344`", ",", "2.1533054058292294`", ",", 
       "1.9966347145948982`", ",", "0.5561024567509958`", ",", 
       "0.9999954879807671`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8`", ",", "5.507213278970416`", ",", "2.2442230554612355`", ",", 
       "2.2335510875344577`", ",", "0.34389634585083234`", ",", 
       "0.9999957980128481`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.8200000000000001`", ",", "5.579450579545659`", ",", 
       "2.3358137269145445`", ",", "2.4669765863192223`", ",", 
       "0.18076994335634344`", ",", "0.9999935253706674`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.84`", ",", "5.652030426355147`", ",", "2.4278711713085532`", ",", 
       "2.6967294571443885`", ",", "0.06559897271991913`", ",", 
       "0.9999921257663451`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.86`", ",", "5.724972734340004`", ",", "2.5201689621008874`", ",", 
       "2.922679025798205`", ",", "6.2804712981516495`", ",", 
       "0.9999930648836657`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.88`", ",", "5.798249714626279`", ",", "2.6124754061483793`", ",", 
       "3.144678089735363`", ",", "6.257943305622483`", ",", 
       "0.999993785937289`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9`", ",", "5.871714183502002`", ",", "2.704534617109135`", ",", 
       "3.3624815168156275`", ",", "6.280150239382164`", ",", 
       "0.9999925908012601`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.92`", ",", "5.944986944452599`", ",", "2.796064692997312`", ",", 
       "3.5756312748665033`", ",", "0.06288222467929104`", ",", 
       "0.9999916330587346`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.9400000000000001`", ",", "6.017082939302299`", ",", 
       "2.886776987764628`", ",", "3.7830762779157316`", ",", 
       "0.17151169474573438`", ",", "0.999991766897143`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.96`", ",", "6.084766890935193`", ",", "2.9763886345031914`", ",", 
       "3.981515626930287`", ",", "0.32187922075181924`", ",", 
       "0.9999919226205201`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.98`", ",", "6.129757309473404`", ",", "3.0645963189434493`", ",", 
       "4.152595679119089`", ",", "0.5130347364610319`", ",", 
       "0.9999919978544166`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "3.59826678641764`", ",", "3.1305485857799`", ",", 
       "1.7424451606044309`", ",", "0.7440525895069539`", ",", 
       "0.9999919473473349`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7544919510936995`*^9, 3.7544919626458626`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"unravel", "[", "input_", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"output", " ", "=", " ", "input"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"output", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"output", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], " ", ">", " ", "\[Pi]"}], ",", 
          " ", 
          RowBox[{
           RowBox[{"output", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", "+", " ", "1"}], ";;"}], "]"}], "]"}], " ", 
           "=", " ", 
           RowBox[{
            RowBox[{"output", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "+", " ", "1"}], ";;"}], "]"}], "]"}], " ", 
            "-", " ", 
            RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"output", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"output", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], " ", "<", " ", 
           RowBox[{"-", "\[Pi]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"output", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", " ", "+", " ", "1"}], ";;"}], "]"}], "]"}], " ", 
           "=", " ", 
           RowBox[{
            RowBox[{"output", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", " ", "+", " ", "1"}], ";;"}], "]"}], "]"}], " ", 
            "+", " ", 
            RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";"}], "\[IndentingNewLine]",
        ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{
         RowBox[{"Length", "[", "input", "]"}], " ", "-", " ", "1"}]}], 
       "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    "output"}], "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]s", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{"unravel", "[", 
       RowBox[{"\[Phi]s", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "i"}], "]"}], "]"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", "4"}], "}"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]s", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"\[Phi]s", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ",", " ", 
       RowBox[{"2", "\[Pi]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Phi]s", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"\[Phi]s", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], ",", " ", 
       RowBox[{"2", "\[Pi]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]Fn", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"\[Phi]s", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"2", ";;", 
        RowBox[{
         RowBox[{"Length", "[", "\[Phi]s", "]"}], " ", "-", " ", "1"}]}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]Fn", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"\[Phi]s", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "3"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Gamma]Fn", " ", "=", " ", 
    RowBox[{"Interpolation", "[", 
     RowBox[{"\[Phi]s", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"2", ";;", 
         RowBox[{
          RowBox[{"Length", "[", "\[Phi]s", "]"}], " ", "-", " ", "1"}]}], 
        ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "4"}], "}"}]}], "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Figure", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FigurePanel", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"\[Beta]Fn", "[", "\[Lambda]", "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1"}], "}"}], ",", 
            " ", 
            RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"XPlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"XFrameLabel", "\[Rule]", "\"\<\[Lambda]\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"YPlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".1"}], ",", " ", 
           RowBox[{"\[Pi]", " ", "+", " ", ".1"}]}], "}"}]}], ",", " ", 
        RowBox[{
        "YFrameLabel", "\[Rule]", 
         "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(x\)]\)\>\""}], ",", " ", 
        RowBox[{"YTicks", "\[Rule]", 
         RowBox[{"LinTicksPi", "[", 
          RowBox[{"0", ",", " ", "\[Pi]", ",", " ", 
           RowBox[{"\[Pi]", "/", "4"}], ",", " ", "4", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<0\>\"", ",", " ", "\"\<\[Pi]/4\>\"", ",", " ", 
             "\"\<\[Pi]/2\>\"", ",", " ", "\"\<3\[Pi]/4\>\"", ",", " ", 
             "\"\<\[Pi]\>\""}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"CanvasSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "3"}], "}"}]}]}], "\[IndentingNewLine]", "]"}],
     "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<XgateXangle.eps\>\"", ",", " ", "%"}], "]"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Figure", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"FigurePanel", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"\[Alpha]Fn", "[", "\[Lambda]", "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1"}], "}"}], ",",
              " ", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
             RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"\[Gamma]Fn", "[", "\[Lambda]", "]"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1"}], "}"}], ",",
              " ", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
             RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FigLabel", "[", 
           RowBox[{
            RowBox[{"LineLegend", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Orange", ",", " ", "Blue"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(z1\)]\)\>\"", ",", " ", 
                "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(z2\)]\)\>\""}], "}"}]}],
              "]"}], ",", 
            RowBox[{"Point", "\[Rule]", 
             RowBox[{"Scaled", "[", 
              RowBox[{"{", 
               RowBox[{".1", ",", " ", ".9"}], "}"}], "]"}]}], ",", 
            RowBox[{"TextOffset", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"XPlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
        RowBox[{"XFrameLabel", "\[Rule]", "\"\<\[Lambda]\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"YPlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".1"}], ",", " ", 
           RowBox[{
            RowBox[{"6", "\[Pi]"}], " ", "+", " ", ".1"}]}], "}"}]}], ",", 
        " ", 
        RowBox[{
        "YFrameLabel", "\[Rule]", 
         "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(z\)]\)\>\""}], ",", " ", 
        RowBox[{"YTicks", "\[Rule]", 
         RowBox[{"LinTicksPi", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"6", "\[Pi]"}], ",", " ", "\[Pi]", ",", " ", "4", ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<0\>\"", ",", " ", "\"\<\[Pi]\>\"", ",", " ", 
             "\"\<2\[Pi]\>\"", ",", " ", "\"\<3\[Pi]\>\"", ",", " ", 
             "\"\<4\[Pi]\>\"", ",", " ", "\"\<5\[Pi]\>\"", ",", " ", 
             "\"\<6\[Pi]\>\""}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"CanvasSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", " ", "3"}], "}"}]}]}], "\[IndentingNewLine]", "]"}],
     "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<XgateZangles.eps\>\"", ",", " ", "%"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Figure", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Multipanel", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FigurePanel", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"\[Beta]Fn", "[", "\[Lambda]", "]"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1"}], "}"}], 
                ",", " ", 
                RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "1"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"XPlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
            RowBox[{"XFrameLabel", "\[Rule]", "\"\<\[Lambda]\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"YPlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".1"}], ",", " ", 
               RowBox[{"\[Pi]", " ", "+", " ", ".1"}]}], "}"}]}], ",", " ", 
            RowBox[{
            "YFrameLabel", "\[Rule]", 
             "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(x\)]\)\>\""}], ",", " ", 
            RowBox[{"YTicks", "\[Rule]", 
             RowBox[{"LinTicksPi", "[", 
              RowBox[{"0", ",", " ", "\[Pi]", ",", " ", 
               RowBox[{"\[Pi]", "/", "4"}], ",", " ", "4", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "\"\<0\>\"", ",", " ", "\"\<\[Pi]/4\>\"", ",", " ", 
                 "\"\<\[Pi]/2\>\"", ",", " ", "\"\<3\[Pi]/4\>\"", ",", " ", 
                 "\"\<\[Pi]\>\""}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]",
            "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"FigurePanel", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"\[Alpha]Fn", "[", "\[Lambda]", "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1"}], "}"}], 
                 ",", " ", 
                 RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                 RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], 
               "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"\[Gamma]Fn", "[", "\[Lambda]", "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", ",", " ", "0", ",", " ", "1"}], "}"}], 
                 ",", " ", 
                 RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
                 RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], 
               "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"FigLabel", "[", 
               RowBox[{
                RowBox[{"LineLegend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Orange", ",", " ", "Blue"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(z1\)]\)\>\"", ",", 
                    " ", "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(z2\)]\)\>\""}],
                    "}"}]}], "]"}], ",", 
                RowBox[{"Point", "\[Rule]", 
                 RowBox[{"Scaled", "[", 
                  RowBox[{"{", 
                   RowBox[{".1", ",", " ", ".95"}], "}"}], "]"}]}], ",", 
                RowBox[{"TextOffset", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"2", ",", " ", "1"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"XPlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "1"}], "}"}]}], ",", " ", 
            RowBox[{"XFrameLabel", "\[Rule]", "\"\<\[Lambda]\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"YPlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".1"}], ",", " ", 
               RowBox[{
                RowBox[{"6", "\[Pi]"}], " ", "+", " ", ".1"}]}], "}"}]}], ",",
             " ", 
            RowBox[{
            "YFrameLabel", "\[Rule]", 
             "\"\<\!\(\*SubscriptBox[\(\[Phi]\), \(z\)]\)\>\""}], ",", " ", 
            RowBox[{"YTicks", "\[Rule]", 
             RowBox[{"LinTicksPi", "[", 
              RowBox[{"0", ",", " ", 
               RowBox[{"6", "\[Pi]"}], ",", " ", "\[Pi]", ",", " ", "4", ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{
                "\"\<0\>\"", ",", " ", "\"\<\[Pi]\>\"", ",", " ", 
                 "\"\<2\[Pi]\>\"", ",", " ", "\"\<3\[Pi]\>\"", ",", " ", 
                 "\"\<4\[Pi]\>\"", ",", " ", "\"\<5\[Pi]\>\"", ",", " ", 
                 "\"\<6\[Pi]\>\""}], "}"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "}"}], 
        ",", 
        RowBox[{"Dimensions", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], ",", 
        RowBox[{"XPanelGaps", "\[Rule]", ".1"}], ",", 
        RowBox[{"YPanelGaps", "\[Rule]", ".1"}]}], "]"}], ";"}], "}"}], ",", 
    RowBox[{"CanvasSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3.5"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<XgateAngles.eps\>\"", ",", " ", "%"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7541578016170616`*^9, 3.7541578346961594`*^9}, {
   3.754157870751898*^9, 3.754158028047604*^9}, 3.7541596405741887`*^9, {
   3.7541596795986767`*^9, 3.7541596956324267`*^9}, {3.754159749450383*^9, 
   3.7541597909904213`*^9}, {3.7541598234996643`*^9, 3.754159857262208*^9}, {
   3.75416127807108*^9, 3.7541613665160604`*^9}, {3.754161432166191*^9, 
   3.7541614326928864`*^9}, {3.7541614684722443`*^9, 3.754161644604641*^9}, {
   3.7541616904282074`*^9, 3.754161691516579*^9}, {3.7541617371022825`*^9, 
   3.754161814860426*^9}, {3.7541618481032495`*^9, 3.754161927187627*^9}, {
   3.754162465702261*^9, 3.7541625296283817`*^9}, {3.754166767873909*^9, 
   3.754166801531494*^9}, 3.754166949694337*^9, {3.7541670019761777`*^9, 
   3.7541670025208626`*^9}, {3.7541670355713577`*^9, 
   3.7541670500608816`*^9}, {3.754167110759013*^9, 3.7541671887079153`*^9}, {
   3.754167483989853*^9, 3.754167559252656*^9}, {3.754167612425109*^9, 
   3.754167637534437*^9}, {3.754167680889976*^9, 3.75416769795723*^9}, {
   3.754167759912258*^9, 3.754167779509444*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.000020428571428571424`\\\", \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.7541668142941327`*^9, 3.7541669639770975`*^9, 3.7541670129568415`*^9, 
   3.7541670596939635`*^9, 3.7541671260911875`*^9, 3.7541672014351935`*^9, 
   3.7541675672083673`*^9, {3.7541676396884623`*^9, 3.7541676594661283`*^9}, 
   3.7541677035909076`*^9, 3.754167808579956*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Input value \[NoBreak]\\!\\(\\*RowBox[{\\\"{\\\", \
\\\"0.000020428571428571424`\\\", \\\"}\\\"}]\\)\[NoBreak] lies outside the \
range of data in the interpolating function. Extrapolation will be used. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/InterpolatingFunction/dmval\\\", \
ButtonNote -> \\\"InterpolatingFunction::dmval\\\"]\\)\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{
  3.7541668142941327`*^9, 3.7541669639770975`*^9, 3.7541670129568415`*^9, 
   3.7541670596939635`*^9, 3.7541671260911875`*^9, 3.7541672014351935`*^9, 
   3.7541675672083673`*^9, {3.7541676396884623`*^9, 3.7541676594661283`*^9}, 
   3.7541677035909076`*^9, 3.7541678090386915`*^9}],

Cell[BoxData[
 GraphicsBox[{{{
     {FaceForm[None], RectangleBox[{-72, -72.}, {432, 324.}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 396.},
       PlotRange->{{-72, 432}, {-72., 324.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{0., 132.}, {360., 252.}]}, InsetBox[
      GraphicsBox[GeometricTransformationBox[{{{}, {}, 
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
MNC1mmMJCJC3JAWnFxb++FNeTFgLCpD/A4lRFfs=
            "]]}}, {}}, {{{360., 0.}, {0., 35.91101981598112}}, {0., 
         135.59110198159811`}}],
       Frame->False,
       ImageSize->{360., 120.},
       PlotRange->{{0., 360.}, {132., 252.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72.}, {432, 324.}]}, InsetBox[
      GraphicsBox[{InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TemplateBox[{"\"(\"","\"a\"","\")\""},
              "RowDefault"],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {15., 237.}, {0, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TemplateBox[{"\"(\"","\"a\"","\")\""},
             "RowDefault"],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {15., 237.}, {0, 0}, Automatic, {1, 0}]},
       Frame->False,
       ImageSize->{504, 396.},
       PlotRange->{{-72, 432}, {-72., 324.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72.}, {432, 324.}]}, InsetBox[
      GraphicsBox[{
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 132.}, {0., 252.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[{{2.4, 135.59110198159811`}, {0., 135.59110198159811`}}], 
         LineBox[{{1.2, 142.64221423389836`}, {0., 142.64221423389836`}}], 
         LineBox[{{1.2, 149.6933264861986}, {0., 149.6933264861986}}], 
         LineBox[{{1.2, 156.74443873849881`}, {0., 156.74443873849881`}}], 
         LineBox[{{2.4, 163.79555099079906`}, {0., 163.79555099079906`}}], 
         LineBox[{{1.2, 170.8466632430993}, {0., 170.8466632430993}}], 
         LineBox[{{1.2, 177.89777549539951`}, {0., 177.89777549539951`}}], 
         LineBox[{{1.2, 184.94888774769976`}, {0., 184.94888774769976`}}], 
         LineBox[{{2.4, 192.}, {0., 192.}}], 
         LineBox[{{1.2, 199.05111225230024`}, {0., 199.05111225230024`}}], 
         LineBox[{{1.2, 206.10222450460049`}, {0., 206.10222450460049`}}], 
         LineBox[{{1.2, 213.1533367569007}, {0., 213.1533367569007}}], 
         LineBox[{{2.4, 220.20444900920094`}, {0., 220.20444900920094`}}], 
         LineBox[{{1.2, 227.25556126150119`}, {0., 227.25556126150119`}}], 
         LineBox[{{1.2, 234.3066735138014}, {0., 234.3066735138014}}], 
         LineBox[{{1.2, 241.35778576610164`}, {0., 241.35778576610164`}}], 
         LineBox[{{2.4, 248.40889801840189`}, {0., 248.40889801840189`}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{360., 132.}, {360., 252.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[{{357.6, 135.59110198159811`}, {360., 135.59110198159811`}}],
          LineBox[{{358.8, 142.64221423389836`}, {360., 
          142.64221423389836`}}], 
         LineBox[{{358.8, 149.6933264861986}, {360., 149.6933264861986}}], 
         LineBox[{{358.8, 156.74443873849881`}, {360., 156.74443873849881`}}],
          LineBox[{{357.6, 163.79555099079906`}, {360., 
          163.79555099079906`}}], 
         LineBox[{{358.8, 170.8466632430993}, {360., 170.8466632430993}}], 
         LineBox[{{358.8, 177.89777549539951`}, {360., 177.89777549539951`}}],
          LineBox[{{358.8, 184.94888774769976`}, {360., 
          184.94888774769976`}}], LineBox[{{357.6, 192.}, {360., 192.}}], 
         LineBox[{{358.8, 199.05111225230024`}, {360., 199.05111225230024`}}],
          LineBox[{{358.8, 206.10222450460049`}, {360., 
          206.10222450460049`}}], 
         LineBox[{{358.8, 213.1533367569007}, {360., 213.1533367569007}}], 
         LineBox[{{357.6, 220.20444900920094`}, {360., 220.20444900920094`}}],
          LineBox[{{358.8, 227.25556126150119`}, {360., 
          227.25556126150119`}}], 
         LineBox[{{358.8, 234.3066735138014}, {360., 234.3066735138014}}], 
         LineBox[{{358.8, 241.35778576610164`}, {360., 241.35778576610164`}}],
          LineBox[{{357.6, 248.40889801840189`}, {360., 
          248.40889801840189`}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 132.}, {360., 132.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 134.4}, {0., 132.}}], 
         LineBox[{{18., 133.2}, {18., 132.}}], 
         LineBox[{{36., 133.2}, {36., 132.}}], 
         LineBox[{{54.00000000000001, 133.2}, {54.00000000000001, 132.}}], 
         LineBox[{{72., 134.4}, {72., 132.}}], 
         LineBox[{{90., 133.2}, {90., 132.}}], 
         LineBox[{{108.00000000000001`, 133.2}, {108.00000000000001`, 132.}}],
          LineBox[{{126.00000000000001`, 133.2}, {126.00000000000001`, 
          132.}}], LineBox[{{144., 134.4}, {144., 132.}}], 
         LineBox[{{162., 133.2}, {162., 132.}}], 
         LineBox[{{180., 133.2}, {180., 132.}}], 
         LineBox[{{198.00000000000003`, 133.2}, {198.00000000000003`, 132.}}],
          LineBox[{{216.00000000000003`, 134.4}, {216.00000000000003`, 
          132.}}], 
         LineBox[{{234.00000000000006`, 133.2}, {234.00000000000006`, 132.}}],
          LineBox[{{252.00000000000003`, 133.2}, {252.00000000000003`, 
          132.}}], 
         LineBox[{{270.00000000000006`, 133.2}, {270.00000000000006`, 132.}}],
          LineBox[{{288., 134.4}, {288., 132.}}], 
         LineBox[{{306.00000000000006`, 133.2}, {306.00000000000006`, 132.}}],
          LineBox[{{324., 133.2}, {324., 132.}}], 
         LineBox[{{342., 133.2}, {342., 132.}}], 
         LineBox[{{360., 134.4}, {360., 132.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 252.}, {360., 252.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 249.6}, {0., 252.}}], 
         LineBox[{{18., 250.8}, {18., 252.}}], 
         LineBox[{{36., 250.8}, {36., 252.}}], 
         LineBox[{{54.00000000000001, 250.8}, {54.00000000000001, 252.}}], 
         LineBox[{{72., 249.6}, {72., 252.}}], 
         LineBox[{{90., 250.8}, {90., 252.}}], 
         LineBox[{{108.00000000000001`, 250.8}, {108.00000000000001`, 252.}}],
          LineBox[{{126.00000000000001`, 250.8}, {126.00000000000001`, 
          252.}}], LineBox[{{144., 249.6}, {144., 252.}}], 
         LineBox[{{162., 250.8}, {162., 252.}}], 
         LineBox[{{180., 250.8}, {180., 252.}}], 
         LineBox[{{198.00000000000003`, 250.8}, {198.00000000000003`, 252.}}],
          LineBox[{{216.00000000000003`, 249.6}, {216.00000000000003`, 
          252.}}], 
         LineBox[{{234.00000000000006`, 250.8}, {234.00000000000006`, 252.}}],
          LineBox[{{252.00000000000003`, 250.8}, {252.00000000000003`, 
          252.}}], 
         LineBox[{{270.00000000000006`, 250.8}, {270.00000000000006`, 252.}}],
          LineBox[{{288., 249.6}, {288., 252.}}], 
         LineBox[{{306.00000000000006`, 250.8}, {306.00000000000006`, 252.}}],
          LineBox[{{324., 250.8}, {324., 252.}}], 
         LineBox[{{342., 250.8}, {342., 252.}}], 
         LineBox[{{360., 249.6}, {360., 252.}}]}, InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 135.59110198159811`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\[Pi]/4\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 163.79555099079906`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\[Pi]/2\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 192.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"3\[Pi]/4\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 220.20444900920094`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 248.40889801840189`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(x\\)]\\)\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-32., 192.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 135.59110198159811`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\[Pi]/4\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 163.79555099079906`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\[Pi]/2\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 192.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"3\[Pi]/4\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 220.20444900920094`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 248.40889801840189`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(x\\)]\\)\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-32., 192.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}]},
       Frame->False,
       ImageSize->{504, 396.},
       PlotRange->{{-72, 432}, {-72., 324.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72.}, {432, 324.}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 396.},
       PlotRange->{{-72, 432}, {-72., 324.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{0., 0.}, {360., 120.}]}, InsetBox[
      GraphicsBox[{GeometricTransformationBox[{{{}, {}, 
           {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1: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
             "]]}}, {}}, {{{360., 0.}, {0., 6.299359444086547}}, {0., 
          0.6299359444086547}}], GeometricTransformationBox[{{{}, {}, 
           {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1: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
9JT2X4rLpxcX6fkn9xiyukj8P8Z/Ae4=
             "]]}}, {}}, {{{360., 0.}, {0., 6.299359444086547}}, {0., 
          0.6299359444086547}}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             
             TemplateBox[{
              "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(z1\\)]\\)\"",
               "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(z2\\)]\\)\""},
              "LineLegend",
              DisplayFunction->(FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}]}], "]"}]& )],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {36., 114.}, {-1, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            
            TemplateBox[{
             "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(z1\\)]\\)\"",
              "\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(z2\\)]\\)\""},
             "LineLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}]}], "]"}]& )],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {36., 114.}, {-1, 1}, Automatic, {1, 0}]},
       Frame->False,
       ImageSize->{360., 120.},
       PlotRange->{{0., 360.}, {0., 120.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72.}, {432, 324.}]}, InsetBox[
      GraphicsBox[{InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TemplateBox[{"\"(\"","\"b\"","\")\""},
              "RowDefault"],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {15., 105.}, {0, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TemplateBox[{"\"(\"","\"b\"","\")\""},
             "RowDefault"],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {15., 105.}, {0, 0}, Automatic, {1, 0}]},
       Frame->False,
       ImageSize->{504, 396.},
       PlotRange->{{-72, 432}, {-72., 324.}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72.}, {432, 324.}]}, InsetBox[
      GraphicsBox[{
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 0.}, {0., 120.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[{{2.4, 0.6299359444086547}, {0., 0.6299359444086547}}], 
         LineBox[{{1.2, 5.5774412823746}, {0., 5.5774412823746}}], 
         LineBox[{{1.2, 10.524946620340543`}, {0., 10.524946620340543`}}], 
         LineBox[{{1.2, 15.472451958306488`}, {0., 15.472451958306488`}}], 
         LineBox[{{2.4, 20.419957296272433`}, {0., 20.419957296272433`}}], 
         LineBox[{{1.2, 25.36746263423838}, {0., 25.36746263423838}}], 
         LineBox[{{1.2, 30.31496797220432}, {0., 30.31496797220432}}], 
         LineBox[{{1.2, 35.26247331017027}, {0., 35.26247331017027}}], 
         LineBox[{{2.4, 40.209978648136214`}, {0., 40.209978648136214`}}], 
         LineBox[{{1.2, 45.157483986102164`}, {0., 45.157483986102164`}}], 
         LineBox[{{1.2, 50.10498932406811}, {0., 50.10498932406811}}], 
         LineBox[{{1.2, 55.05249466203404}, {0., 55.05249466203404}}], 
         LineBox[{{2.4, 59.99999999999999}, {0., 59.99999999999999}}], 
         LineBox[{{1.2, 64.94750533796595}, {0., 64.94750533796595}}], 
         LineBox[{{1.2, 69.89501067593189}, {0., 69.89501067593189}}], 
         LineBox[{{1.2, 74.84251601389782}, {0., 74.84251601389782}}], 
         LineBox[{{2.4, 79.79002135186377}, {0., 79.79002135186377}}], 
         LineBox[{{1.2, 84.73752668982972}, {0., 84.73752668982972}}], 
         LineBox[{{1.2, 89.68503202779567}, {0., 89.68503202779567}}], 
         LineBox[{{1.2, 94.6325373657616}, {0., 94.6325373657616}}], 
         LineBox[{{2.4, 99.58004270372756}, {0., 99.58004270372756}}], 
         LineBox[{{1.2, 104.5275480416935}, {0., 104.5275480416935}}], 
         LineBox[{{1.2, 109.47505337965943`}, {0., 109.47505337965943`}}], 
         LineBox[{{1.2, 114.42255871762538`}, {0., 114.42255871762538`}}], 
         LineBox[{{2.4, 119.37006405559133`}, {0., 119.37006405559133`}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{360., 0.}, {360., 120.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[{{357.6, 0.6299359444086547}, {360., 0.6299359444086547}}], 
         LineBox[{{358.8, 5.5774412823746}, {360., 5.5774412823746}}], 
         LineBox[{{358.8, 10.524946620340543`}, {360., 10.524946620340543`}}],
          LineBox[{{358.8, 15.472451958306488`}, {360., 
          15.472451958306488`}}], 
         LineBox[{{357.6, 20.419957296272433`}, {360., 20.419957296272433`}}],
          LineBox[{{358.8, 25.36746263423838}, {360., 25.36746263423838}}], 
         LineBox[{{358.8, 30.31496797220432}, {360., 30.31496797220432}}], 
         LineBox[{{358.8, 35.26247331017027}, {360., 35.26247331017027}}], 
         LineBox[{{357.6, 40.209978648136214`}, {360., 40.209978648136214`}}],
          LineBox[{{358.8, 45.157483986102164`}, {360., 
          45.157483986102164`}}], 
         LineBox[{{358.8, 50.10498932406811}, {360., 50.10498932406811}}], 
         LineBox[{{358.8, 55.05249466203404}, {360., 55.05249466203404}}], 
         LineBox[{{357.6, 59.99999999999999}, {360., 59.99999999999999}}], 
         LineBox[{{358.8, 64.94750533796595}, {360., 64.94750533796595}}], 
         LineBox[{{358.8, 69.89501067593189}, {360., 69.89501067593189}}], 
         LineBox[{{358.8, 74.84251601389782}, {360., 74.84251601389782}}], 
         LineBox[{{357.6, 79.79002135186377}, {360., 79.79002135186377}}], 
         LineBox[{{358.8, 84.73752668982972}, {360., 84.73752668982972}}], 
         LineBox[{{358.8, 89.68503202779567}, {360., 89.68503202779567}}], 
         LineBox[{{358.8, 94.6325373657616}, {360., 94.6325373657616}}], 
         LineBox[{{357.6, 99.58004270372756}, {360., 99.58004270372756}}], 
         LineBox[{{358.8, 104.5275480416935}, {360., 104.5275480416935}}], 
         LineBox[{{358.8, 109.47505337965943`}, {360., 109.47505337965943`}}],
          LineBox[{{358.8, 114.42255871762538`}, {360., 
          114.42255871762538`}}], 
         LineBox[{{357.6, 119.37006405559133`}, {360., 
          119.37006405559133`}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 0.}, {360., 0.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 2.4}, {0., 0.}}], 
         LineBox[{{18., 1.2}, {18., 0.}}], LineBox[{{36., 1.2}, {36., 0.}}], 
         LineBox[{{54.00000000000001, 1.2}, {54.00000000000001, 0.}}], 
         LineBox[{{72., 2.4}, {72., 0.}}], LineBox[{{90., 1.2}, {90., 0.}}], 
         LineBox[{{108.00000000000001`, 1.2}, {108.00000000000001`, 0.}}], 
         LineBox[{{126.00000000000001`, 1.2}, {126.00000000000001`, 0.}}], 
         LineBox[{{144., 2.4}, {144., 0.}}], 
         LineBox[{{162., 1.2}, {162., 0.}}], 
         LineBox[{{180., 1.2}, {180., 0.}}], 
         LineBox[{{198.00000000000003`, 1.2}, {198.00000000000003`, 0.}}], 
         LineBox[{{216.00000000000003`, 2.4}, {216.00000000000003`, 0.}}], 
         LineBox[{{234.00000000000006`, 1.2}, {234.00000000000006`, 0.}}], 
         LineBox[{{252.00000000000003`, 1.2}, {252.00000000000003`, 0.}}], 
         LineBox[{{270.00000000000006`, 1.2}, {270.00000000000006`, 0.}}], 
         LineBox[{{288., 2.4}, {288., 0.}}], 
         LineBox[{{306.00000000000006`, 1.2}, {306.00000000000006`, 0.}}], 
         LineBox[{{324., 1.2}, {324., 0.}}], 
         LineBox[{{342., 1.2}, {342., 0.}}], 
         LineBox[{{360., 2.4}, {360., 0.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 120.}, {360., 120.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 117.6}, {0., 120.}}], 
         LineBox[{{18., 118.8}, {18., 120.}}], 
         LineBox[{{36., 118.8}, {36., 120.}}], 
         LineBox[{{54.00000000000001, 118.8}, {54.00000000000001, 120.}}], 
         LineBox[{{72., 117.6}, {72., 120.}}], 
         LineBox[{{90., 118.8}, {90., 120.}}], 
         LineBox[{{108.00000000000001`, 118.8}, {108.00000000000001`, 120.}}],
          LineBox[{{126.00000000000001`, 118.8}, {126.00000000000001`, 
          120.}}], LineBox[{{144., 117.6}, {144., 120.}}], 
         LineBox[{{162., 118.8}, {162., 120.}}], 
         LineBox[{{180., 118.8}, {180., 120.}}], 
         LineBox[{{198.00000000000003`, 118.8}, {198.00000000000003`, 120.}}],
          LineBox[{{216.00000000000003`, 117.6}, {216.00000000000003`, 
          120.}}], 
         LineBox[{{234.00000000000006`, 118.8}, {234.00000000000006`, 120.}}],
          LineBox[{{252.00000000000003`, 118.8}, {252.00000000000003`, 
          120.}}], 
         LineBox[{{270.00000000000006`, 118.8}, {270.00000000000006`, 120.}}],
          LineBox[{{288., 117.6}, {288., 120.}}], 
         LineBox[{{306.00000000000006`, 118.8}, {306.00000000000006`, 120.}}],
          LineBox[{{324., 118.8}, {324., 120.}}], 
         LineBox[{{342., 118.8}, {342., 120.}}], 
         LineBox[{{360., 117.6}, {360., 120.}}]}, InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.6299359444086547}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 20.419957296272433`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"2\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 40.209978648136214`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"3\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 59.99999999999999}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"4\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 79.79002135186377}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"5\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 99.58004270372756}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"6\[Pi]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 119.37006405559133`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(z\\)]\\)\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-20., 60.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0.0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0.2\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {72., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0.4\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {144., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0.6\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {216.00000000000003`, -1.}, {0, 1}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"0.8\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {288., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"1.0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"\[Lambda]\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.6299359444086547}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 20.419957296272433`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"2\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 40.209978648136214`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"3\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 59.99999999999999}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"4\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 79.79002135186377}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"5\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 99.58004270372756}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"6\[Pi]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 119.37006405559133`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Phi]\\), \\(z\\)]\\)\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-20., 60.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0.0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0.2\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {72., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0.4\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {144., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0.6\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {216.00000000000003`, -1.}, {0, 1}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"0.8\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {288., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"1.0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"\[Lambda]\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}]},
       Frame->False,
       ImageSize->{504, 396.},
       PlotRange->{{-72, 432}, {-72., 324.}}], {0, 0}, {0, 0}]}}, {}},
  AspectRatio->0.7857142857142857,
  Background->None,
  DisplayFunction->Identity,
  Frame->False,
  ImageSize->{504, 396.},
  PlotRange->{{-72, 432}, {-72., 324.}}]], "Output",
 CellChangeTimes->{
  3.7541668137614384`*^9, 3.754166963640291*^9, 3.754167012339199*^9, 
   3.7541670590652213`*^9, 3.754167125462197*^9, 3.754167198686262*^9, 
   3.754167576680524*^9, {3.754167639859812*^9, 3.7541676596975074`*^9}, 
   3.7541677120700817`*^9, 3.754167816541605*^9}],

Cell[BoxData["\<\"XgateAngles.eps\"\>"], "Output",
 CellChangeTimes->{
  3.7541668137614384`*^9, 3.754166963640291*^9, 3.754167012339199*^9, 
   3.7541670590652213`*^9, 3.754167125462197*^9, 3.754167198686262*^9, 
   3.754167576680524*^9, {3.754167639859812*^9, 3.7541676596975074`*^9}, 
   3.7541677120700817`*^9, 3.7541678181566753`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find and Plot the Effect of Electrical Noise on an X Gate", "Section",
 CellChangeTimes->{{3.7534870114798875`*^9, 3.7534870145671024`*^9}, {
  3.754167863537119*^9, 3.754167880133058*^9}, {3.7541808077880983`*^9, 
  3.754180817139705*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"setVariables", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", " ", "=", " ", 
   RowBox[{"5", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", " ", "=", " ", 
   RowBox[{"110", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmax", " ", "=", " ", 
    RowBox[{
     RowBox[{"2", "*", "T1"}], " ", "+", " ", "T2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]EMid", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ea", " ", "=", "244"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ba", " ", "=", " ", ".0318"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]E", " ", "=", " ", "3.3767399946666843`*^10"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]B", " ", "=", " ", "3.365817946982966`*^10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Ea", "*", 
    RowBox[{"cosWindow", "[", 
     RowBox[{
      RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
      RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{"Ba", "*", 
     RowBox[{"cosWindow", "[", 
      RowBox[{
       RowBox[{"t", " ", "-", " ", "T1"}], ",", " ", 
       RowBox[{"T2", "/", "5"}], ",", " ", "T2"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]E", " ", "=", " ", 
    RowBox[{"10000", " ", "-", " ", 
     RowBox[{"12000", "*", 
      RowBox[{"twoPointWindow", "[", 
       RowBox[{"t", ",", " ", "T1", ",", " ", "Tmax", ",", " ", 
        RowBox[{"8", "/", "12"}]}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{"findEvolutionOperator2D", "[", 
    RowBox[{"Hexact", ",", " ", "Tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UU", " ", "=", " ", 
   RowBox[{"U", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{"XYangle", "[", "UU", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fidelityXY", "[", 
   RowBox[{"U", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"UU", " ", "//", " ", 
    RowBox[{"MatrixForm", "\[IndentingNewLine]", 
     RowBox[{"complexPhase", "[", 
      RowBox[{
       RowBox[{"UU", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", " ", "2"}], "]"}], "]"}], "/", 
       RowBox[{"UU", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "1"}], "]"}], "]"}]}], "]"}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XfidelityWithNoise", "[", "\[Delta]E_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statusString", " ", "=", " ", 
      RowBox[{"\"\<Error of \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", "\[Delta]E", "]"}], " ", "<>", " ", 
       "\"\< V/m          \>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]E", " ", "=", " ", 
      RowBox[{"10000", " ", "-", " ", 
       RowBox[{"12000", "*", 
        RowBox[{"twoPointWindow", "[", 
         RowBox[{"t", ",", " ", "T1", ",", " ", "Tmax", ",", " ", 
          RowBox[{"8", "/", "12"}]}], "]"}]}], " ", "+", " ", "\[Delta]E"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"findEvolutionOperator2D", "[", 
       RowBox[{"Hexact", ",", " ", "Tmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"UU", " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["E", 
              RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}]], ",", " ", "0"}], 
            "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ".", 
         RowBox[{"(", 
          RowBox[{"U", " ", "/.", " ", 
           RowBox[{"t", "\[Rule]", "Tmax"}]}], ")"}], ".", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["E", 
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]"}]], ",", " ", 
             "0"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"F", " ", "=", " ", 
        RowBox[{"fidelity2D", "[", 
         RowBox[{"UU", ",", " ", "\[Sigma]X"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"F", " ", "=", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"U", " ", "/.", " ", 
          RowBox[{"t", "\[Rule]", "Tmax"}]}], ")"}], ",", " ", "UU"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "F"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XfidelitiesWithNoise", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", " ", 
       RowBox[{"XfidelityWithNoise", "[", "\[Delta]", "]"}]}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", " ", 
       RowBox[{"-", "600"}], ",", " ", "600", ",", " ", "50"}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"clearVariables", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.754167920654249*^9, 3.7541679471514463`*^9}, {
   3.75416801116636*^9, 3.7541680298409567`*^9}, {3.7541680963284616`*^9, 
   3.754168306219976*^9}, {3.7541685208456583`*^9, 3.7541685388095446`*^9}, 
   3.754168573498967*^9, {3.7541686797237625`*^9, 3.754168687339485*^9}, {
   3.7541687327484107`*^9, 3.754168773157628*^9}, {3.754168874162903*^9, 
   3.754168876866358*^9}, 3.7541689552338943`*^9, {3.754169361671744*^9, 
   3.7541693637425485`*^9}, {3.7598632974116526`*^9, 3.759863318713929*^9}, {
   3.7598633555158043`*^9, 3.7598633576245937`*^9}, {3.7598637148740335`*^9, 
   3.7598637157705145`*^9}, {3.759863868613777*^9, 3.7598639269552884`*^9}, {
   3.759864640815507*^9, 3.759864672643239*^9}, {3.759864786619817*^9, 
   3.7598647898549533`*^9}, {3.7598648879436483`*^9, 
   3.7598649184351444`*^9}, {3.759865232742724*^9, 3.759865245674301*^9}, {
   3.7674686991736283`*^9, 3.767468826177588*^9}, {3.7674691759147377`*^9, 
   3.767469177822638*^9}, {3.767469603013536*^9, 3.7674696080236483`*^9}, {
   3.767543970179123*^9, 3.767543971313468*^9}, {3.767544864553505*^9, 
   3.7675448736042857`*^9}, {3.767544952520788*^9, 3.767544960067438*^9}}],

Cell[BoxData["0.9997974259328456`"], "Output",
 CellChangeTimes->{3.759863747037565*^9, 3.7598639034517784`*^9, 
  3.7598647266022654`*^9, 3.759864867081622*^9, 3.759865183834798*^9, 
  3.759865240352352*^9, 3.7598656948494587`*^9, 3.7674688589339533`*^9, 
  3.7674691988844957`*^9, 3.767469657203295*^9, 3.767544006093416*^9, 
  3.7675440943435383`*^9, 3.7675449484601307`*^9, 3.767545034716402*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "600"}], ",", "0.9785752858037751`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "550"}], ",", "0.9828622951160743`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "500"}], ",", "0.9864731094295843`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "450"}], ",", "0.9894936543182429`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "400"}], ",", "0.9920012754021506`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "350"}], ",", "0.9940631709316148`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "300"}], ",", "0.9957379912708517`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "250"}], ",", "0.9970758610324217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "200"}], ",", "0.9981178040289309`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "150"}], ",", "0.9988968022712668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "100"}], ",", "0.9994377914329411`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "50"}], ",", "0.9997553774577118`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.9998597292015132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "0.9997567016652658`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "0.9994422260463037`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", "0.9989099694868445`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "0.9981496646352448`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"250", ",", "0.9971460289670304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "0.9958801789292117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"350", ",", "0.9943306100077647`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"400", ",", "0.992471393417994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"450", ",", "0.9902663608441733`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"500", ",", "0.9876778982986956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"550", ",", "0.9846553633299127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"600", ",", "0.9811395561253798`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.759863747037565*^9, 3.7598639034517784`*^9, 
  3.7598647266022654`*^9, 3.759864867081622*^9, 3.759865183834798*^9, 
  3.759865240352352*^9, 3.7598656948494587`*^9, 3.7674688589339533`*^9, 
  3.7674691988844957`*^9, 3.767469657203295*^9, 3.767544006093416*^9, 
  3.7675440943435383`*^9, 3.7675449484601307`*^9, 3.7675472160582952`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7598638015842557`*^9, 3.759863803565119*^9}}],

Cell[CellGroupData[{

Cell["Find the effect of electrical noise on a naive version", "Subsection",
 CellChangeTimes->{{3.7541807764616666`*^9, 3.754180801389789*^9}, {
  3.7598639666405077`*^9, 3.759863966807413*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"setVariables", "[", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tmax", " ", "=", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]EMid", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ea", " ", "=", "112.68229305101102`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]E", " ", "=", " ", "3.389283961963769`*^10"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Ea", "*", 
    RowBox[{"cosWindow", "[", 
     RowBox[{"t", ",", " ", 
      RowBox[{"Tmax", "/", "3"}], ",", " ", "Tmax"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", "0.014612579500812886`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]B", " ", "=", " ", "3.37328583857908`*^10"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
    RowBox[{"Ba", "*", 
     RowBox[{"cosWindow", "[", 
      RowBox[{"t", ",", " ", 
       RowBox[{"Tmax", "/", "3"}], ",", " ", "Tmax"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]E", " ", "=", " ", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{"findEvolutionOperator2D", "[", 
    RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UU", " ", "=", " ", 
   RowBox[{"U", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]", " ", "=", " ", 
    RowBox[{"XYangle", "[", "UU", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XfidelityWithNoiseNaive", "[", "\[Delta]E_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statusString", " ", "=", " ", 
      RowBox[{"\"\<Error of \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", "\[Delta]E", "]"}], " ", "<>", " ", 
       "\"\< V/m          \>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]E", " ", "=", " ", 
      RowBox[{"0", " ", "+", " ", "\[Delta]E"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"findEvolutionOperator2D", "[", 
       RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UU", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["E", 
            RowBox[{"\[ImaginaryI]", "*", "\[Phi]"}]], ",", " ", "0"}], "}"}],
          ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}], ".", 
       RowBox[{"(", 
        RowBox[{"U", " ", "/.", " ", 
         RowBox[{"t", "\[Rule]", "Tmax"}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["E", 
            RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]"}]], ",", " ", 
           "0"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "1"}], "}"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"F", " ", "=", " ", 
      RowBox[{
       RowBox[{"fidelity2D", "[", 
        RowBox[{"UU", ",", " ", "\[Sigma]X"}], "]"}], " ", "//", " ", 
       "Abs"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "F"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XfidelitiesWithNoiseNaive", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", " ", 
       RowBox[{"XfidelityWithNoiseNaive", "[", "\[Delta]", "]"}]}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", " ", 
       RowBox[{"-", "1000"}], ",", " ", "1000", ",", " ", "40"}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"clearVariables", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7541821643119364`*^9, 3.7541822768837852`*^9}, {
  3.754182329003009*^9, 3.7541823721986036`*^9}, {3.7541824135892487`*^9, 
  3.7541824215785522`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"XfidelitiesWithNoiseNaive", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1000"}], ",", "0.3390118094602208`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "960"}], ",", "0.3409844825255378`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "920"}], ",", "0.34363554469743973`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "880"}], ",", "0.3471920183913705`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "840"}], ",", "0.3519512504105367`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "800"}], ",", "0.3582982240411231`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "760"}], ",", "0.36672374702356425`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "720"}], ",", "0.37784056760597534`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "680"}], ",", "0.39239198770037687`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "640"}], ",", "0.4112438094431446`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "600"}], ",", "0.4353460730167086`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "560"}], ",", "0.46564689911412455`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "520"}], ",", "0.5029403800122969`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.5476391236342784`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "440"}], ",", "0.5994871231678489`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "400"}], ",", "0.657273652033075`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.7186654172263857`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "320"}], ",", "0.7803049587347921`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "280"}], ",", "0.8382809800198985`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.8889236928452189`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "200"}], ",", "0.9296739493807469`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "160"}], ",", "0.9596619561798817`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9797030396284061`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "80"}], ",", "0.9917298948016652`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "40"}], ",", "0.9979421487533942`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9999807692537145`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"40", ",", "0.9983366124030657`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"80", ",", "0.9921621439150675`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9794932324685101`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"160", ",", "0.9579189444611049`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"200", ",", "0.9254725917577251`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.8815447696561309`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"280", ",", "0.8274534845726145`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"320", ",", "0.7662981825854548`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.7022160032219414`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"400", ",", "0.6393905627283283`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"440", ",", "0.5812217284863221`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.5299020855817982`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"520", ",", "0.4864033373888388`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"560", ",", "0.4507233851155797`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"600", ",", "0.42222421165624013`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"640", ",", "0.3999416663995257`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"680", ",", "0.3828148678417805`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"720", ",", "0.3698292747115546`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"760", ",", "0.3600903585164719`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"800", ",", "0.3528500491497867`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"840", ",", "0.34750529580569883`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"880", ",", "0.34358265569224034`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"920", ",", "0.34071763193770455`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"960", ",", "0.3386337057497467`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "0.33712344523544974`"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7674696401391315`*^9, 3.7674696418721333`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1000"}], ",", "0.3390118094602208`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "960"}], ",", "0.3409844825255378`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "920"}], ",", "0.34363554469743973`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "880"}], ",", "0.3471920183913705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "840"}], ",", "0.3519512504105367`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "800"}], ",", "0.3582982240411231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "760"}], ",", "0.36672374702356425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "720"}], ",", "0.37784056760597534`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "680"}], ",", "0.39239198770037687`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "640"}], ",", "0.4112438094431446`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "600"}], ",", "0.4353460730167086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "560"}], ",", "0.46564689911412455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "520"}], ",", "0.5029403800122969`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "480"}], ",", "0.5476391236342784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "440"}], ",", "0.5994871231678489`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "400"}], ",", "0.657273652033075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "360"}], ",", "0.7186654172263857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "320"}], ",", "0.7803049587347921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "280"}], ",", "0.8382809800198985`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "240"}], ",", "0.8889236928452189`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "200"}], ",", "0.9296739493807469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "160"}], ",", "0.9596619561798817`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "120"}], ",", "0.9797030396284061`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "80"}], ",", "0.9917298948016652`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "40"}], ",", "0.9979421487533942`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.9999807692537145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "0.9983366124030657`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "0.9921621439150675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "0.9794932324685101`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"160", ",", "0.9579189444611049`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200", ",", "0.9254725917577251`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"240", ",", "0.8815447696561309`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"280", ",", "0.8274534845726145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"320", ",", "0.7662981825854548`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"360", ",", "0.7022160032219414`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"400", ",", "0.6393905627283283`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440", ",", "0.5812217284863221`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"480", ",", "0.5299020855817982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"520", ",", "0.4864033373888388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"560", ",", "0.4507233851155797`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"600", ",", "0.42222421165624013`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"640", ",", "0.3999416663995257`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"680", ",", "0.3828148678417805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"720", ",", "0.3698292747115546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"760", ",", "0.3600903585164719`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"800", ",", "0.3528500491497867`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"840", ",", "0.34750529580569883`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"880", ",", "0.34358265569224034`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"920", ",", "0.34071763193770455`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"960", ",", "0.3386337057497467`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1000", ",", "0.33712344523544974`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.767470400388839*^9, 3.7675447400003104`*^9, 
  3.767547362661296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"XfidelityFunction", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "XfidelitiesWithNoise", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"XfidelityFunctionNaive", " ", "=", " ", 
   RowBox[{"Interpolation", "[", "XfidelitiesWithNoiseNaive", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MeanGivenSD", "[", 
    RowBox[{
     RowBox[{"\[Sigma]_", "?", "NumericQ"}], ",", " ", "\[Mu]_", ",", " ", 
     "Fint_"}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"Fint", "[", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"\[Mu]", ",", " ", "\[Sigma]"}], "]"}], ",", " ", "10000"}], 
       "]"}], "]"}], "]"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Figure", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FigurePanel", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"MeanGivenSD", "[", 
             RowBox[{
             "\[Sigma]", ",", " ", "0", ",", " ", "XfidelityFunctionNaive"}], 
             "]"}]}], " ", "//", " ", "Log10"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", " ", "0", ",", " ", "300"}], "}"}], ",", 
          " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", "Orange"}]}], "]"}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FigGraphics", "[", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"MeanGivenSD", "[", 
             RowBox[{
             "\[Sigma]", ",", " ", "0", ",", " ", "XfidelityFunction"}], 
             "]"}]}], " ", "//", " ", "Log10"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]", ",", " ", "0", ",", " ", "300"}], "}"}], ",", 
          " ", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", "Maroon"}]}], "]"}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FigLabel", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Orange", ",", " ", "Maroon"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Naive\>\"", ",", " ", "\"\<Noise-resistant\>\""}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"Point", "\[Rule]", 
          RowBox[{"Scaled", "[", 
           RowBox[{"{", 
            RowBox[{".55", ",", " ", ".3"}], "}"}], "]"}]}], ",", 
         RowBox[{"TextOffset", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"XPlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "300"}], "}"}]}], ",", " ", 
     RowBox[{"XFrameLabel", "\[Rule]", "\"\<\!\(\*SubscriptBox[
StyleBox[\"\[Sigma]\",
FontSlant->\"Italic\"], \"\[Delta]E\"]\) (V/m)\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"YPlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]], " ", "//", " ", "Log10"}], ",", " ", 
        RowBox[{
         RowBox[{"3", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "1"}]]}], " ", "//", " ", "Log10"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{"YFrameLabel", "\[Rule]", "\"\<1 - F\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"YTicks", "\[Rule]", 
      RowBox[{"LogTicks", "[", 
       RowBox[{"10", ",", " ", 
        RowBox[{"-", "10"}], ",", " ", "10"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"CanvasSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5", ",", " ", "3"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<XnoisePlot.eps\>\"", ",", " ", "%"}], "]"}]}], "Input",
 CellChangeTimes->{{3.754168775802683*^9, 3.754168861840556*^9}, {
  3.7541692605810595`*^9, 3.7541693417302656`*^9}, {3.754175682368025*^9, 
  3.75417569378044*^9}, {3.7541760769104385`*^9, 3.7541760916838517`*^9}, {
  3.754177175288769*^9, 3.754177230184574*^9}, {3.7541783694643803`*^9, 
  3.7541783905232325`*^9}, {3.754182761652779*^9, 3.7541828681436973`*^9}, {
  3.7541829293084173`*^9, 3.754182930011012*^9}, {3.754182980640356*^9, 
  3.7541830651484613`*^9}, {3.767470687948059*^9, 3.7674706929471765`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], 
      RectangleBox[{0, 0}, 
       NCache[{360, 
         216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
         1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}, {
        360, 215.99999999999997`}]]}, InsetBox[
      GraphicsBox[{GeometricTransformationBox[{{{}, {}, 
           {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1: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
4tk/POCy1xR2LXgDs2HlUhz67QE/N89LPjTZwGxf92numPcAqqZCStCDDcwu
uQiOrnhAwretxQV4voONn10tA9cnrqDuu/QG5sSzk7rESoXfH/kKruH4zj2L
hwy5qaDqvJuw4rqBuWS8CE0UpMKCSEd+uu8GRnG5eKZzMxWCO/ReEPduYO7C
TheFJKgg4wvl9oc2MI/+LdmeMlT4O/bzeiZtA6Pmfyu9pkQFT+zV/Cn1DczL
q6rq524qyN1tZjF22sBo2yLqVXWoUHJq5rmu5AbmM6rfcsKQCuqq/gw92w1s
3zXWnudmVHiZ/FapEc/3Pdg9yGJDBX0d/b5zBzawgzJ5P2ycqBDJergNC93A
Dk3sm8t0p8JhS1P9y3j/hwP/ckgeosL42Z9hp803sGPhm3QNYqhgMB4jHY/P
L3m+e0k0gQpfoy8/LOxYx/qzLz6eu0iFX/tfjjb9Wscul5tEdqVS4Vb6rr6C
pXUMHq+p386mwg6WpZ+BzHVs6dXjufgCKqxk2GfuEdjAqvtD79PKqMDjOvn3
7+g65vtTMVTnFhUO/jHmLptbx0RXvu8UqqbCUEzgkhqe38lROj19nwps55qE
qXh83H/U6rZ6nG8unusXfq9j2kpCgTeeU6EqSDV8pX0d+63XpXC2hQqbLDrE
Vsgb2DXbpJ8e7VR4WPfl1OriOuZOgwr1HirYmFu/Yv2wjnEH0/14P1ABDv9r
Dfu4jqGzddKTg1RYLQi/VPF6HYtKCxlr+UKFpp+Cb+K5NjDlMoXrJT+osMdB
VS329jr2tXZs/6nfVNBlnXYpLV/H8lCxhOscFXYGhVkVflvHbN+5j+xcxvX7
bk49l76OEcYEijk2cD1aeSlbi9ex+vkOr+8kT+i9PBVkgvdzjOXCfy84PGFJ
5Ki5Vt46JilsPJDP5wksySYeh9tw/mVW8yKEPeGoSRaqScH513rk5iDmCaLJ
DSXKfTj/lsHCipKeMNz+lEOwBOffXf49i5wnjIgadteeXceqj3zLHFX2hPyw
B0HfI3H+TxU5PVHzBOPWsEibGpz/S278OTqeEFOYwqzH5+kq4O8JMfQEBbbl
82P161h81Zsr1mae8G/M+MC2ZJz/Z+dtZaw9we/Ey0mBgnVsutOQi+ngCZP0
nsfctHXs+vBy+yDFE7g/OJFW/HH+Zx5crPPyBLpa0+OkrHWMh3HMMt3XExyq
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
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {
            0, (-216) (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {
           0, (-1080) (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{{
            1.2, 0}, {0, 48.245287029539014`}}, {0, 241.22643514769507`}}]], 
        GeometricTransformationBox[{{{}, {}, 
           {RGBColor[0.690207, 0.188192, 0.376507], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUlnc81d8fx4Xcfe2VSKS+tkIp4m1UClkX2e5FRUZmKUp29syO0DBSiUjh
GKUiK5UkkVJJMgpR+Z3fX/fxfLzPeb3neX/uZpavhTs7GxtbCImN7f+/d63/
/Pp+8422jDr5BfsLOlrK3Ntpnlyv87B3YS8n5n83mCckkjt1LHaYhv+fkX76
74sV/Tq/hJZiOTCz3w1o4kx+rdOUTrq3DrO+lNWF837vdM4Ferv9G6CjNsN8
qbCKcR36vgdcK5hd2RKj9hR81CmulKX+wszZEDq5lPRZx/uI5o/vmK/6ehvW
nZ/S8Sf85pzEvH+bU4W/33cdtScZiSOYA323ceVsn9VZbbvu8AKzQdem+uCK
OZ1GQc6CJ5gFtokct5Je0CnSZK5/gPljBI+oWsFPHUFF34u3MNeOEp/xCS7q
mDgnlxVjjt6z7uxc0pLO8T9mEamYrS/9lu/j+q3jE9roHI556/zcSPX5FR03
NfnmE5gXTaaSkpZXdTqFd1+wx/y4/IO2l99fHTGz5u+HMGevf/vj0NQ/HatW
AyPV//u77dGXuZ0NHjuEWYpgjqKyLgRUrIM8wsKFyX468toz+ubDUXZo+eqi
PIyZcdxuh4U0B/jbmVjew6x16VV863sOENLWFc7CvKXDYkKlgBPYrH7uOoWZ
Ot+jWXxkPXRUb7rtgvnnJqNMbkEu2PvEsFcN84hJ5/S5fi5IOFI5KIT50Vn9
fTNJBDjEv4VzpY+OqstbCh0PEcHmRlLWR8yXXmsudnORgE/vv4ECzOfWNxzW
aifBQfLmwUuYj6qqXa88TwbO0IBEK8yHmbfXNmhR4GnNzOQezDtTFI7EL1Mg
Tuzl+o2YJZpu3P5dS4VEId7jP3rpiOvbFpKHHw3+7r1rO4B5RuQKc0iRDpRP
dO48zK/3izcemKKD7WVyfBxmFJjLV3+NG3LElyY1MTP649UztvNA7m5SJSdm
wy9Pxp+l8ECYVuPrFz24XmtcyewzPPBVOi22AbOK0L49e4x5YVLj4teLmLco
Rk76VfBCmJtvuC1mEYPW9HIiH4REz/KzY6bar2mPH+WD3SEvtzx/Tkds/nu/
iTziA7ePDzZfwvwz7my2mTQ/mPauWRtg/lJ0Xz/uAj/Uvt0ruAvzyL2lHy3v
+WG80szvWzcd9T1XL1jaKwD8p9FADeaOjwGGygUC4FHB187E3LB65+fRFQHw
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
78j+yrF5dGJl49Dv+Q/95VcddmAZnQyO3Z5+fiobbHZP+VyEfF68NUuzlMqG
r7f6tX/gdzNPsc1nCTYk/HgUOh/56prdxJonyYaa8Y9DegbYryuNTlvLsGE7
8+CjfE2cdw/EXw+YzYb5TKcqgQadNGv9rryqwIathUvunEI8h9p3fKifywZu
j/31qiV0sijqIWVSmQ2ley/YblqK/XjdgsUrF7Lhy9m7zXtU0Z8jwet3LWLD
42ufK4v16GTOjS6vs0vYIKMj7O9bRSelO9afKF6G+9umztLE97ylMtI/LmfD
8PpLMVE6qOcjGpHXYcOADmdl3GKcz8TsznX6bHBslcperksnbkue/xMasWGf
qMR6CPn792r5wlQTNrx+tZC9dAH2q7MRFrWr2eCRZOgWtoZO7Nd83f3Hgg1V
Yy/CzyHe71+3HNFcx4ZIudysPC06SbySn+y6kQ3mJiWfnaVxPnWRfxhig3wF
acvfUcb5gR745q4dG/ZmXnCIxvgj778a69rMht+fWw66KaKfeKZKs5zY8DTT
seM4xvdmYZKphQsbDmmrJc/F/Sca/rr5urGhpXuO2R0lrDchew4k7sTzLf3m
zEkaqVv1KL56Dxvsrzyvq1enk/39akU/9+L3p75tlrNwHrx8smUxgw3CfVK7
VeQwPx0/jDix2fDdaOhv6hw68ZlqrXDcB/Wuri/bjvtlC28Y5vLZkHjTKeAV
7i9mzdjWLmKDZqtpypRxGvFQ8vWbGcAG71X/TfuEfNBqay+YHmDDbj3WseJp
OI8F6+SzDiHfkqqLXCWw3ulH18ceZcObMPW+Znxv7P23oSfH2WDU73albC6d
pMdvm/XtFBsqNqf3jkzHeWbTPR3VM2xo+GPbWzJEI1/+KjpuPseG1FylCKEs
ncTmHuQfjkR+S7zWSeP95l5vIrKj2bBN46ujJe7vkV9z63UMG+4EyvZZ/qCR
sKqU/2iX2NCnlXWyD+/XDZr8bJjEhqXPTA/XyOA8ru01c18KG6IrhiynfqGR
Ix1PtKLT2TDSm3e2DL8vvrBkU/k1NgRc8HRy/0UjNRtOcwYz2VAIneKNVDoR
/fp0RjmHDf8Sonek/KSRudmbbtjeRr8YWe5Zh++X77pZtT+PDTcHhus2SGI/
l5HuzShgg3tuxeiGmXQi+VhAaypCfhR35b9qopG7/vVLpj5gw6v/XvTcwXjd
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
e5pCVJdNzko5JYIpVznNQXj/r22CWqNQEVyR+0Y5jf56efxdWO1pEcwqW3FX
C/Fn3nawYoQh/wGaixcEU0jwm4dTx89i/maVn449QiGuEtrlMeFYD5ckNegc
xv5klHRIO1IEXy7vrfnGoxC61wyTivMi6JXjqhRh/O8iD/7YGS2CA0bxPY5n
KKTwwac73y+IoFvk8SwQ8UV8cuWdixGBZYxqgUUohTAUqjTV40Sg48X8ELIX
6/s644/340WgeKmA++sQhSgIMq44JYhA1vXh5spAzI8keY/+RBGs+JZbk3ec
QiqrTyqfSMb8HDnkuxPXySPfXs1LEcFBE+s7p/B9v0VeMXmpWH+6nDZ2ijAf
Heu32Kbj98WKMly8X/3wWqmuKyJYcvL6ggbk58+N3GcHrolg36TBBwUh9vfm
BaGzrqOfv4ss16AeOVMj193IFEFleG0RF/U6qTM+YZklgo9SGxg2AgrZscv3
watszO+UK43NRylEL+zNfsFNEdjUXRs4i3xNv7fJkH5bBO6/5BJ3It9d3SVD
KblYb2kKR+Zj/CUymreM80RQU370/qaDFBJtfonzIl8E1nDK7w4D85VD12AW
iMBjp+o5ARvzLy6we7xQBDMWvlbsPob99cmHlNgizGdHF71EjHf467adK0pQ
r3yLpzdw/Wx+hWLlfXzfXyrWAeNPtzVo2vUQ/ec7vs/TDfM38ErUj1IRnFE2
VzI/QSGOV2UdwstF4KNlOfkX9Vtad2z6YiKCvvtxJU/8sN/8/Vr54LEIluZ5
/EzgU8grTY8TzhUi2EMeSs5E/LnbX1h8rsR8fPc+ypyD+XxyzZ8TVVjvdjwx
i8f4Pe7cLFJ6JoLz9/piqvH7qnZl//znWK/fZd6u24z9Z8Y53U3/icDwc6pn
vC/2E+Oxga5a9Lu9gXfTTuwP+zhZB19iffNWezeB78dFvWbI1ovAaI+/h9ke
CuGVWi/KakA93PfCUeR3Y/+9d2ubRBBU2R4WF4D9SFEj6XUz1rdfqYUh67C/
rI91Fb4SQTAjps/AhkKCKh5NDrwWgcVub61KS4x3w0AWpw39SApdqd6of6Wi
88c3IsiPs/Yq2YHzq9X6v17tIng3a77+Eiv0+1N+Rsc7Eajc6T492xnz3zpx
865OEZw1uui7xx3xVlX+et2F+WY5/WcBE+uhzXCaS48ItsGAoSrqkVY9f1PD
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

             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {
            0, (-216) (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {
           0, (-1080) (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{{
            1.2, 0}, {0, 48.245287029539014`}}, {0, 241.22643514769507`}}]], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TemplateBox[{"\"Naive\"","\"Noise-resistant\""},
              "LineLegend",
              DisplayFunction->(FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.690207, 0.188192, 0.376507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.46013800000000005`, 0.12546133333333334`, 
                    0.25100466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.690207, 0.188192, 0.376507]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.690207, 0.188192, 0.376507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.690207, 0.188192, 0.376507], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}]}], "]"}]& )],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {198.00000000000003`, 64.8}, {-1, 1}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TemplateBox[{"\"Naive\"","\"Noise-resistant\""},
             "LineLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.690207, 0.188192, 0.376507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.46013800000000005`, 0.12546133333333334`, 
                    0.25100466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.690207, 0.188192, 0.376507]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.690207, 0.188192, 0.376507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.690207, 0.188192, 0.376507], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}]}], "]"}]& )],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {198.00000000000003`, 64.8}, {-1, 1}, 
         Automatic, {1, 0}]},
       Frame->False,
       ImageSize->NCache[{360, 216 Log[
             Rational[10, 3]]/(Log[
             Rational[10, 3]] - 5 Log[10]) - 1080 (Log[
              Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}, {
         360, 215.99999999999997`}],
       PlotRange->NCache[{{0, 360}, {0, 216 Log[
              Rational[10, 3]]/(Log[
              Rational[10, 3]] - 5 Log[10]) - 1080 (Log[
               Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{0, 360}, {
          0, 215.99999999999997`}}]], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[NCache[{{0, 0}, {
            0, 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{0, 
            0}, {0, 215.99999999999997`}}]]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{2.88, 0.}, {0, 0.}}], 
         LineBox[{{1.44, 14.523278545309665`}, {0, 14.523278545309665`}}], 
         LineBox[{{1.44, 23.018851881843915`}, {0, 23.018851881843915`}}], 
         LineBox[{{1.44, 29.04655709061933}, {0, 29.04655709061933}}], 
         LineBox[{{1.44, 33.72200848422935}, {0, 33.72200848422935}}], 
         LineBox[{{1.44, 37.54213042715358}, {0, 37.54213042715358}}], 
         LineBox[{{1.44, 40.77199750858867}, {0, 40.77199750858867}}], 
         LineBox[{{1.44, 43.56983563592897}, {0, 43.56983563592897}}], 
         LineBox[{{1.44, 46.03770376368783}, {0, 46.03770376368783}}], 
         LineBox[{{2.88, 48.245287029539014`}, {0, 48.245287029539014`}}], 
         LineBox[{{1.44, 62.76856557484868}, {0, 62.76856557484868}}], 
         LineBox[{{1.44, 71.26413891138293}, {0, 71.26413891138293}}], 
         LineBox[{{1.44, 77.29184412015834}, {0, 77.29184412015834}}], 
         LineBox[{{1.44, 81.96729551376836}, {0, 81.96729551376836}}], 
         LineBox[{{1.44, 85.78741745669257}, {0, 85.78741745669257}}], 
         LineBox[{{1.44, 89.01728453812768}, {0, 89.01728453812768}}], 
         LineBox[{{1.44, 91.81512266546798}, {0, 91.81512266546798}}], 
         LineBox[{{1.44, 94.28299079322682}, {0, 94.28299079322682}}], 
         LineBox[{{2.88, 96.49057405907803}, {0, 96.49057405907803}}], 
         LineBox[{{1.44, 111.0138526043877}, {0, 111.0138526043877}}], 
         LineBox[{{1.44, 119.50942594092194`}, {0, 119.50942594092194`}}], 
         LineBox[{{1.44, 125.53713114969734`}, {0, 125.53713114969734`}}], 
         LineBox[{{1.44, 130.21258254330738`}, {0, 130.21258254330738`}}], 
         LineBox[{{1.44, 134.03270448623158`}, {0, 134.03270448623158`}}], 
         LineBox[{{1.44, 137.2625715676667}, {0, 137.2625715676667}}], 
         LineBox[{{1.44, 140.06040969500697`}, {0, 140.06040969500697`}}], 
         LineBox[{{1.44, 142.52827782276586`}, {0, 142.52827782276586`}}], 
         LineBox[{{2.88, 144.73586108861704`}, {0, 144.73586108861704`}}], 
         LineBox[{{1.44, 159.2591396339267}, {0, 159.2591396339267}}], 
         LineBox[{{1.44, 167.75471297046096`}, {0, 167.75471297046096`}}], 
         LineBox[{{1.44, 173.78241817923634`}, {0, 173.78241817923634`}}], 
         LineBox[{{1.44, 178.4578695728464}, {0, 178.4578695728464}}], 
         LineBox[{{1.44, 182.2779915157706}, {0, 182.2779915157706}}], 
         LineBox[{{1.44, 185.5078585972057}, {0, 185.5078585972057}}], 
         LineBox[{{1.44, 188.305696724546}, {0, 188.305696724546}}], 
         LineBox[{{1.44, 190.77356485230484`}, {0, 190.77356485230484`}}], 
         LineBox[{{2.88, 192.98114811815606`}, {0, 192.98114811815606`}}], 
         LineBox[{{1.44, 207.50442666346572`}, {0, 207.50442666346572`}}], 
         LineBox[{{1.44, 215.99999999999997`}, {0, 215.99999999999997`}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[NCache[{{360, 0}, {
            360, 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{360, 
            0}, {360, 215.99999999999997`}}]]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{357.12, 0.}, {360, 0.}}], 
         LineBox[{{358.56, 14.523278545309665`}, {360, 14.523278545309665`}}],
          LineBox[{{358.56, 23.018851881843915`}, {
           360, 23.018851881843915`}}], 
         LineBox[{{358.56, 29.04655709061933}, {360, 29.04655709061933}}], 
         LineBox[{{358.56, 33.72200848422935}, {360, 33.72200848422935}}], 
         LineBox[{{358.56, 37.54213042715358}, {360, 37.54213042715358}}], 
         LineBox[{{358.56, 40.77199750858867}, {360, 40.77199750858867}}], 
         LineBox[{{358.56, 43.56983563592897}, {360, 43.56983563592897}}], 
         LineBox[{{358.56, 46.03770376368783}, {360, 46.03770376368783}}], 
         LineBox[{{357.12, 48.245287029539014`}, {360, 48.245287029539014`}}],
          LineBox[{{358.56, 62.76856557484868}, {360, 62.76856557484868}}], 
         LineBox[{{358.56, 71.26413891138293}, {360, 71.26413891138293}}], 
         LineBox[{{358.56, 77.29184412015834}, {360, 77.29184412015834}}], 
         LineBox[{{358.56, 81.96729551376836}, {360, 81.96729551376836}}], 
         LineBox[{{358.56, 85.78741745669257}, {360, 85.78741745669257}}], 
         LineBox[{{358.56, 89.01728453812768}, {360, 89.01728453812768}}], 
         LineBox[{{358.56, 91.81512266546798}, {360, 91.81512266546798}}], 
         LineBox[{{358.56, 94.28299079322682}, {360, 94.28299079322682}}], 
         LineBox[{{357.12, 96.49057405907803}, {360, 96.49057405907803}}], 
         LineBox[{{358.56, 111.0138526043877}, {360, 111.0138526043877}}], 
         LineBox[{{358.56, 119.50942594092194`}, {360, 119.50942594092194`}}],
          LineBox[{{358.56, 125.53713114969734`}, {
           360, 125.53713114969734`}}], 
         LineBox[{{358.56, 130.21258254330738`}, {360, 130.21258254330738`}}],
          LineBox[{{358.56, 134.03270448623158`}, {
           360, 134.03270448623158`}}], 
         LineBox[{{358.56, 137.2625715676667}, {360, 137.2625715676667}}], 
         LineBox[{{358.56, 140.06040969500697`}, {360, 140.06040969500697`}}],
          LineBox[{{358.56, 142.52827782276586`}, {
           360, 142.52827782276586`}}], 
         LineBox[{{357.12, 144.73586108861704`}, {360, 144.73586108861704`}}],
          LineBox[{{358.56, 159.2591396339267}, {360, 159.2591396339267}}], 
         LineBox[{{358.56, 167.75471297046096`}, {360, 167.75471297046096`}}],
          LineBox[{{358.56, 173.78241817923634`}, {
           360, 173.78241817923634`}}], 
         LineBox[{{358.56, 178.4578695728464}, {360, 178.4578695728464}}], 
         LineBox[{{358.56, 182.2779915157706}, {360, 182.2779915157706}}], 
         LineBox[{{358.56, 185.5078585972057}, {360, 185.5078585972057}}], 
         LineBox[{{358.56, 188.305696724546}, {360, 188.305696724546}}], 
         LineBox[{{358.56, 190.77356485230484`}, {360, 190.77356485230484`}}],
          LineBox[{{357.12, 192.98114811815606`}, {
           360, 192.98114811815606`}}], 
         LineBox[{{358.56, 207.50442666346572`}, {360, 207.50442666346572`}}],
          LineBox[{{358.56, 215.99999999999997`}, {
           360, 215.99999999999997`}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 0}, {360, 0}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 2.88}, {0., 0}}], 
         LineBox[{{12., 1.44}, {12., 0}}], LineBox[{{24., 1.44}, {24., 0}}], 
         LineBox[{{36., 1.44}, {36., 0}}], LineBox[{{48., 1.44}, {48., 0}}], 
         LineBox[{{60., 2.88}, {60., 0}}], LineBox[{{72., 1.44}, {72., 0}}], 
         LineBox[{{84., 1.44}, {84., 0}}], LineBox[{{96., 1.44}, {96., 0}}], 
         LineBox[{{108., 1.44}, {108., 0}}], 
         LineBox[{{120., 2.88}, {120., 0}}], 
         LineBox[{{132., 1.44}, {132., 0}}], 
         LineBox[{{144., 1.44}, {144., 0}}], 
         LineBox[{{156., 1.44}, {156., 0}}], 
         LineBox[{{168., 1.44}, {168., 0}}], 
         LineBox[{{180., 2.88}, {180., 0}}], 
         LineBox[{{192., 1.44}, {192., 0}}], 
         LineBox[{{204., 1.44}, {204., 0}}], 
         LineBox[{{216., 1.44}, {216., 0}}], 
         LineBox[{{228., 1.44}, {228., 0}}], 
         LineBox[{{240., 2.88}, {240., 0}}], 
         LineBox[{{252., 1.44}, {252., 0}}], 
         LineBox[{{264., 1.44}, {264., 0}}], 
         LineBox[{{276., 1.44}, {276., 0}}], 
         LineBox[{{288., 1.44}, {288., 0}}], 
         LineBox[{{300., 2.88}, {300., 0}}], 
         LineBox[{{312., 1.44}, {312., 0}}], 
         LineBox[{{324., 1.44}, {324., 0}}], 
         LineBox[{{336., 1.44}, {336., 0}}], 
         LineBox[{{348., 1.44}, {348., 0}}], 
         LineBox[{{360., 2.88}, {360., 0}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[NCache[{{
            0, 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}, {
            360, 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{
            0, 215.99999999999997`}, {360, 215.99999999999997`}}]]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], 
         LineBox[NCache[{{0., 213.11999999999998`}, {
            0., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{0., 
           213.11999999999998`}, {0., 215.99999999999997`}}]], 
         LineBox[NCache[{{12., 214.55999999999997`}, {
            12., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{12., 
           214.55999999999997`}, {12., 215.99999999999997`}}]], 
         LineBox[NCache[{{24., 214.55999999999997`}, {
            24., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{24., 
           214.55999999999997`}, {24., 215.99999999999997`}}]], 
         LineBox[NCache[{{36., 214.55999999999997`}, {
            36., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{36., 
           214.55999999999997`}, {36., 215.99999999999997`}}]], 
         LineBox[NCache[{{48., 214.55999999999997`}, {
            48., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{48., 
           214.55999999999997`}, {48., 215.99999999999997`}}]], 
         LineBox[NCache[{{60., 213.11999999999998`}, {
            60., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{60., 
           213.11999999999998`}, {60., 215.99999999999997`}}]], 
         LineBox[NCache[{{72., 214.55999999999997`}, {
            72., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{72., 
           214.55999999999997`}, {72., 215.99999999999997`}}]], 
         LineBox[NCache[{{84., 214.55999999999997`}, {
            84., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{84., 
           214.55999999999997`}, {84., 215.99999999999997`}}]], 
         LineBox[NCache[{{96., 214.55999999999997`}, {
            96., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{96., 
           214.55999999999997`}, {96., 215.99999999999997`}}]], 
         LineBox[NCache[{{108., 214.55999999999997`}, {
            108., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{108., 
           214.55999999999997`}, {108., 215.99999999999997`}}]], 
         LineBox[NCache[{{120., 213.11999999999998`}, {
            120., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{120., 
           213.11999999999998`}, {120., 215.99999999999997`}}]], 
         LineBox[NCache[{{132., 214.55999999999997`}, {
            132., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{132., 
           214.55999999999997`}, {132., 215.99999999999997`}}]], 
         LineBox[NCache[{{144., 214.55999999999997`}, {
            144., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{144., 
           214.55999999999997`}, {144., 215.99999999999997`}}]], 
         LineBox[
          NCache[{{156., 214.55999999999997`}, {
            156., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{156., 
           214.55999999999997`}, {156., 215.99999999999997`}}]], 
         LineBox[NCache[{{168., 214.55999999999997`}, {
            168., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{168., 
           214.55999999999997`}, {168., 215.99999999999997`}}]], 
         LineBox[NCache[{{180., 213.11999999999998`}, {
            180., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{180., 
           213.11999999999998`}, {180., 215.99999999999997`}}]], 
         LineBox[NCache[{{192., 214.55999999999997`}, {
            192., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{192., 
           214.55999999999997`}, {192., 215.99999999999997`}}]], 
         LineBox[NCache[{{204., 214.55999999999997`}, {
            204., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{204., 
           214.55999999999997`}, {204., 215.99999999999997`}}]], 
         LineBox[NCache[{{216., 214.55999999999997`}, {
            216., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{216., 
           214.55999999999997`}, {216., 215.99999999999997`}}]], 
         LineBox[NCache[{{228., 214.55999999999997`}, {
            228., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{228., 
           214.55999999999997`}, {228., 215.99999999999997`}}]], 
         LineBox[NCache[{{240., 213.11999999999998`}, {
            240., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{240., 
           213.11999999999998`}, {240., 215.99999999999997`}}]], 
         LineBox[
          NCache[{{252., 214.55999999999997`}, {
            252., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{252., 
           214.55999999999997`}, {252., 215.99999999999997`}}]], 
         LineBox[NCache[{{264., 214.55999999999997`}, {
            264., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{264., 
           214.55999999999997`}, {264., 215.99999999999997`}}]], 
         LineBox[NCache[{{276., 214.55999999999997`}, {
            276., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{276., 
           214.55999999999997`}, {276., 215.99999999999997`}}]], 
         LineBox[NCache[{{288., 214.55999999999997`}, {
            288., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{288., 
           214.55999999999997`}, {288., 215.99999999999997`}}]], 
         LineBox[NCache[{{300., 213.11999999999998`}, {
            300., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{300., 
           213.11999999999998`}, {300., 215.99999999999997`}}]], 
         LineBox[NCache[{{312., 214.55999999999997`}, {
            312., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{312., 
           214.55999999999997`}, {312., 215.99999999999997`}}]], 
         LineBox[NCache[{{324., 214.55999999999997`}, {
            324., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{324., 
           214.55999999999997`}, {324., 215.99999999999997`}}]], 
         LineBox[NCache[{{336., 214.55999999999997`}, {
            336., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{336., 
           214.55999999999997`}, {336., 215.99999999999997`}}]], 
         LineBox[
          NCache[{{348., 214.55999999999997`}, {
            348., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{348., 
           214.55999999999997`}, {348., 215.99999999999997`}}]], 
         LineBox[NCache[{{360., 213.11999999999998`}, {
            360., 216 Log[Rational[10, 3]]/(Log[Rational[10, 3]] - 5 Log[10]) - 
             1080 (Log[Rational[10, 3]] - 5 Log[10])^(-1) Log[10]}}, {{360., 
           213.11999999999998`}, {360., 215.99999999999997`}}]]}, InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 48.245287029539014`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 96.49057405907803}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 144.73586108861704`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 192.98114811815606`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"1 - F\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-31., 107.99999999999997`}, {0, -1}, 
         Automatic, {6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"  0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\" 50\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {60., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"100\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {120., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"150\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"200\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {240., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"250\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {300., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"300\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            
            TagBox["\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"\[Sigma]\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Delta]E\\\"]\\) (V/m)\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "4"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 48.245287029539014`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "3"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 96.49057405907803}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 144.73586108861704`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "1"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 192.98114811815606`}, {1, 0}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"1 - F\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-31., 107.99999999999997`}, {0, -1}, 
         Automatic, {6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"  0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\" 50\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {60., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"100\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {120., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"150\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"200\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {240., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"250\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {300., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"300\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           
           TagBox["\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"\[Sigma]\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Delta]E\\\"]\\) (V/m)\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}]},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}}, {}},
  AspectRatio->NCache[
    Rational[5, 7], 0.7142857142857143],
  Background->None,
  DisplayFunction->Identity,
  Frame->False,
  ImageSize->{504, 360},
  PlotRange->{{-72, 432}, {-72, 288}}]], "Output",
 CellChangeTimes->{
  3.754169246711059*^9, {3.7541692790254173`*^9, 3.754169288890726*^9}, {
   3.7541693196739693`*^9, 3.7541693438919992`*^9}, 3.754175669375779*^9, 
   3.7541757042344093`*^9, 3.75417776574747*^9, 3.7541791336876073`*^9, 
   3.7541829010996857`*^9, 3.754182966117179*^9, {3.7541830116823015`*^9, 
   3.7541830504069667`*^9}, 3.754184945043912*^9, 3.7674706832827463`*^9, 
   3.7674708429706845`*^9, 3.7675448247684393`*^9, 
   3.7675476779165907`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
97/iGifk\
\>"]],

Cell[BoxData["\<\"XnoisePlot.eps\"\>"], "Output",
 CellChangeTimes->{
  3.754169246711059*^9, {3.7541692790254173`*^9, 3.754169288890726*^9}, {
   3.7541693196739693`*^9, 3.7541693438919992`*^9}, 3.754175669375779*^9, 
   3.7541757042344093`*^9, 3.75417776574747*^9, 3.7541791336876073`*^9, 
   3.7541829010996857`*^9, 3.754182966117179*^9, {3.7541830116823015`*^9, 
   3.7541830504069667`*^9}, 3.754184945043912*^9, 3.7674706832827463`*^9, 
   3.7674708429706845`*^9, 3.7675448247684393`*^9, 3.7675476818163433`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 78, "Section"],
Cell[687, 25, 13316, 244, 913, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14040, 274, 98, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[14163, 279, 19888, 466, 1618, "Input"],
Cell[34054, 747, 2098, 29, 33, "Output"],
Cell[36155, 778, 310078, 5231, 264, "Output"],
Cell[346236, 6011, 221206, 3776, 264, "Output"],
Cell[CellGroupData[{
Cell[567467, 9791, 1119, 16, 24, "Print"],
Cell[568589, 9809, 1663, 24, 29, "Print"]
}, Open  ]],
Cell[570267, 9836, 2089, 29, 33, "Output"]
}, Open  ]],
Cell[572371, 9868, 97, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[572493, 9873, 486, 12, 103, "Input"],
Cell[572982, 9887, 529, 13, 50, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[573560, 9906, 221, 3, 78, "Section"],
Cell[CellGroupData[{
Cell[573806, 9913, 11496, 261, 1013, "Input"],
Cell[585305, 10176, 10858, 258, 540, "Output"]
}, Open  ]],
Cell[596178, 10437, 11327, 259, 1033, "Input"],
Cell[CellGroupData[{
Cell[607530, 10700, 17665, 413, 1553, "Input"],
Cell[625198, 11115, 888, 17, 23, "Message"],
Cell[626089, 11134, 890, 17, 23, "Message"],
Cell[626982, 11153, 86426, 2018, 452, "Output"],
Cell[713411, 13173, 339, 5, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[713799, 13184, 246, 3, 78, "Section"],
Cell[CellGroupData[{
Cell[714070, 13191, 7599, 192, 994, "Input"],
Cell[721672, 13385, 400, 5, 33, "Output"],
Cell[722075, 13392, 2631, 69, 78, "Output"]
}, Open  ]],
Cell[724721, 13464, 94, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[724840, 13469, 195, 2, 53, "Subsection"],
Cell[725038, 13473, 4771, 129, 774, "Input"],
Cell[CellGroupData[{
Cell[729834, 13606, 4866, 131, 233, InheritFromParent],
Cell[734703, 13739, 4703, 131, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739443, 13875, 4866, 115, 473, "Input"],
Cell[744312, 13992, 178137, 3334, 412, 162777, 3081, "CachedBoxData", \
"BoxData", "Output"],
Cell[922452, 17328, 517, 7, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


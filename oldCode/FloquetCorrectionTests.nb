(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    535873,       9955]
NotebookOptionsPosition[    533504,       9883]
NotebookOutlinePosition[    533847,       9898]
CellTagsIndexPosition[    533804,       9895]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"showStatus", "[", "status_", "]"}], ":=", 
   RowBox[{"LinkWrite", "[", 
    RowBox[{"$ParentLink", ",", 
     RowBox[{"SetNotebookStatusLine", "[", 
      RowBox[{
       RowBox[{"FrontEnd`EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"ToString", "[", "status", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"findEvolutionOperator", "[", "Ham_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{"Length", "[", "Ham", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"funcs", "=", 
     RowBox[{"Array", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"#2", " ", "+", " ", 
           RowBox[{"n", "*", 
            RowBox[{"(", 
             RowBox[{"#1", "-", " ", "1"}], ")"}]}]}], "]"}], "[", "t", "]"}],
         "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", " ", "n"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"equations", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Ham", ".", "funcs"}], " ", "\[Equal]", " ", 
          RowBox[{"\[ImaginaryI]", "*", 
           RowBox[{"D", "[", 
            RowBox[{"funcs", ",", "t"}], "]"}]}]}], "]"}], ",", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"funcs", "\[Equal]", 
           RowBox[{"IdentityMatrix", "[", "n", "]"}]}], "/.", 
          RowBox[{"t", "\[Rule]", "0"}]}], "]"}]}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"NDSolveValue", "[", 
     RowBox[{"equations", ",", "funcs", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "Tmax"}], "}"}], ",", " ", 
      RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", " ", 
      RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", " ", 
      RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
       RowBox[{"showStatus", "[", 
        RowBox[{"\"\<t = \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"CForm", "[", "t", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shifts", "[", 
   RowBox[{"B_", ",", " ", "\[Omega]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", " ", "-", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"4", "*", 
            SuperscriptBox["B", "2"]}], " ", "+", " ", 
           SuperscriptBox["\[Omega]", "2"]}], "]"}]}], ")"}], "/", "2"}], ",",
       " ", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"\[Omega]", " ", "-", " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"4", "*", 
             SuperscriptBox["B", "2"]}], " ", "+", " ", 
            SuperscriptBox["\[Omega]", "2"]}], "]"}]}], ")"}]}], "/", "2"}]}],
      "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "Tmax"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fidelity", "[", "M_", "]"}], " ", ":=", " ", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{"M", ".", 
        RowBox[{"ConjugateTranspose", "[", "M", "]"}]}], "]"}], " ", "+", " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Tr", "[", "M", "]"}], "]"}], "2"]}], ")"}], 
    RowBox[{
     RowBox[{"Length", "[", "M", "]"}], " ", "+", " ", 
     SuperscriptBox[
      RowBox[{"Length", "[", "M", "]"}], "2"]}]]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hBar", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"transform", "[", 
   RowBox[{"M_", ",", "U_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"U", ".", "M", ".", 
    RowBox[{"ConjugateTranspose", "[", "U", "]"}]}], "-", 
   RowBox[{"\[ImaginaryI]", "*", "hBar", "*", 
    RowBox[{"U", ".", 
     RowBox[{"ConjugateTranspose", "[", 
      RowBox[{"D", "[", 
       RowBox[{"U", ",", " ", "t"}], "]"}], "]"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.748110987282899*^9, 3.7481109882903214`*^9}, {
  3.7481111043700323`*^9, 3.748111104757809*^9}, {3.748190703991186*^9, 
  3.7481907045851393`*^9}, {3.7481910214051747`*^9, 3.7481910235289383`*^9}, {
  3.7482689172584887`*^9, 3.7482689228802624`*^9}}],

Cell[CellGroupData[{

Cell["One Frequency", "Section",
 CellChangeTimes->{{3.7482675945630627`*^9, 3.748267596976675*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[CapitalDelta]", ",", " ", "A", ",", " ", "B", ",", " ", "\[Omega]", 
     ",", " ", "H"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "A"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"A", ",", " ", "\[CapitalDelta]"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"B", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "B"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", " ", "=", " ", 
    RowBox[{"H0", " ", "+", " ", 
     RowBox[{"Hp1", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]", "*", "t"}]]}], " ", "+", " ", 
     RowBox[{"Hn1", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]", "*", "t"}]]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]I", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HF", " ", "=", " ", 
    RowBox[{"0", "*", 
     RowBox[{"IdentityMatrix", "[", "6", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getBlock", "[", 
   RowBox[{"i_", ",", " ", "j_", ",", " ", "M_"}], "]"}], " ", ":=", " ", 
  RowBox[{"M", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
        "n"}]}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
        "n"}]}], " ", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"i_", ",", " ", "j_", ",", " ", "block_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"HF", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
          "n"}]}], " ", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
          "n"}]}], " ", "}"}]}], "]"}], "]"}], " ", "=", " ", "block"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{"H0", " ", "-", " ", 
     RowBox[{"\[Omega]", "*", "\[Sigma]I"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", "0", ",", " ", "H0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"1", ",", " ", "1", ",", " ", 
     RowBox[{"H0", " ", "+", " ", 
      RowBox[{"\[Omega]", "*", "\[Sigma]I"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "Hn1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", "1", ",", " ", "Hn1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "Hp1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"1", ",", " ", "0", ",", " ", "Hp1"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<H:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"H", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<HF\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HF", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tmax", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"URWA", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H0", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UF", " ", "=", " ", 
   RowBox[{
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "*", "HF", "*", "t"}], "]"}], " ", "//",
     " ", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "=", " ", 
   RowBox[{"0", "*", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"UfromF", " ", "=", " ", 
      RowBox[{"UfromF", " ", "+", " ", 
       RowBox[{
        RowBox[{"getBlock", "[", 
         RowBox[{"i", ",", " ", "0", ",", " ", "UF"}], "]"}], "*", 
        SuperscriptBox["E", 
         RowBox[{
         "\[ImaginaryI]", "*", "i", "*", "\[Omega]", "*", "t"}]]}]}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", "1"}], ",", " ", "1"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"URWA", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UfromF", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MF", " ", "=", " ", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "UfromF"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MRWA", " ", "=", " ", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "URWA"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fidelity", "[", "MF", "]"}], ",", " ", 
     RowBox[{"fidelity", "[", "MRWA", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "Tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fidelity\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Floquet\>\"", ",", " ", "\"\<RWA\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.748110578685027*^9, 3.7481106527863855`*^9}, {
   3.748110842576171*^9, 3.748110865670882*^9}, {3.748110906195565*^9, 
   3.7481109204633503`*^9}, {3.7481109939010916`*^9, 
   3.7481110851061172`*^9}, {3.7481111420558567`*^9, 3.748111276656146*^9}, {
   3.748111401952042*^9, 3.748111404762426*^9}, 3.7481119218648596`*^9, {
   3.7481119775268335`*^9, 3.7481120085099983`*^9}, {3.7481120764139223`*^9, 
   3.7481120856266212`*^9}, {3.7481340352938056`*^9, 
   3.7481340638303876`*^9}, {3.748134119932101*^9, 3.748134233898831*^9}, {
   3.748138638418237*^9, 3.748138819403797*^9}, {3.748138963483886*^9, 
   3.7481390435128345`*^9}, {3.748190393967222*^9, 3.7481904001812115`*^9}, {
   3.748190466004575*^9, 3.7481904661364975`*^9}, {3.7481906178309317`*^9, 
   3.748190673519097*^9}, 3.7481907120085144`*^9, 3.7481908041998515`*^9, {
   3.748190858987335*^9, 3.748190884927939*^9}, {3.7481909208862295`*^9, 
   3.7481909232642665`*^9}, {3.748190958801573*^9, 3.748190996837264*^9}, {
   3.7481910281802263`*^9, 3.748191044606722*^9}, {3.748191114759844*^9, 
   3.7481913755548515`*^9}, {3.748264596010191*^9, 3.7482646868719587`*^9}, {
   3.748264824761036*^9, 3.7482650661990957`*^9}, {3.748265264348879*^9, 
   3.7482653286713014`*^9}, {3.748265384613567*^9, 3.7482654081949973`*^9}, {
   3.7482654669940863`*^9, 3.7482656633129153`*^9}, {3.74826569368668*^9, 
   3.7482656970137672`*^9}, {3.748265749312709*^9, 3.7482657773198595`*^9}, {
   3.74826581663127*^9, 3.748265832351235*^9}, {3.748265911390605*^9, 
   3.7482660343916187`*^9}, {3.7482660700055523`*^9, 3.748266075354479*^9}, {
   3.748266111727892*^9, 3.7482661137437353`*^9}, {3.7482661645132732`*^9, 
   3.748266238665434*^9}, {3.7482662720042725`*^9, 3.7482662923531914`*^9}, {
   3.74826633280171*^9, 3.7482663337711554`*^9}, {3.7482663652720523`*^9, 
   3.748266433394684*^9}, {3.748266711766458*^9, 3.7482667452620764`*^9}, 
   3.7482667854255857`*^9, {3.748267108134842*^9, 3.7482671212423067`*^9}, {
   3.748269513666747*^9, 3.74826956121789*^9}, {3.748269592677412*^9, 
   3.748269593325302*^9}, {3.7482696309661903`*^9, 3.748269655540086*^9}, {
   3.7482696963751335`*^9, 3.748269716026129*^9}, {3.74827200528185*^9, 
   3.74827201264262*^9}, {3.748272087887103*^9, 3.748272122885269*^9}, {
   3.7482737671698294`*^9, 3.748273767328738*^9}}],

Cell[BoxData["\<\"H:\"\>"], "Print",
 CellChangeTimes->{3.7482721238207273`*^9, 3.748273813128935*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"A", "+", 
       RowBox[{"B", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]"}]]}]}]},
     {
      RowBox[{"A", "+", 
       RowBox[{"B", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]]}]}], 
      "\[CapitalDelta]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7481110076341906`*^9, 3.7481110257667537`*^9}, {
   3.748111192218733*^9, 3.7481112772787857`*^9}, 3.748111405502999*^9, 
   3.748111922982216*^9, {3.7481119847446747`*^9, 3.7481120094484677`*^9}, {
   3.7481120814350333`*^9, 3.7481120862552605`*^9}, 3.7481340384859695`*^9, {
   3.7481341857405434`*^9, 3.748134234499484*^9}, {3.7481386778652525`*^9, 
   3.748138820427208*^9}, {3.748138964340393*^9, 3.7481390444612875`*^9}, 
   3.748190485053442*^9, {3.7481906188108816`*^9, 3.7481906742906513`*^9}, 
   3.74819071241628*^9, 3.7481908049054604`*^9, {3.748190861210088*^9, 
   3.7481908893364067`*^9}, 3.7481909309460163`*^9, 3.7481910455414553`*^9, 
   3.748191267245387*^9, {3.7481913422853727`*^9, 3.7481913760945244`*^9}, 
   3.7482648963346453`*^9, {3.7482655485369935`*^9, 3.7482655686497097`*^9}, 
   3.7482656084722714`*^9, 3.748265665794488*^9, 3.748266075834201*^9, {
   3.7482661146332235`*^9, 3.74826612670207*^9}, 3.748266187277509*^9, {
   3.7482662812749434`*^9, 3.7482662928499064`*^9}, 3.748266334320835*^9, {
   3.7482663971054173`*^9, 3.748266434326148*^9}, 3.7482667457687836`*^9, 
   3.748267121850958*^9, 3.748269563372955*^9, 3.7482695941238613`*^9, {
   3.748269635376604*^9, 3.748269656004819*^9}, {3.7482696970007734`*^9, 
   3.748269721023265*^9}, 3.748272036594776*^9, 3.748272093012116*^9, 
   3.748272124034605*^9, 3.748273813356804*^9}],

Cell[BoxData["\<\"HF\"\>"], "Print",
 CellChangeTimes->{3.7482721238207273`*^9, 3.7482738136086636`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[Omega]"}], "A", "0", "B", "0", "0"},
     {"A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]"}], "0", "0", "0", "0"},
     {"0", "0", "0", "A", "0", "B"},
     {"B", "0", "A", "\[CapitalDelta]", "0", "0"},
     {"0", "0", "0", "0", "\[Omega]", "A"},
     {"0", "0", "B", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7481110076341906`*^9, 3.7481110257667537`*^9}, {
   3.748111192218733*^9, 3.7481112772787857`*^9}, 3.748111405502999*^9, 
   3.748111922982216*^9, {3.7481119847446747`*^9, 3.7481120094484677`*^9}, {
   3.7481120814350333`*^9, 3.7481120862552605`*^9}, 3.7481340384859695`*^9, {
   3.7481341857405434`*^9, 3.748134234499484*^9}, {3.7481386778652525`*^9, 
   3.748138820427208*^9}, {3.748138964340393*^9, 3.7481390444612875`*^9}, 
   3.748190485053442*^9, {3.7481906188108816`*^9, 3.7481906742906513`*^9}, 
   3.74819071241628*^9, 3.7481908049054604`*^9, {3.748190861210088*^9, 
   3.7481908893364067`*^9}, 3.7481909309460163`*^9, 3.7481910455414553`*^9, 
   3.748191267245387*^9, {3.7481913422853727`*^9, 3.7481913760945244`*^9}, 
   3.7482648963346453`*^9, {3.7482655485369935`*^9, 3.7482655686497097`*^9}, 
   3.7482656084722714`*^9, 3.748265665794488*^9, 3.748266075834201*^9, {
   3.7482661146332235`*^9, 3.74826612670207*^9}, 3.748266187277509*^9, {
   3.7482662812749434`*^9, 3.7482662928499064`*^9}, 3.748266334320835*^9, {
   3.7482663971054173`*^9, 3.748266434326148*^9}, 3.7482667457687836`*^9, 
   3.748267121850958*^9, 3.748269563372955*^9, 3.7482695941238613`*^9, {
   3.748269635376604*^9, 3.748269656004819*^9}, {3.7482696970007734`*^9, 
   3.748269721023265*^9}, 3.748272036594776*^9, 3.748272093012116*^9, 
   3.748272124034605*^9, 3.7482738138285327`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.8677919648504373`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0071477644489517655`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.13316768324229733`"}], "+", 
       RowBox[{"0.47869861658329255`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.1275635253749162`"}], "+", 
       RowBox[{"0.48022239052555993`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.7446940066573812`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.44558368520640734`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7481110076341906`*^9, 3.7481110257667537`*^9}, {
   3.748111192218733*^9, 3.7481112772787857`*^9}, 3.748111405502999*^9, 
   3.748111922982216*^9, {3.7481119847446747`*^9, 3.7481120094484677`*^9}, {
   3.7481120814350333`*^9, 3.7481120862552605`*^9}, 3.7481340384859695`*^9, {
   3.7481341857405434`*^9, 3.748134234499484*^9}, {3.7481386778652525`*^9, 
   3.748138820427208*^9}, {3.748138964340393*^9, 3.7481390444612875`*^9}, 
   3.748190485053442*^9, {3.7481906188108816`*^9, 3.7481906742906513`*^9}, 
   3.74819071241628*^9, 3.7481908049054604`*^9, {3.748190861210088*^9, 
   3.7481908893364067`*^9}, 3.7481909309460163`*^9, 3.7481910455414553`*^9, 
   3.748191267245387*^9, {3.7481913422853727`*^9, 3.7481913760945244`*^9}, 
   3.7482648963346453`*^9, {3.7482655485369935`*^9, 3.7482655686497097`*^9}, 
   3.7482656084722714`*^9, 3.748265665794488*^9, 3.748266075834201*^9, {
   3.7482661146332235`*^9, 3.74826612670207*^9}, 3.748266187277509*^9, {
   3.7482662812749434`*^9, 3.7482662928499064`*^9}, 3.748266334320835*^9, {
   3.7482663971054173`*^9, 3.748266434326148*^9}, 3.7482667457687836`*^9, 
   3.748267121850958*^9, 3.748269563372955*^9, 3.7482695941238613`*^9, {
   3.748269635376604*^9, 3.748269656004819*^9}, {3.7482696970007734`*^9, 
   3.748269721023265*^9}, 3.748272036594776*^9, 3.748272093012116*^9, 
   3.748272124034605*^9, 3.7482738360389566`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.3766294445547957`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.34339546089808304`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.2257383943478203`"}], "+", 
       RowBox[{"0.8302240734286204`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.22573839434782028`"}], "+", 
       RowBox[{"0.8302240734286245`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.15089105020697532`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.4868286125305378`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7481110076341906`*^9, 3.7481110257667537`*^9}, {
   3.748111192218733*^9, 3.7481112772787857`*^9}, 3.748111405502999*^9, 
   3.748111922982216*^9, {3.7481119847446747`*^9, 3.7481120094484677`*^9}, {
   3.7481120814350333`*^9, 3.7481120862552605`*^9}, 3.7481340384859695`*^9, {
   3.7481341857405434`*^9, 3.748134234499484*^9}, {3.7481386778652525`*^9, 
   3.748138820427208*^9}, {3.748138964340393*^9, 3.7481390444612875`*^9}, 
   3.748190485053442*^9, {3.7481906188108816`*^9, 3.7481906742906513`*^9}, 
   3.74819071241628*^9, 3.7481908049054604`*^9, {3.748190861210088*^9, 
   3.7481908893364067`*^9}, 3.7481909309460163`*^9, 3.7481910455414553`*^9, 
   3.748191267245387*^9, {3.7481913422853727`*^9, 3.7481913760945244`*^9}, 
   3.7482648963346453`*^9, {3.7482655485369935`*^9, 3.7482655686497097`*^9}, 
   3.7482656084722714`*^9, 3.748265665794488*^9, 3.748266075834201*^9, {
   3.7482661146332235`*^9, 3.74826612670207*^9}, 3.748266187277509*^9, {
   3.7482662812749434`*^9, 3.7482662928499064`*^9}, 3.748266334320835*^9, {
   3.7482663971054173`*^9, 3.748266434326148*^9}, 3.7482667457687836`*^9, 
   3.748267121850958*^9, 3.748269563372955*^9, 3.7482695941238613`*^9, {
   3.748269635376604*^9, 3.748269656004819*^9}, {3.7482696970007734`*^9, 
   3.748269721023265*^9}, 3.748272036594776*^9, 3.748272093012116*^9, 
   3.748272124034605*^9, 3.748273836206859*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.8761860256412499`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.004642557505212516`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.12844550362788693`"}], "+", 
       RowBox[{"0.47273894271442257`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.12861777596638113`"}], "+", 
       RowBox[{"0.4726921017603808`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.7532009139376814`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.44767386355783356`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7481110076341906`*^9, 3.7481110257667537`*^9}, {
   3.748111192218733*^9, 3.7481112772787857`*^9}, 3.748111405502999*^9, 
   3.748111922982216*^9, {3.7481119847446747`*^9, 3.7481120094484677`*^9}, {
   3.7481120814350333`*^9, 3.7481120862552605`*^9}, 3.7481340384859695`*^9, {
   3.7481341857405434`*^9, 3.748134234499484*^9}, {3.7481386778652525`*^9, 
   3.748138820427208*^9}, {3.748138964340393*^9, 3.7481390444612875`*^9}, 
   3.748190485053442*^9, {3.7481906188108816`*^9, 3.7481906742906513`*^9}, 
   3.74819071241628*^9, 3.7481908049054604`*^9, {3.748190861210088*^9, 
   3.7481908893364067`*^9}, 3.7481909309460163`*^9, 3.7481910455414553`*^9, 
   3.748191267245387*^9, {3.7481913422853727`*^9, 3.7481913760945244`*^9}, 
   3.7482648963346453`*^9, {3.7482655485369935`*^9, 3.7482655686497097`*^9}, 
   3.7482656084722714`*^9, 3.748265665794488*^9, 3.748266075834201*^9, {
   3.7482661146332235`*^9, 3.74826612670207*^9}, 3.748266187277509*^9, {
   3.7482662812749434`*^9, 3.7482662928499064`*^9}, 3.748266334320835*^9, {
   3.7482663971054173`*^9, 3.748266434326148*^9}, 3.7482667457687836`*^9, 
   3.748267121850958*^9, 3.748269563372955*^9, 3.7482695941238613`*^9, {
   3.748269635376604*^9, 3.748269656004819*^9}, {3.7482696970007734`*^9, 
   3.748269721023265*^9}, 3.748272036594776*^9, 3.748272093012116*^9, 
   3.748272124034605*^9, 3.748273836393751*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwcmnc81d8fx+29987ee7vGfd9LhVSSZGZESZR8hRQpIyJJmQnJJiUjJJnR
QtKykigU2Svjd87vr/t4Pt6vs895n/f7fK6Ex1kbLyoKCgpFFgoK/Ct5c+tB
tliLCcuPrZ2dnb/EveeKGP28c4jdKbn0FBRzxEPflW/Kez8ins/dpPuH7Ds0
bVasiU+JS4pvorDdLuPvITrvF8Tvzbp9mD/xJZbt5LYROwbOVw4gPZW7tOrm
jU6i5Z6CK78Rq5Q1PF4LfUO0zRHhYUV6+2VrreWTPcSW9NXQ58jemrM4EFL6
nqhjPpmdifhzu4nIau4HIqOLjjQv0v+ZinM5n/aRmMJ10Pwbrp/9Y/bijc9E
/7GBi1KIBbTFR89FfSU2kmW2xhCrOpyWmAsdJB7zOrIticqbhdd6nDk3TMz0
rnP4tf2X6PCAMv/PyW9EUtukphDS63kWBug8GiUybQhJmyN968q+24Gl34na
bkPP9iL7/rj5qqqCMWLsUQ8JYVT+i3Ba/0LuD6JifqQnP9IfrzBa1sgaJ76U
l38piHgWxnjPpU0QA6eyFVK3/hJDPlzTfZz8k3jurWPlFCpPfULl6N8bv4jh
n4qoI5A+ca0vWDVukujwkNtZHNkF4kPS/aKmiK9v8isTUfkHomL15ZeniUwL
pWEnkV71cdvX36G/iRcSGwqyUf/qyac2FIP+EBMbdla0N/8SzT6yCfucmyG+
Yh78vBvZe05WG5b4zhL7vsjP3ELlHTccnCdP/iWeIBlpFCB9wMvLTbc15oiP
1er3UaD26m72HdB6NEc0NGa80oT0W/Yy3/qU54ludx1polH/yJIhZwNK54l+
X6bG9//7S4z9/XqHU36BGPXr0y8mpH9XLZpUWbBAFOf6WeCKmCvcX/yQ1CIx
I+ffji3S2+9tezyXu0icYaG+HYXay+bgIyWJLRGnq6Ym/iD9j6/e79Wylog1
YhxVusgu/+CZe4/gMvGG/3VlMip/xpdt4UzaMvHM86CNMKSv1nG/ysa7Qhwe
bHg0jMa7vl3FVZG8QiQM7b1WtfGXaNJF92A/xyqRsa198Tbqf9QtB62ZG6vE
U5Mf8j+i8q8dy9sSmNeIp85Y8+P5Y5feOawct0Z87fr4AR9i25lD42/o1olD
OS0qnUifWZsfeDpqndjV/8vyI6rv2+VVGmaqDeLc5FA0DeqftIVlSunlDeKY
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
tlVc/dl4Pzv0/tHWIMOri/yDD/B+5j6a469DBjoSlVEe4rF3w4fKDchAjhk7
VoD3c6wnzaQxGQjLovO4fk3y71opMhm0U75qpiN23Dx3ynUPGSj1DzdVIr5a
uyZ815IM4feXBvB4Sv0vd386QIZly0mli4j7FOmucB0mw57s3rtNiDfGE7QO
HEX1Kb6+g+MViRzun3FOZCixJXHsQ+yrb+gV5kqGoANUknWIa997jPsfJ4Pm
19/2LYgpTl8/7nmSDPNJF77h82lJ82Ts6GkyzMX9SPNFfOfeV/d9Z8lQLhG2
sYX4my7ld5P/UP+Or35TQ6zYK++mGUwGCc2i+/g+CTxl/U3mIhlYNyrHKNH+
b6IKOSZ4mQxsMb1NuH+MWTnDLJFkaCBRJ2L/YavT6UxxjQzN5XtcsT27e3Zw
8ToZPEnTkRKo/ORJPqdfiWToXUv8EI3vA0qTgYFkxEPBqTj/Dc/0cuhORePx
jyF4IX2X1o0vLZlkcNV8Jc6H6uN6V320Jhvtl8Lrt1nxfXVi6FNxHhmu2D4h
syB98Q61XVYhGVJPhDGuIf1CutLHm6Vk2LR2E8Xn30jzsG1kBRmGa3rdcTx0
7U3oh6AnZDAU4VvIQ+X7PPNsfGrJMGKwOx7nLyLbr967NJAhL5LnMg3iE2nz
1oeayBCl1PQnDekr1QV7zVrJcMjYrDQQ1bf5Cg7qvySDieOi5SmcHxz37lZ6
TYb+/ffKn+P7avPm/l3dZHA6fPTGNVR+IOXpW64+MoRE1pLx+5y02rd9dJ/I
YDnnOxOO2jvbRfdm/SsZhr7rP/+L9A3uqpYzw2SoUJN414XsNP+OvBr9ToZq
+dm5RFT+wJ0w8/4JMjwbp3b2xf5NpaCzc4oM0vPXqPgQj718u+fZDBlya1cz
LyC9ittSR8U8GSIKOM7j/RWyLrw7b5kMf1bYBH4hfWuyaXvKOhmqWPeq7MPv
scqnTeO2yPAiqXFLH/HRjuTWS5Sm0B5iGfIF6fOONZD8aU3B2c+mKB7V92f1
e/NxRlOIWvXkwO+JurcY4SirKfRduJbCgfRXFDVeWHKaQlXgz7lExG/b7E1M
eE1hjbh0hYTq53OJeK4haAoHKUWGcL7jtlJkJCNqCnwPt7dGkb7sZs8zAQlT
WGiJlcX3zYr8KoFFxhRUC3d73cHvNa1iDTvyphB77vdkFNJfd9pjsKhsCsty
3zflEX9c8qv7qW4K9xROiVYhvXhiit6Atikc3sxrHsX+Qu557Tt9Uxiacup8
gPTVzeM6LUamINv/dbcVsu84sNRUgyns6e/swOfLclFLu9jMFLaztGkzkP5O
glPVXXNTcN8WfLeK4weZSM2bVqYQNkHT4YlY/kVp5VVrU1C7fjDaAukD7PvU
g2xNQVPyor474ufz649O2ZuCmTWVB/YnteP/4+jM46nunjguka1sSZIlQikp
2ogyuPe6rrvfpBSVLKUUIpIkSZIkpCKlLElaiKyVKHoQksiSECVbJVQSvzm/
P9+v+Zwzc86ZmXO+Hnma8rN3WMKq3fQYJbQ/bH707M8uSyiLLzp1iNyXVdGV
5i6WkK6/ZRbJ/1tPPOrO7kO9ouwLTbRfe8hofuNhCRH6LwNckS+lLPm4wNsS
1tlenliGHBUv8mX3EUuIHZfuXo8cfrZr+E6AJbxJ+3tzBzmvwKfjP4IsoXz5
O2USb8ChxCnjU5Ywa5C1kY3s4+Q/K+SMJUQ9Fu6wQ/awtZWuOmcJjqHUyC3I
rnRDRfloS/jbfXY3mW+XiYyafZwl2E4yA7chb9Mf1L51xRKW1B9U347M1/hv
Rf81S6CvqSokzFRIX2t4E8/7mWarAzJV7NTGgDRLuF87v3Qn8qaJndSyO5ag
t7ArnIFsNGTKkryP+ZigWk/0Bp0LbPk5lmC+czhnP/Kyt+M7Eh5jPjxgBeoh
a1W8de4uwv1xTCzlIqsWPjyw7JklmH113xWCrJh13se73BLOt8dKkfeW7A33
wKJKSwgz2BSwElkixipUuAbzhUOZSfqJ8GmtSEa9JUR/Cdo+TPqD34y4mEZL
WCMwuDqOPObekdj6Huvje8pIOeqHHYpTND9Ywp+9KxJ60N7HvXLXvcsS9g23
UzPIfWTp+yin1xIkw4LGPqC+bR2/eOKrJfRL8IXJe65Rd2W5xTDmz8T50yQ/
a1VmV0eMWEJg1t/xHtRXynxtaBi3hG+pc9NIPpQKV7Qq/7UEz64MHfL+Lxq7
1e00bQlp29tL6tD+qO9Ef+ZMCuzJyVjnjpzVtmNkRIwCjF+nAsjPR9JrjSc2
zKaA+dyeUpLvN54rCp+SpYA2c+POMtJ/cn9KVCtQoGNgZI036mNu18vNXUCB
Kyaq2RS0n0u4t2C7KgVMIzoDVGd9Nws9H6GRokEBodBid3dyHwS76Q5oU+CV
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
rzOOm3LBKivl935kj9unv/tt4kItTeq9PuqVog7EewMXit5fPnoQ+YWPwNTD
ggvJFhXBD1B/aPuGbjcKFxiXHz+/inZlC41wJxoXnk4fciT3ZcVScX0HOhe8
y+2d/FHvJfPtrR2DC4vSG7LskFXG3x3lM7mgK/9zWRjqK9tL1FlsLoyoj5vk
43ze5SkvrbhcaF598sxf1KtmRuy34HOBf8RvaAD1r6K95DZu5sKP/1bFk/tP
JX3GkxVbuLB7PTybJfPdzLP44l61rVyYTDQKIvvxol5DQcaeCwq79BwXoH7+
5+xn09u50Bv87p0Wzu/+13z/dwcuhOmJ+i/E8U9lGxS7dnJBaSj+5AnUy+s4
lb3ZzYXhgXZ1cn+7mox4lO3hQs2xXZt2or6IG7LgkQsXhD8p6f5H8tdV/mWK
GxeuOc+qmSL999gtz7h9XBBymXXlDPp7HG2ocno/1sOC87/UcLxkelmlrwfW
09t5W7mkfxTzD7se4sKvgluG5P2ZU9+tZufFhcIlweqXUS/62bvK6jDuX2tU
0DVyP/4VPmLky4WecpaPMY7Pko3V0PXD9cf+W/lVmvz9ssWvFxzlwkHV5AJR
HL/Z5JG/5DEudFvEfnBHfQbXUutvIBeOrLvzMRXnm3R5WzcQxIUcYZOvKTLk
/bLnWHswnu8ptewYtKdG/9R5HcKFiUVfV5P9/512quFJKJ7Pyurzq1DPLJ4b
dD+MC2m8Fdu70X9yfYrujXAuWDpsiXyD+p+9q99diMB8DnqgvwLttL/lwcGR
XNi/a559BI5PkN2s5xWF9Ty7+2ER+hvW7mneHc2FfiFrrgeyhYnPKX4M7q+u
0Swu6uO5Iist49C/pZNJFc7X7xLXujoe+WN3xiHUbzqmFaZ1hQsJ2nX1N9B+
MTrXYF4C9is96a/bcXxPGuWD6DUubHksc1QO7UbFjeHjSVyo/5J5XRU5st55
zZcbXNjwea8uA/WdvaMfm29yYdzeNKYa7Wv+hp57lcIFa5uPm9SRw2XnrS9M
40L79DVGP3K7dlr3ndtcSDn8ZdZKHL/KZG1Uwh2sr6c9CifRHsp9aXzuLhcc
bJQuZSK/d7HtPXaPCx2nQ+qIXu9Yb/SBB3heurEOn9F+ItrX1CEb47Fe7JGH
3JAm2sd6xIWxQ8b+s1GvU3wpdlMeF/45eLrNQw6o1zZbmc+FY1d1ln4h92lv
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
4/8D2P/fZg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
KA75n2IrjYfy7cJSJHtCSLKWtZWyVPdhVjODMSgpQllSFFHSJqVUlFRSlqRI
kqSSbEklyRLtlkKpzFaIfyHe836c37Pc51znWs7zYZbL9KCfVEtG+2gexN89
EgGK69FvMy53yR92gEI5zS2WeN3d6vkGiWMOkBi8a/dgHvKxWdwxdAL7N9Fj
hWxCPQWpr/9+ygEmkuY90QrHPJiyur09xQFCVaTm/V9fBy4FrGtOdYCMcvu/
SaiX+mVJHx5fcoCoJxcjznqJiUrTvbX3sxzAoX3fiux0zKvAznf5OQ6QNMf5
+yPUf/7k1DUZeQ5QplbhJViDfpdm9vZ0gQO0tXdtkMP5rVzq5n64yAFik3Su
XcD6jr2Meb2rBPHxfxRrjv23bc7hhZQiHjYh0qW+yKeJF63e5Xj+Sje1FTli
EnhhgOta7QBvVII1jyG+dxZrvqLWOsCGyOs/uK5iMv4CXKzrHEBx/73sT6gv
+qbgZrMGB7Du0rCNRf9OHj/tNK8Z+aTxO/Um1td+/kGjSpsDaLhVvlm7VUwM
F31mS79zgD57y+taeN72eumXfz86wPmAKwFc1EO530KWqMsBUodsxw7zUF9j
Hi+6exzA10lQdAj543xuP/NNnwOsWVBzVRn5l2aR+/x5P87r26JhPhv5XNdI
rxA5QBWrKz5rt5hY+P5+VjTgAEynyL+/sb7ov3NoOcMO8HbhwszJdWJSm0J5
ev4v8iv2tu9c/C1vvpVy/B/iyzvI+4j5vvZZSu2+KRQ4d/6a8ctI/L71Kbff
IUUBK5/Gn9EMzNP/emo2zaCA322toueI1/IzM2CtAgWiHsj7VKG/HzJd8og1
kwLeAtdNxSzU9xPP1avVKPCqOTxIBvmi7h1btUSTAj32b3MlMG99R66vNJpL
Ac+dYl1bnM/N0y0VGnoUMM5YfOctU0xGjP+zlTeiwC8nx5v3EX+o1SmfNKaA
11DLdSP00xPr6TZD5hTQml3+JRnE5O3v0LJviykQ7Kl7STcM8+PU+RXtlhSQ
dZc8JI/+EbKgqrTJGt+/Q6nroBP6Xc1Xq8crKZARzX4idhaTyXXy9+8BBdIE
Hp3S6LesoWWW+VR8Xtc1Rg31fi5x/d10JgWSi+2Y2itxfzA6vPQ0hwJl24sp
MdFiYvyo4E4clwL6xyJFuei/EZ5ti3e5UyCgeKmZy2r8nhr4e3uLJ/52s03Y
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
LNnWPKez5yv6Le9MRDjqZZr19h1iAzhf/vQ9X4fzuep53Ie5PzCve+2LOcjf
idXvOQa/KBD5Ze75ZwDPy1KotxnE+aZ6gJ/qhuepUeZuw8i3n/FiV/Rr2pVL
FadHKOg0kbj1oYUl26UbIPEvBY1JaZ5CzCe5oKnFBeMUBHdHH5yAefPil6XB
axEatiXuvurRyJKTrpG5wok0ZMlqzty6DvOv9aWWqDgNtd2/H85EfL/aSd5R
nkzDr4X/ViXj8zertmjoS9KQysoozkE92K8NvWEtTYP4DpfPKojv9PvlSq6y
eD9hpUUv1lO9QPTKqak0FI3dqto4zpKghA1y1+VoqD6UK38F57HB1KDIfHka
cjWS1jl/Y0n/6ZLJ9Qo0vMja9LiwgyXpw39PsbNo6H8jvWUb8unguWZ8ghIN
L28m+gxPEhL5Tn//Ocr4+02y0/tqWPKSW/hLV4WGKIUvUbVmQhJcM+hlpUqD
+bmQ5t55OJ9Br9dFnYbvHWe/856y5Fuez75gDRq0j3vLNK5E/S3O7UhYSENn
9nvrDfq47yQNOOQtokFut+M6nScsmSG/4kPtEhrKNCK2+UzHfS7Mk8Mso8Fi
yDPCdjPuH3/v1omsoMFUYHvepoIlht49ZkqraDj8WjvI5wdLBroXVejo0JBZ
PeJPWQrJ7e0uYKlHQ/ejvW9U3rHEsT798T4DGn40hB0sb2KJgskX/SBD7Dcs
2bUK+3lVqJ4bv4aG9j95ss19LDmttUvrwToaFO5NviuC9Rml3sh4RWgY45xN
uYl5+X1m63zBBjz/YFwYi/mTcU75xr+NNJglb1D9msWSnSL2SoqbaShwhgBX
DczPw/Gx2qY0ZIgvLrSaKyS1wvfTLMxpeMsxdpt3hyUhjjMj91rQsEMz3aoN
8V/zhpp80oqG370cfcMV+L2w5fKpOBvkb4njndpsltwpbhi7b0eDR0nJ3mwB
S5xWTfOvoWgwrIzwiV6NeXTL6tcXLg3Tb5rWlmD9dUpRXuN8Gs6ear75sYol
Z6JrembZ02B3uFXNA+fzWjGpfat2IF8K8oXub1jy86hph/lOGhJfLL6qjedl
fg112LOLBhvLnT4uS4Vkl3PF+8DdNJTaz9rAQbxmvxflXN2L+KWVm9RdZ0n9
VuO6HBcaLmSJXM5WEJLQ0iCzl640yPj113pi/q7Ve1re5U5D4cDw2YRYPO/O
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
B4f+/UM9pXSuONwpIP8DDZfZIA==
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.7000000000000001}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Fidelity\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {0.7016868408699246, 1.0077314313039776`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Floquet\"", "\"RWA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7481110076341906`*^9, 3.7481110257667537`*^9}, {
   3.748111192218733*^9, 3.7481112772787857`*^9}, 3.748111405502999*^9, 
   3.748111922982216*^9, {3.7481119847446747`*^9, 3.7481120094484677`*^9}, {
   3.7481120814350333`*^9, 3.7481120862552605`*^9}, 3.7481340384859695`*^9, {
   3.7481341857405434`*^9, 3.748134234499484*^9}, {3.7481386778652525`*^9, 
   3.748138820427208*^9}, {3.748138964340393*^9, 3.7481390444612875`*^9}, 
   3.748190485053442*^9, {3.7481906188108816`*^9, 3.7481906742906513`*^9}, 
   3.74819071241628*^9, 3.7481908049054604`*^9, {3.748190861210088*^9, 
   3.7481908893364067`*^9}, 3.7481909309460163`*^9, 3.7481910455414553`*^9, 
   3.748191267245387*^9, {3.7481913422853727`*^9, 3.7481913760945244`*^9}, 
   3.7482648963346453`*^9, {3.7482655485369935`*^9, 3.7482655686497097`*^9}, 
   3.7482656084722714`*^9, 3.748265665794488*^9, 3.748266075834201*^9, {
   3.7482661146332235`*^9, 3.74826612670207*^9}, 3.748266187277509*^9, {
   3.7482662812749434`*^9, 3.7482662928499064`*^9}, 3.748266334320835*^9, {
   3.7482663971054173`*^9, 3.748266434326148*^9}, 3.7482667457687836`*^9, 
   3.748267121850958*^9, 3.748269563372955*^9, 3.7482695941238613`*^9, {
   3.748269635376604*^9, 3.748269656004819*^9}, {3.7482696970007734`*^9, 
   3.748269721023265*^9}, 3.748272036594776*^9, 3.748272093012116*^9, 
   3.748272124034605*^9, 3.748273838963275*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two Frequencies", "Section",
 CellChangeTimes->{{3.748267606341693*^9, 3.748267609057132*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[CapitalDelta]", ",", " ", "A", ",", " ", "Ba", ",", " ", "Bb", ",", 
     " ", "\[Omega]a", ",", " ", "\[Omega]b", ",", " ", "H"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "A"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"A", ",", " ", "\[CapitalDelta]"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1a", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Ba", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1a", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Ba"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1b", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bb", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1b", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Bb"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", " ", "=", " ", 
    RowBox[{"H0", " ", "+", " ", 
     RowBox[{"Hp1a", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]a", "*", "t"}]]}], " ", "+", 
     " ", 
     RowBox[{"Hn1a", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]a", "*", "t"}]]}], " ", 
     "+", " ", 
     RowBox[{"Hp1b", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]b", "*", "t"}]]}], " ", "+", 
     " ", 
     RowBox[{"Hn1b", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]b", "*", "t"}]]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]I", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HF", " ", "=", " ", 
    RowBox[{"0", "*", 
     RowBox[{"IdentityMatrix", "[", "10", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getBlock", "[", 
   RowBox[{"i_", ",", " ", "j_", ",", " ", "M_"}], "]"}], " ", ":=", " ", 
  RowBox[{"M", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
        "n"}]}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
        "n"}]}], " ", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"i_", ",", " ", "j_", ",", " ", "block_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"HF", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
          "n"}]}], " ", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
          "n"}]}], " ", "}"}]}], "]"}], "]"}], " ", "=", " ", "block"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{
    RowBox[{"-", "2"}], ",", " ", 
    RowBox[{"-", "2"}], ",", " ", 
    RowBox[{"H0", " ", "-", " ", 
     RowBox[{"\[Omega]a", "*", "\[Sigma]I"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{"-", "1"}], ",", " ", 
    RowBox[{"H0", " ", "-", " ", 
     RowBox[{"\[Omega]b", "*", "\[Sigma]I"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", "0", ",", " ", "H0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"1", ",", " ", "1", ",", " ", 
    RowBox[{"H0", " ", "+", " ", 
     RowBox[{"\[Omega]b", "*", "\[Sigma]I"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"2", ",", " ", "2", ",", " ", 
     RowBox[{"H0", " ", "+", " ", 
      RowBox[{"\[Omega]a", "*", "\[Sigma]I"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{
    RowBox[{"-", "2"}], ",", " ", "0", ",", " ", "Hn1a"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", "2", ",", " ", "Hn1a"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"-", "2"}], ",", " ", "Hp1a"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"2", ",", " ", "0", ",", " ", "Hp1a"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{
    RowBox[{"-", "1"}], ",", " ", "0", ",", " ", "Hn1b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", "1", ",", " ", "Hn1b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setBlock", "[", 
   RowBox[{"0", ",", " ", 
    RowBox[{"-", "1"}], ",", " ", "Hp1b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"1", ",", " ", "0", ",", " ", "Hp1b"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<H:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"H", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<HF:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HF", " ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bb", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]a", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]b", " ", "=", " ", "61"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tmax", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"URWA", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H0", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UF", " ", "=", " ", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "*", "HF", "*", "t"}], "]"}], " ", "//",
      " ", "N"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "=", " ", 
   RowBox[{"0", "*", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]s", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Omega]a"}], ",", " ", 
     RowBox[{"-", "\[Omega]b"}], ",", " ", "0", ",", " ", "\[Omega]b", ",", 
     " ", "\[Omega]a"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"UfromF", " ", "=", " ", 
      RowBox[{"UfromF", " ", "+", " ", 
       RowBox[{
        RowBox[{"getBlock", "[", 
         RowBox[{"i", ",", " ", "0", ",", " ", "UF"}], "]"}], "*", 
        SuperscriptBox["E", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"\[Omega]s", "[", 
           RowBox[{"[", 
            RowBox[{"i", " ", "+", " ", "3"}], "]"}], "]"}], "*", 
          "t"}]]}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", "2"}], ",", " ", "2"}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MF", " ", "=", " ", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "UfromF"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MRWA", " ", "=", " ", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "URWA"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<exact\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Floquet - fidelity \>\"", " ", "<>", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"fidelity", "[", 
     RowBox[{"MF", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<RWA - fidelity \>\"", " ", "<>", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"fidelity", "[", 
     RowBox[{"MRWA", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"URWA", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}], "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fidelity", "[", "MF", "]"}], ",", " ", 
     RowBox[{"fidelity", "[", "MRWA", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "Tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fidelity\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Floquet\>\"", ",", " ", "\"\<RWA\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.74826763356306*^9, 3.7482677357491655`*^9}, {
   3.7482677939379697`*^9, 3.7482679327652454`*^9}, {3.7482679951867714`*^9, 
   3.748268108159559*^9}, {3.748268146879236*^9, 3.7482681590012703`*^9}, {
   3.748268224204912*^9, 3.7482682653768373`*^9}, {3.7482683653605833`*^9, 
   3.7482683680700345`*^9}, {3.7482684309853587`*^9, 3.748268443083934*^9}, {
   3.748268485824369*^9, 3.7482685212949314`*^9}, {3.7482685550586195`*^9, 
   3.7482686069141293`*^9}, {3.7482686386845155`*^9, 
   3.7482686780097055`*^9}, {3.7482687260543656`*^9, 
   3.7482687301640043`*^9}, {3.7482687711504297`*^9, 
   3.7482687715182166`*^9}, {3.7482688023162026`*^9, 3.748268802390162*^9}, {
   3.748268854736685*^9, 3.748268896037524*^9}, {3.7482689432175694`*^9, 
   3.7482690005010595`*^9}, 3.748269039748054*^9, 3.7482691018430347`*^9, {
   3.7482691640121403`*^9, 3.748269282802582*^9}, {3.748269366315091*^9, 
   3.7482693919339333`*^9}, {3.7482694378018074`*^9, 
   3.7482694624898396`*^9}, {3.748269734732851*^9, 3.748269848185296*^9}, {
   3.7482698834149675`*^9, 3.748269946332518*^9}, {3.748270006560549*^9, 
   3.7482700130967913`*^9}, {3.7482700495706806`*^9, 
   3.7482700714594927`*^9}, {3.7482702198238354`*^9, 
   3.7482702219646053`*^9}, {3.7482703649700127`*^9, 3.74827036511493*^9}, {
   3.7482719473357315`*^9, 3.748271947582592*^9}, 3.7482719990044613`*^9, {
   3.748273196229113*^9, 3.7482731968507557`*^9}, {3.748273775716917*^9, 
   3.74827377707014*^9}}],

Cell[BoxData["\<\"H:\"\>"], "Print",
 CellChangeTimes->{
  3.748268273537558*^9, 3.7482683700768733`*^9, {3.7482684352454033`*^9, 
   3.7482684452566853`*^9}, 3.7482685236390924`*^9, {3.7482685604690638`*^9, 
   3.748268607928547*^9}, {3.7482686424527884`*^9, 3.748268681500637*^9}, 
   3.748268773351672*^9, 3.7482688053190823`*^9, 3.748269000964793*^9, 
   3.7482690405515924`*^9, 3.748269102292776*^9, {3.7482692698081756`*^9, 
   3.7482692832913017`*^9}, 3.7482693936149673`*^9, {3.7482694430647845`*^9, 
   3.748269463100489*^9}, 3.748269735721707*^9, {3.7482697725762663`*^9, 
   3.748269850526952*^9}, 3.7482698842734747`*^9, 3.7482699161140394`*^9, 
   3.748269946786255*^9, 3.7482700155044084`*^9, {3.7482700504821577`*^9, 
   3.7482700734523487`*^9}, 3.7482702229140577`*^9, 3.7482703709495764`*^9, 
   3.748272040245432*^9, 3.748273839575924*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"A", "+", 
       RowBox[{"Ba", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]a"}]]}], 
       "+", 
       RowBox[{"Bb", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]b"}]]}]}]},
     {
      RowBox[{"A", "+", 
       RowBox[{"Ba", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]a"}]]}], "+", 
       RowBox[{"Bb", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]b"}]]}]}], 
      "\[CapitalDelta]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748267933881603*^9, {3.748268052110113*^9, 3.748268078797431*^9}, 
   3.748268109052043*^9, 3.7482681597118607`*^9, 3.7482682251083937`*^9, 
   3.7482682720510006`*^9, 3.748268368642697*^9, {3.7482684329257603`*^9, 
   3.7482684436695995`*^9}, 3.7482685219545517`*^9, {3.74826855883545*^9, 
   3.7482686075857434`*^9}, {3.7482686421659536`*^9, 3.7482686802644086`*^9}, 
   3.74826877215585*^9, 3.7482688036280346`*^9, 3.748269001023759*^9, 
   3.748269040619553*^9, 3.748269102349743*^9, {3.748269269874139*^9, 
   3.7482692833432713`*^9}, 3.7482693936769304`*^9, {3.748269443115754*^9, 
   3.7482694631434727`*^9}, 3.748269735864625*^9, {3.7482697726722093`*^9, 
   3.7482698506228952`*^9}, 3.7482698843754144`*^9, 3.748269916205986*^9, 
   3.7482699468841977`*^9, 3.748270015613345*^9, {3.748270050582099*^9, 
   3.7482700735422964`*^9}, 3.7482702230929546`*^9, 3.748270371101489*^9, 
   3.748272040320388*^9, 3.7482738398267794`*^9}],

Cell[BoxData["\<\"HF:\"\>"], "Print",
 CellChangeTimes->{
  3.748268273537558*^9, 3.7482683700768733`*^9, {3.7482684352454033`*^9, 
   3.7482684452566853`*^9}, 3.7482685236390924`*^9, {3.7482685604690638`*^9, 
   3.748268607928547*^9}, {3.7482686424527884`*^9, 3.748268681500637*^9}, 
   3.748268773351672*^9, 3.7482688053190823`*^9, 3.748269000964793*^9, 
   3.7482690405515924`*^9, 3.748269102292776*^9, {3.7482692698081756`*^9, 
   3.7482692832913017`*^9}, 3.7482693936149673`*^9, {3.7482694430647845`*^9, 
   3.748269463100489*^9}, 3.748269735721707*^9, {3.7482697725762663`*^9, 
   3.748269850526952*^9}, 3.7482698842734747`*^9, 3.7482699161140394`*^9, 
   3.748269946786255*^9, 3.7482700155044084`*^9, {3.7482700504821577`*^9, 
   3.7482700734523487`*^9}, 3.7482702229140577`*^9, 3.7482703709495764`*^9, 
   3.748272040245432*^9, 3.7482738400476575`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "\[Omega]a"}], "A", "0", "0", "0", "Ba", "0", "0", "0", 
      "0"},
     {"A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a"}], "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", "0"},
     {"0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]b"}], "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "A", "0", "Bb", "0", "Ba"},
     {"Ba", "0", "Bb", "0", "A", "\[CapitalDelta]", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "\[Omega]b", "A", "0", "0"},
     {"0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]b"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "\[Omega]a", "A"},
     {"0", "0", "0", "0", "Ba", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748267933881603*^9, {3.748268052110113*^9, 3.748268078797431*^9}, 
   3.748268109052043*^9, 3.7482681597118607`*^9, 3.7482682251083937`*^9, 
   3.7482682720510006`*^9, 3.748268368642697*^9, {3.7482684329257603`*^9, 
   3.7482684436695995`*^9}, 3.7482685219545517`*^9, {3.74826855883545*^9, 
   3.7482686075857434`*^9}, {3.7482686421659536`*^9, 3.7482686802644086`*^9}, 
   3.74826877215585*^9, 3.7482688036280346`*^9, 3.748269001023759*^9, 
   3.748269040619553*^9, 3.748269102349743*^9, {3.748269269874139*^9, 
   3.7482692833432713`*^9}, 3.7482693936769304`*^9, {3.748269443115754*^9, 
   3.7482694631434727`*^9}, 3.748269735864625*^9, {3.7482697726722093`*^9, 
   3.7482698506228952`*^9}, 3.7482698843754144`*^9, 3.748269916205986*^9, 
   3.7482699468841977`*^9, 3.748270015613345*^9, {3.748270050582099*^9, 
   3.7482700735422964`*^9}, 3.7482702230929546`*^9, 3.748270371101489*^9, 
   3.748272040320388*^9, 3.74827384027153*^9}],

Cell[BoxData["\<\"exact\"\>"], "Print",
 CellChangeTimes->{
  3.748268273537558*^9, 3.7482683700768733`*^9, {3.7482684352454033`*^9, 
   3.7482684452566853`*^9}, 3.7482685236390924`*^9, {3.7482685604690638`*^9, 
   3.748268607928547*^9}, {3.7482686424527884`*^9, 3.748268681500637*^9}, 
   3.748268773351672*^9, 3.7482688053190823`*^9, 3.748269000964793*^9, 
   3.7482690405515924`*^9, 3.748269102292776*^9, {3.7482692698081756`*^9, 
   3.7482692832913017`*^9}, 3.7482693936149673`*^9, {3.7482694430647845`*^9, 
   3.748269463100489*^9}, 3.748269735721707*^9, {3.7482697725762663`*^9, 
   3.748269850526952*^9}, 3.7482698842734747`*^9, 3.7482699161140394`*^9, 
   3.748269946786255*^9, 3.7482700155044084`*^9, {3.7482700504821577`*^9, 
   3.7482700734523487`*^9}, 3.7482702229140577`*^9, 3.7482703709495764`*^9, 
   3.748272040245432*^9, 3.74827386521412*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.9345427481584188`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.3327437969573811`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02854644779015184`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.1228677377008859`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.037599859024412825`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.12040610998460337`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.9743638748375829`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.1862890787652619`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748267933881603*^9, {3.748268052110113*^9, 3.748268078797431*^9}, 
   3.748268109052043*^9, 3.7482681597118607`*^9, 3.7482682251083937`*^9, 
   3.7482682720510006`*^9, 3.748268368642697*^9, {3.7482684329257603`*^9, 
   3.7482684436695995`*^9}, 3.7482685219545517`*^9, {3.74826855883545*^9, 
   3.7482686075857434`*^9}, {3.7482686421659536`*^9, 3.7482686802644086`*^9}, 
   3.74826877215585*^9, 3.7482688036280346`*^9, 3.748269001023759*^9, 
   3.748269040619553*^9, 3.748269102349743*^9, {3.748269269874139*^9, 
   3.7482692833432713`*^9}, 3.7482693936769304`*^9, {3.748269443115754*^9, 
   3.7482694631434727`*^9}, 3.748269735864625*^9, {3.7482697726722093`*^9, 
   3.7482698506228952`*^9}, 3.7482698843754144`*^9, 3.748269916205986*^9, 
   3.7482699468841977`*^9, 3.748270015613345*^9, {3.748270050582099*^9, 
   3.7482700735422964`*^9}, 3.7482702230929546`*^9, 3.748270371101489*^9, 
   3.748272040320388*^9, 3.74827386558434*^9}],

Cell[BoxData["\<\"Floquet - fidelity 1.03788 + 0. I\"\>"], "Print",
 CellChangeTimes->{
  3.748268273537558*^9, 3.7482683700768733`*^9, {3.7482684352454033`*^9, 
   3.7482684452566853`*^9}, 3.7482685236390924`*^9, {3.7482685604690638`*^9, 
   3.748268607928547*^9}, {3.7482686424527884`*^9, 3.748268681500637*^9}, 
   3.748268773351672*^9, 3.7482688053190823`*^9, 3.748269000964793*^9, 
   3.7482690405515924`*^9, 3.748269102292776*^9, {3.7482692698081756`*^9, 
   3.7482692832913017`*^9}, 3.7482693936149673`*^9, {3.7482694430647845`*^9, 
   3.748269463100489*^9}, 3.748269735721707*^9, {3.7482697725762663`*^9, 
   3.748269850526952*^9}, 3.7482698842734747`*^9, 3.7482699161140394`*^9, 
   3.748269946786255*^9, 3.7482700155044084`*^9, {3.7482700504821577`*^9, 
   3.7482700734523487`*^9}, 3.7482702229140577`*^9, 3.7482703709495764`*^9, 
   3.748272040245432*^9, 3.7482738659301405`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.9511894496160508`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.3449557020373313`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03473860597375806`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.11420762233920281`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.027875060329968414`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.1160738246503132`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.9949023286387089`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.18418784339508104`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748267933881603*^9, {3.748268052110113*^9, 3.748268078797431*^9}, 
   3.748268109052043*^9, 3.7482681597118607`*^9, 3.7482682251083937`*^9, 
   3.7482682720510006`*^9, 3.748268368642697*^9, {3.7482684329257603`*^9, 
   3.7482684436695995`*^9}, 3.7482685219545517`*^9, {3.74826855883545*^9, 
   3.7482686075857434`*^9}, {3.7482686421659536`*^9, 3.7482686802644086`*^9}, 
   3.74826877215585*^9, 3.7482688036280346`*^9, 3.748269001023759*^9, 
   3.748269040619553*^9, 3.748269102349743*^9, {3.748269269874139*^9, 
   3.7482692833432713`*^9}, 3.7482693936769304`*^9, {3.748269443115754*^9, 
   3.7482694631434727`*^9}, 3.748269735864625*^9, {3.7482697726722093`*^9, 
   3.7482698506228952`*^9}, 3.7482698843754144`*^9, 3.748269916205986*^9, 
   3.7482699468841977`*^9, 3.748270015613345*^9, {3.748270050582099*^9, 
   3.7482700735422964`*^9}, 3.7482702230929546`*^9, 3.748270371101489*^9, 
   3.748272040320388*^9, 3.7482738662159767`*^9}],

Cell[BoxData["\<\"RWA - fidelity 0.344472 + 0. I\"\>"], "Print",
 CellChangeTimes->{
  3.748268273537558*^9, 3.7482683700768733`*^9, {3.7482684352454033`*^9, 
   3.7482684452566853`*^9}, 3.7482685236390924`*^9, {3.7482685604690638`*^9, 
   3.748268607928547*^9}, {3.7482686424527884`*^9, 3.748268681500637*^9}, 
   3.748268773351672*^9, 3.7482688053190823`*^9, 3.748269000964793*^9, 
   3.7482690405515924`*^9, 3.748269102292776*^9, {3.7482692698081756`*^9, 
   3.7482692832913017`*^9}, 3.7482693936149673`*^9, {3.7482694430647845`*^9, 
   3.748269463100489*^9}, 3.748269735721707*^9, {3.7482697725762663`*^9, 
   3.748269850526952*^9}, 3.7482698842734747`*^9, 3.7482699161140394`*^9, 
   3.748269946786255*^9, 3.7482700155044084`*^9, {3.7482700504821577`*^9, 
   3.7482700734523487`*^9}, 3.7482702229140577`*^9, 3.7482703709495764`*^9, 
   3.748272040245432*^9, 3.7482738665028105`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.3766294445547957`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.34339546089808304`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.2257383943478203`"}], "+", 
       RowBox[{"0.8302240734286204`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.22573839434782028`"}], "+", 
       RowBox[{"0.8302240734286245`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.15089105020697532`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.4868286125305378`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748267933881603*^9, {3.748268052110113*^9, 3.748268078797431*^9}, 
   3.748268109052043*^9, 3.7482681597118607`*^9, 3.7482682251083937`*^9, 
   3.7482682720510006`*^9, 3.748268368642697*^9, {3.7482684329257603`*^9, 
   3.7482684436695995`*^9}, 3.7482685219545517`*^9, {3.74826855883545*^9, 
   3.7482686075857434`*^9}, {3.7482686421659536`*^9, 3.7482686802644086`*^9}, 
   3.74826877215585*^9, 3.7482688036280346`*^9, 3.748269001023759*^9, 
   3.748269040619553*^9, 3.748269102349743*^9, {3.748269269874139*^9, 
   3.7482692833432713`*^9}, 3.7482693936769304`*^9, {3.748269443115754*^9, 
   3.7482694631434727`*^9}, 3.748269735864625*^9, {3.7482697726722093`*^9, 
   3.7482698506228952`*^9}, 3.7482698843754144`*^9, 3.748269916205986*^9, 
   3.7482699468841977`*^9, 3.748270015613345*^9, {3.748270050582099*^9, 
   3.7482700735422964`*^9}, 3.7482702230929546`*^9, 3.748270371101489*^9, 
   3.748272040320388*^9, 3.748273866745676*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
urXTMgvnWf7+3//+sWCbfGeDMp7/P5kIPD0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8IPfdLLBUuCd+xUtqGmRjrLHeK3KDAZV0rUgKW2a+w3am61zWZgs1ILNXvqW
Zyl0YpR0XqTqhRYs/v5Ppwj7T485TyuqSQt2Ln7/eR/rqRnybpttrxb8Kd7X
qvyTTlR/THiJUrXAY291ve84nSg68p8fWNQCJ/Gi2ZZeOu4/+jcLeLWhPTTm
Vi7WV8bI+XHQWm1omVhs/PqLTiQKzn001dYGf9egewuYj7DEnVEW0AaJsMuW
J4bohC/m7cpHe20QtWpqezRCJ1wL45I3PLXhnVScGjPqCftRPgP3EG3oN+b+
VIj+Wfr07FSitMFry916Nry/bLvPb/K6NpyZ12pchffnX52NfJGvDScz6x9U
Ix4zWrlZkeXa8PP7P70l1IvJnIaKHe+0oUHwwM4U9EcVGG8T6dSGLG0P5VrM
b+wiL6X/lzace/7laTbWc2RKl61gThvkI5iyGgbwvu4D/kpWHVDlOJAfifw8
5v8qS4ZXB051L+/NQP+UvFa1i6I64LAzMcWym078eocqRtfoAJz50PoS9eun
8MxGG2UdYHpT9kAe4/e2Zf9cpoX2d3ac4fxCJ8OXJNyFjXXg5FGOGie093il
TjlNdKBDck3xINZjYNYitG+rDlh+TPh+rBn5pbWLzdpeB+SWLa8VYH17fD1T
7jnrQKbbRCMF47vtVl55xkMHrFIFVpc3oT9Hzu87/XTg1b3rNfKYj8IONzb5
IB0QaFrfUTaH8Vk/Xv/ntA6kjKrHpGI8RSZsDk0XdOCzWuypFbwfoO0Smn1F
B2aim+8NYL9pK5dmhyTqANdbWQVdjG9Khvntlps6UBJPmQx6QyflwnspUjk6
8Lbs1vgE1iOUq0iQcR/zU/i20RHfM2deMq4v0wH5dZoPklA/l//au9+s0IF+
P84Ie9SjWnr+paOvdYDvtKZtF/bfpdG5YvJOB9Q7y/8KIV+39dl+Fm7RgfPD
V9UmK+iE+0vu318dOnB1V3aEEPZ7y4eZNdX9OqBnrJrIheeUmm2bkkZ1gONG
hQLPEzrZ+zzL35umA0FD90c625GvZZNJJrM6cLuCwR+E86A3f9NzniUd8P7O
H9uG+pt9K71/kFUXBHquriQ9pRPPFOqqch5dEPqhdD56HvsjBtRjRHQhfSrV
vxbx/XUh1d5NRhdOHDh+2ScP9fLU2CldRV0Ie+Hnvw/5EhhocZtNQxcaDTxl
YhAPHe+k+m59XWgukkjRLaKTadeR8VJzXZgVOnz2GuZXsdtEIHKjLijJdAn5
LNPJmW1xRk47dKE23+a6MeqdBRk8oL4H35vr7P56k05WDA2ill11QXn1ojwV
+71O42pRu5cuztuT89bYn9EKfa33/XXhmM2OLZzJiKeUzp+wEF3oCNxobI/1
4xa8JLMrTBckacpr+hYQz9VdGxQidaHExWNR4D7iubz+yN8YXVj8tzngTCri
OXsh8WOyLrAYn3sYhvokQf1SnpOhCyO1PTwlH+mkb1il7787ujD2/J+5zXk6
yek+y7KtSBeaGjPaPPC7V1urqsxjXbgdeOqVJs4rpfcKuyYrdeGzzPlZ52js
z1enTzbUIP6OU6fS0+nkwbOPt9IbdWGv8tsHOVPYjw/W1QW06cLbgbZS5kI6
0c37bwy6dEEu+L7VnyDUg/T3fKKDujCv/zfuGerv80Rpw/FfupA9riudivtB
2OXj+18x0F6oicQephPL8/UXk//qAtv9rs+HsH5MJ8QLfVZ0oeWlkVkn4lnv
f7TFdLUenLys/9gggk4ue76Z4eXXA4HY1c/3BNLJdmdh6WExPRDSvMD6GPWE
Z9dh64q1ejDy/NiX5BI6ad388vA1ZT0wrFyvdMke8bTgT3DX0gMuXRZn9zLE
U//QMz0jPUjZ+TXh6P/5qf68h91KD3ijrupyuSCestzMvZv14Kv3948lwYin
+EGVhzv1wOix+faNqD81tWsOajjpwbGBzDcfTtDJ4NG+tCJ3PdAJpkyo7qIT
ZrFbLcqH9aDHKl1mO+qJfI0Le/5xPVhi76H/wXw2+ktYyYXqwdzHI0sSZqhX
Ip0nsyPwrP15MPAl8uf1jVLpGD3Q2BUkQ4vH+e/nOJqerAfxVyI+5ajRyXsh
4TVimXpQOS1Osc/H+lV/dryepwcRbXx7ODPphPNwUpzAAz247OhcnrkW91/B
XQ3xT/XA8YdwOWsMnex4ybvIVa0HE++d+Evuov74fNK/2qAHi/y3o4Ml6SSe
P/YoW7MebA4wSGI6ivvgi+13Izv0QFT55E4X7J/WQxy9K/16kLWDVURQCvWb
973Q+Z8Yv5J99cIOOhGsjLZZoOvBtYQsr0G01/PaFHn6rx5sK2XfRVlHJ3t4
VlXNrOjBqMJH8kaTTk5U1P4O5tAH9Wuavy5iPqkeEWoMAX1g35eX+A/zLeci
ngGS+iBYeecHnxDut8+W0sfl9OHRtfe1i8jXP+7Vbb7q+tBkGL56yIhOxDnP
cozo6UOpnfX2kws0YvLUFDzN9SG8/Oj9G1foxMVt7vTARn0IlJbcyrwZ+bn6
+cP9tvow9trwhMIYjdx6fPJXl6M+2JkqO0hg/av3G6xzctOH4VbCf9+BTvrZ
pp2++KB/rzyBgV4aWX74OMH+mD50TD3PeeVEJ+tcg941n9KHoLQjUyrudAKs
2ss2FzDe5p3MjA4a8SyjGTZe0Yeyea8cbqx/pHNJ4OYkfagU6y2T8qWTuyxH
79Wl64PEhrPBMt9opKFErZ/c0Yfcw31NlTJ0Muo0JvKqCONtvOvvewTnOXOB
rdkTfUg6pMBegfGoPPC59LxKH3RPedZGMKH+7FWsNqjHeKpFjnhg/x1ZGZ5+
/FEfZJ/HGhSN0si1ojvrtb/qgyVL9OeFnzRSvMfjUEmfPsx61MD3g3TycWnt
LbVRfTBSej9+fYpGqAX97fdp6D97/5GIzzTC45DFpfgH32/WvGywB/edRdcN
d5b1QTXkv5Rf+L7dfcmwtasNgLdhxUOolkaO23c9vsVvADGjG8VkN+A+upA2
LiFhAJk53JKC/HTyOH+vXJqsAUiN7X6woYJG2u1EXITVDGA2/05yHfJleq49
KUnXAHpeljqkStOJyN3kRl4zA7iXx5ei95hGDHfaM8VuMAD2c66FZ8XpxOkv
nwnHDgPgcW+5oKlEJ6fvNB+P3mMAcx6XWdLQPn1HXAHLAQMwzY5/8xbjfTFr
8/2CtwG0G3MVTanj/M/hFF8KMAA2yW715xgPcHCNjZ8wACXWnbo+wzRyP4jr
xbdzBhC0xxLHMOpRN9e1+ksGEGLEL9X4lUZCrLn3P4ozgL5a2p6QahrpKuLW
uJ2K9keDf7+Wxf1SiGcpJssAhKQcow8jX/PDeFpO5RuAQcZ/5ndLaYT7B0/O
oRIDAO22bJ4l9LeDN8j+mQFEPxrbxSJGJ11Pea0tqw2gwfJFaWwljVjJ8Amp
NxiA4VfzdF3kW/4lvh9inwygdClgnop4cdH4nq36agAuNoveoxhf0F7+6Mle
A5Cx6fDkfkEj317xO/X/wPwMvZSkuHH+KQuoNFHw/PBlzPI0jeQlCMxVTGO8
kpZ/OxA/jr8CH+7+MwAjemZJEpVGjh0UzExaZQhJOtP2Javp5Ot7waPnuQ1B
8/HjjVOvacRMR8jCX9gQsrUqjK1aaCQ3XYh3n7QhiKxPPRzP8X8+Cw9sVDCE
e11qeZs7aSTwiPBDnfWGkHLVY40i4vf1s3DEGn1D8Pjs4nd3Dv2ZiezmMjeE
V7P+VD06+ssTkf+7wRDMVD8WkJc0ws4tOv3DxhBY9iSG6g3RSMB/og1tDni2
TTn8eh751St645WrIYQoL9zf3Ih6sUnMt9jLELya6Hd8mmkku0TM+Ka/IXwb
vuje+4dGWEXFOS6FGEKk5lsbhx4a8T8v3h0Uhmcb2W31DTTSNipe7BZpCN53
X2/tG6cRIzuJszbXDEHeq8J18heNZFVI2BqnGIJEp+BVNXyPZZ3kGsVMQ1jj
ErBDBvvX74okXSDPEDaohud1UWiklSH5ZqnIEFyf59wIa0d/zlJJE48NwUIt
6RU3nrNqpDw7XxhCqvufL/PYvyxq0noNtYYwdEXa0aIP/SVLr3r8Ae83ljF8
sF9b5qW/3v5sCJd3KMaND9CIgZfMvWvd6O9sWbbAII1kNsmcOj1kCJWilI/H
UH+Y9Nds9R5HvNLsZMa6acT31hqJ3b8NQaY4gPdKP418WrV23HLeEH6zHb/k
jPHrBaytUmc2grYlxis64pPxdW2sOKcRzC7+TXrfhf4s1x1gFTSCJhejJ1vR
3vfeOs3fEkYQkO/ZsQrf/8Qru9wvawTb1rSHB2D99U7JtjapGkHgmeshN5DP
6QOyuc91jMAsLbju2Q/U3y1ywfkmRqD3sq/kCubr/VBuQzIYgd9ngTgX5FeT
uLxw+DYjYN0o7vIR/etEyI/42xtB89xYuzHilTYmX77P2QjyqBaPhj/SyKK9
wuVNHkZAe+IQJYj5H3qhsE/XzwgmvXs0bZBfAX2NVn+OG4FF4W1++y80cmIl
UPnlaSOcv79nh9/RyHl5Yb6IC0Zgmf+RsYz1u7y5cnbTFSMY0nddSxuhkUQ/
t37ORCP4MF4TdA/7IT2W5W1LmhGMcZyJHkO87pQVlFzPNgITxx/pgrOox59t
U53vG8FaHZ6BWvT/dOb32TVlRjB3fzdzZh2NVIvfPDRcjng9k7c4jvx8a2ax
o+AVxhN96V0R1qfFbUgv4K0R1DzKWLWC/doZcVlKt9kI2kUXlLUQv8G761n+
fDWCDv2hV9vx/vi7tvGqPsTbfvbDx3IamRo/+fnCiBG8qLeO6sT3/vFIv9hE
NYKliQ43sRXsB52aXM4ZI+j/LLx1CfHm3eNzteWfEUTnnVl3qIBGxE5xBV1f
ZQxPmHvevqDRyLqMh/ucuY3B4beYN51BI6rVjmSNsDHwnmOxjcrD+nyfVx6W
Mgb/PXqVN97TiClLDl+BvDEcsVX6j3kV/j9X2vTnqLox/MyK3FqHemWzbbxf
R88Y8t8F/gjKpZE9RxPezpoaw8JUF//CXxo5kKBfWmVtDEWauNhh//s87kq9
sN0YlrZXx1glol59PX9u025jaPo8cba2lUZO/5X35nQxhn7fwM8PML8IqcYd
LR7GwH5/OLE6h0ZiLAP1r/sZw7Wug5m/b9NIioeQtHMQvrc66exqtL8V9Zxl
TagxfGNjmy38gPp7/8DE0AW871M1Kx1OI6UfmNvvXzGG5Ul/H1/spwrq/RdH
E43h8da694dRX1/z297RuYnxOaz/bhhFI+/1fl+dzTYGw7iM3uf4ftvetKCq
+8aQ22s/Io/zqivU3PlCmTG4/ap+K/aARoZuDZJNFcagtk7BsjCIRiZeR6tw
vjaGE5ujNvPgvJoeUudveWsMjzYWq6ciPxZZ2/6kNBuD84GX+dd9aYRN9eTA
vg5jSNmi+P51Po3w7ZB6J9NvDBZRWu9lUS/Fj70pHRoxhtSC/Y3mV2hENtn7
xn2qMfQEH/GrOkwjas84zx+dMYb4/N3/KaDe6XWWeessGoNL/Z2odOS7+cIe
29lVJnDOQT2N05ZGNq2Z16/iNoHbtpusAzH+nZAtfUHYBCJebey+i/uY06GN
qzZJm0Bpj+Ppcx40cvDy2ASHggmclDcbiTiE+lYU396sbgL20zGvXLCfgz/p
VaXomcCNTq7nNTdpJIzReWefGd5/+MD7pCGNRAmdj5HZYALqz4q29GI/xBnK
Bw9tN4FiXHg0kL+pzu+d7+82AaH1B1rOmNLI7bMBcNTFBJw51a5n43usDudM
uz1NwLOAf3My4uevGqe31d8ERoPzP1DtaOTz8q315SEmULU/t8WM4DzpeKCo
cNYEREfd7Vhx3uY8eLkmOcoECmcSzS9hPuyRH8VWYk0g8/uz+3LrUF+ce/kD
UzF/n+5rZ2to5IsWhaM3ywQeHbdlmzyB847tH/P2e5iv1DP1ETacd71c/ypK
TSAw3Cum7C6NrH4iNaNYYQI0ubQbqjHI76vqtJTXJiAh423qNkslHe5mP5ne
mwBbjE2Q5wUasTC0+X6s1QSaLjnprcrE+c7t2tXXaQLWBinuF+lUwjl85LPN
IOK5M+SqhhPuC5VnmirHTOBeh/X6G8iPbwkx9cq/TWD+N0Xf+jeVWPpkVKfO
mwBHBzHUXY/8Ny8qZ2ExBfbTJltS7uM+I/SiLIjLFIYyVm2OWqSSkLHGggEh
UxAwS3Z/x4z70euuXFtpU4hsX+eQmE0j5MZYRpWCKc6vp64b+XDfOjqXoqph
ivPT46J4P5XwbOCISzMwhfMp/CN6cTTyn4RENKulKai/UOf6oEAjPXSV8JDN
pmAvSlX/9IZKrN8anx7caQp6qYORW7A/Cm9tDbJzMoX0uovJE1hvvpB9R6rd
TWH46dl7TQ+o5OS2w17qh03hN2dzWQbytW/t6f3px02hzrDvxOGdNLJh9rIj
e6gplM9K9nLmUUnRx7SdJyJMwVKSce//7wvk3d8yfNUUci/WpG7fj/oSWkHs
k03B7GjohlNoP2D3zuR1himYrP8huzBHJZuUvulq5OF3o10PDD1p5MG/UfXM
YlPcRwotFjEeofZZBQ78T1PX3e95ppVKQgvZ1px6aQrXFty2PXSjke/homIj
9fhegEN4YTWVbNmrxO/wyRRGwk46ehVTSel6Q46ar6awZOj/Ybs9jYiwbGbW
6jeFz7vWcX37TCVhXY4Lt0ZNAX7o73OIo5KhMu9pTropBHKCcRnisy36BPX0
H1NocrKXOT1GJWX7L42OLpvC6L69BWqnqURUL3Vgz2ozcHWO+XBBmkbOceR3
1vKbQcLzsy+PLVHJj4GnbdoSZkD3YTbuO0olNuX1H27LmgHHNnEZLcz/UeyX
Om41M5gVEINhXtQbrx8vz+iagc+RqGQvfyoJN5l+9svUDPx8mRIL26lkhG9V
2d4NZlC4J9s0RpxGdowKFdTbmMG8j7JBQzCVPHkpn6u7xwxyNwcXspRRiWSK
XkbOfjMo3mAp8UcC9d1vQwqvtxnUgci8TgSV/LRyiD0bYAaZCW7X5eKpZKeo
16XxE2aw7Xbt+kpBGpkreir2/pwZdOUlmvRmU0m+FVtR/iUz0GEcoBt5U4n9
FyfzyDgzKNO9PioxSSWLhwubD6aagX9+cWtLB5UULs4ftMwyA0lG8UrUPipx
TN4xJZVvBkpSXGWmT6mESfn2pbkHZtAnoRB35Q+VlFTRxb49NYOWDtc9NSFU
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
Zq4Hvcq/OvfvH9ZPcOk3YxMd/Q/wzR4/
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.34}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Fidelity\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {0.33822650455395725`, 1.039133446948152}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Floquet\"", "\"RWA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.748267933881603*^9, {3.748268052110113*^9, 3.748268078797431*^9}, 
   3.748268109052043*^9, 3.7482681597118607`*^9, 3.7482682251083937`*^9, 
   3.7482682720510006`*^9, 3.748268368642697*^9, {3.7482684329257603`*^9, 
   3.7482684436695995`*^9}, 3.7482685219545517`*^9, {3.74826855883545*^9, 
   3.7482686075857434`*^9}, {3.7482686421659536`*^9, 3.7482686802644086`*^9}, 
   3.74826877215585*^9, 3.7482688036280346`*^9, 3.748269001023759*^9, 
   3.748269040619553*^9, 3.748269102349743*^9, {3.748269269874139*^9, 
   3.7482692833432713`*^9}, 3.7482693936769304`*^9, {3.748269443115754*^9, 
   3.7482694631434727`*^9}, 3.748269735864625*^9, {3.7482697726722093`*^9, 
   3.7482698506228952`*^9}, 3.7482698843754144`*^9, 3.748269916205986*^9, 
   3.7482699468841977`*^9, 3.748270015613345*^9, {3.748270050582099*^9, 
   3.7482700735422964`*^9}, 3.7482702230929546`*^9, 3.748270371101489*^9, 
   3.748272040320388*^9, 3.7482738713079157`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two frequencies, but with another order of term", "Section",
 CellChangeTimes->{{3.7482704485280046`*^9, 3.748270460773447*^9}, {
  3.7482719260721083`*^9, 3.7482719261540623`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[CapitalDelta]", ",", " ", "A", ",", " ", "Ba", ",", " ", "Bb", ",", 
     " ", "\[Omega]a", ",", " ", "\[Omega]b", ",", " ", "H"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "A"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"A", ",", " ", "\[CapitalDelta]"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1a", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Ba", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1a", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Ba"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1b", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bb", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1b", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Bb"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", " ", "=", " ", 
    RowBox[{"H0", " ", "+", " ", 
     RowBox[{"Hp1a", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]a", "*", "t"}]]}], " ", "+", 
     " ", 
     RowBox[{"Hn1a", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]a", "*", "t"}]]}], " ", 
     "+", " ", 
     RowBox[{"Hp1b", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]b", "*", "t"}]]}], " ", "+", 
     " ", 
     RowBox[{"Hn1b", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]b", "*", "t"}]]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]I", " ", "=", " ", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockOrder", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "\[Omega]a"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "\[Omega]a"}], " ", "-", " ", "\[Omega]b"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "2"}], "\[Omega]b"}], ",", " ", 
     RowBox[{"-", "\[Omega]a"}], ",", 
     RowBox[{"-", "\[Omega]b"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "\[Omega]a"}], " ", "+", " ", "\[Omega]b"}], ",", " ", "0",
      ",", " ", 
     RowBox[{"\[Omega]a", " ", "-", " ", "\[Omega]b"}], ",", " ", "\[Omega]b",
      ",", " ", "\[Omega]a", ",", " ", 
     RowBox[{"2", "\[Omega]b"}], ",", " ", 
     RowBox[{"\[Omega]a", " ", "+", " ", "\[Omega]b"}], ",", " ", 
     RowBox[{"2", "\[Omega]a"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", "blockOrder", "]"}], " ", "+", " ", "1"}], ")"}],
     "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HF", " ", "=", " ", 
    RowBox[{"0", "*", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"2", "*", 
       RowBox[{"Length", "[", "blockOrder", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getBlock", "[", 
   RowBox[{"i_", ",", " ", "j_", ",", " ", "M_"}], "]"}], " ", ":=", " ", 
  RowBox[{"M", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
        "n"}]}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
        "n"}]}], " ", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"i_", ",", " ", "j_", ",", " ", "block_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"HF", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
          "n"}]}], " ", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
          "n"}]}], " ", "}"}]}], "]"}], "]"}], " ", "=", " ", "block"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"setBlock", "[", 
      RowBox[{"i", ",", " ", "i", ",", " ", 
       RowBox[{"H0", " ", "+", " ", 
        RowBox[{
         RowBox[{"blockOrder", "[", 
          RowBox[{"[", 
           RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], "*", 
         "\[Sigma]I"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"i", ",", " ", "j"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", 
           RowBox[{"-", "\[Omega]a"}]}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hn1a"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", "\[Omega]a"}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hp1a"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", 
           RowBox[{"-", "\[Omega]b"}]}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hn1b"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", "\[Omega]b"}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hp1b"}], "]"}]}], "]"}], 
        ";"}], "\[IndentingNewLine]", ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"l", " ", "-", "1"}], ")"}]}], ",", " ", 
        RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
      RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<H:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"H", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<HF:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HF", " ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bb", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]a", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]b", " ", "=", " ", "61"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tmax", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"URWA", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H0", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UF", " ", "=", " ", 
    RowBox[{
     RowBox[{"MatrixExp", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "*", "HF", "*", "t"}], "]"}], " ", "//",
      " ", "N"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "=", " ", 
   RowBox[{"0", "*", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"UfromF", " ", "=", " ", 
      RowBox[{"UfromF", " ", "+", " ", 
       RowBox[{
        RowBox[{"getBlock", "[", 
         RowBox[{"i", ",", " ", "0", ",", " ", "UF"}], "]"}], "*", 
        SuperscriptBox["E", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"blockOrder", "[", 
           RowBox[{"[", 
            RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], "*", 
          "t"}]]}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{"(", 
        RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MF", " ", "=", " ", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "UfromF"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MRWA", " ", "=", " ", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "URWA"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<exact\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Floquet - fidelity \>\"", " ", "<>", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"fidelity", "[", 
     RowBox[{"MF", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<RWA - fidelity \>\"", " ", "<>", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"fidelity", "[", 
     RowBox[{"MRWA", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"URWA", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}], "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fidelity", "[", "MF", "]"}], ",", " ", 
     RowBox[{"fidelity", "[", "MRWA", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "Tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fidelity\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Floquet\>\"", ",", " ", "\"\<RWA\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.748270551123007*^9, 3.748270687776477*^9}, {
  3.7482709134762*^9, 3.7482711304343367`*^9}, {3.7482712442811112`*^9, 
  3.7482713242127385`*^9}, {3.7482713727058945`*^9, 3.7482714182811794`*^9}, {
  3.7482715078845377`*^9, 3.7482715374179373`*^9}, {3.7482715999821477`*^9, 
  3.74827178586286*^9}, {3.7482718790875287`*^9, 3.748271888354898*^9}, {
  3.7482719411013756`*^9, 3.748271987413121*^9}, {3.74827314074932*^9, 
  3.748273144023475*^9}, {3.7482731883830805`*^9, 3.7482731891236577`*^9}, {
  3.748273784772715*^9, 3.7482737865067167`*^9}}],

Cell[BoxData["\<\"H:\"\>"], "Print",
 CellChangeTimes->{{3.7482714010379276`*^9, 3.748271418696885*^9}, 
   3.748271790261929*^9, 3.7482718902508087`*^9, 3.748272050071784*^9, 
   3.74827314788556*^9, 3.7482732355865664`*^9, 3.7482738719678664`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"A", "+", 
       RowBox[{"Ba", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]a"}]]}], 
       "+", 
       RowBox[{"Bb", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]b"}]]}]}]},
     {
      RowBox[{"A", "+", 
       RowBox[{"Ba", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]a"}]]}], "+", 
       RowBox[{"Bb", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]b"}]]}]}], 
      "\[CapitalDelta]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7482711364588737`*^9, 3.748271251039849*^9, {3.7482713162293253`*^9, 
   3.7482713264474573`*^9}, {3.748271401179845*^9, 3.748271418835701*^9}, 
   3.7482717903838577`*^9, 3.748271890390729*^9, 3.748272050150738*^9, 
   3.74827314809544*^9, 3.7482732358544116`*^9, 3.748273872205823*^9}],

Cell[BoxData["\<\"HF:\"\>"], "Print",
 CellChangeTimes->{{3.7482714010379276`*^9, 3.748271418696885*^9}, 
   3.748271790261929*^9, 3.7482718902508087`*^9, 3.748272050071784*^9, 
   3.74827314788556*^9, 3.7482732355865664`*^9, 3.7482738724267426`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Omega]a"}], "A", "0", "0", "0", "0", "0", 
      "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"2", " ", "\[Omega]a"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "\[Omega]a"}], "-", "\[Omega]b"}], "A", "0", "0", "0", 
      "Bb", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a", "-", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Omega]b"}], "A", "0", "0", "0", "Bb", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "\[Omega]a"}], "A", "0", "0", "0", "Bb", "0", "Ba", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"Ba", "0", "Bb", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a"}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "\[Omega]b"}], "A", "0", "0", "0", "Bb", "0", "Ba", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "Ba", "0", "Bb", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]b"}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Omega]a"}], "+", "\[Omega]b"}], "A", "0", "0", "0", 
      "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "Bb", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a", "+", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A", 
      "0", "0", "0", "Bb", "0", "Ba", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "Ba", "0", "Bb", "0", "0", "0", "A", 
      "\[CapitalDelta]", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[Omega]a", "-", "\[Omega]b"}], "A", "0", "0", "0", "Bb", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", 
      "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a", "-", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "\[Omega]b", "A", "0", "0", "0", "Bb", "0", "Ba", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "Bb", "0", 
      "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]b"}], "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "\[Omega]a", "A", "0", "0", "0", "Bb", "0", "Ba"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", 
      "Bb", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a"}], "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", 
      RowBox[{"2", " ", "\[Omega]b"}], "A", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "Bb", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[Omega]a", "+", "\[Omega]b"}], "A", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "Ba", "0", "Bb", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a", "+", "\[Omega]b"}], "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"2", " ", "\[Omega]a"}], "A"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"2", " ", "\[Omega]a"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7482711364588737`*^9, 3.748271251039849*^9, {3.7482713162293253`*^9, 
   3.7482713264474573`*^9}, {3.748271401179845*^9, 3.748271418835701*^9}, 
   3.7482717903838577`*^9, 3.748271890390729*^9, 3.748272050150738*^9, 
   3.74827314809544*^9, 3.7482732358544116`*^9, 3.7482738726720943`*^9}],

Cell[BoxData["\<\"exact\"\>"], "Print",
 CellChangeTimes->{{3.7482714010379276`*^9, 3.748271418696885*^9}, 
   3.748271790261929*^9, 3.7482718902508087`*^9, 3.748272050071784*^9, 
   3.74827314788556*^9, 3.7482732355865664`*^9, 3.7482739215251865`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.9345427481584188`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.3327437969573811`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02854644779015184`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.1228677377008859`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.037599859024412825`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.12040610998460337`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.9743638748375829`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.1862890787652619`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7482711364588737`*^9, 3.748271251039849*^9, {3.7482713162293253`*^9, 
   3.7482713264474573`*^9}, {3.748271401179845*^9, 3.748271418835701*^9}, 
   3.7482717903838577`*^9, 3.748271890390729*^9, 3.748272050150738*^9, 
   3.74827314809544*^9, 3.7482732358544116`*^9, 3.7482739219319515`*^9}],

Cell[BoxData["\<\"Floquet - fidelity 0.999989 + 0. I\"\>"], "Print",
 CellChangeTimes->{{3.7482714010379276`*^9, 3.748271418696885*^9}, 
   3.748271790261929*^9, 3.7482718902508087`*^9, 3.748272050071784*^9, 
   3.74827314788556*^9, 3.7482732355865664`*^9, 3.7482739222851925`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.936927965306479`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.32423955594640697`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02792839187002665`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.12801796240049512`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.04074314077901834`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.12453489726911328`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.9720267035010834`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.194886495312539`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7482711364588737`*^9, 3.748271251039849*^9, {3.7482713162293253`*^9, 
   3.7482713264474573`*^9}, {3.748271401179845*^9, 3.748271418835701*^9}, 
   3.7482717903838577`*^9, 3.748271890390729*^9, 3.748272050150738*^9, 
   3.74827314809544*^9, 3.7482732358544116`*^9, 3.7482739225920153`*^9}],

Cell[BoxData["\<\"RWA - fidelity 0.344472 + 0. I\"\>"], "Print",
 CellChangeTimes->{{3.7482714010379276`*^9, 3.748271418696885*^9}, 
   3.748271790261929*^9, 3.7482718902508087`*^9, 3.748272050071784*^9, 
   3.74827314788556*^9, 3.7482732355865664`*^9, 3.748273922863985*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.3766294445547957`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.34339546089808304`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.2257383943478203`"}], "+", 
       RowBox[{"0.8302240734286204`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.22573839434782028`"}], "+", 
       RowBox[{"0.8302240734286245`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.15089105020697532`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.4868286125305378`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7482711364588737`*^9, 3.748271251039849*^9, {3.7482713162293253`*^9, 
   3.7482713264474573`*^9}, {3.748271401179845*^9, 3.748271418835701*^9}, 
   3.7482717903838577`*^9, 3.748271890390729*^9, 3.748272050150738*^9, 
   3.74827314809544*^9, 3.7482732358544116`*^9, 3.7482739230871553`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
xhPzI3TIDFfX7GRBaPqDq9kEv8KqyaHYlfjPY8M4deTbHXn8/YEbC5pu057i
/DlwMyngxh4W7vzxV79KymfdGDg7yp0F2UGLAyvJ9Y2pu1KD97GQHDXNB9ef
DR0pR6/vZyFJW7Yf5/OpTzo2Fh1k4e5CW7FfBG9wdYFqkzfx9+f3RlCP0O2w
48RvHxYmB53W78T/YV58g5gvsXd+Jw/tV6XdlKF5lIUvek4vZEj5/wpLB1gd
Z6HScgbEob/00KzLSRYMxY/Fx2K+vdLLmgEBxN+vh1Q+wPEoqU4gIZCFi2ur
HuP5X/GxWU35p8n3err+ihL8D84msyGEhRF9ug35i4p654IHQlmYObj0EfLF
KLFK+xlhLCzjU4lEfuTpvqk6qhcIfvFSLRr5Q5Xm080vspD+dpEj7k98Tj3V
ui2ChbaXvkmY70T6VHHO0Uji7/lC2nieZe04ce5KNBl/ltf34fxx1GjFjv9i
WNA5ltUUgf1T0m95bRzxh3tdmaIE3/Izb+bXeNI/rI+OseR6Vu3vT1OvsSCt
b1GI+zVwW+eRYjLpb+KMXi7yJUIOXDK5wYLI3U8JuH9+3fn+ri2ppP36DbTw
/OW1ad9Kn5vkfuqFIByvJ8stloi4xULNi/zQJNIeeiNuvXdvszBmAUr4/+/a
kFZceZeF8ZUrti3C9XHmp+iu+yyU3Ar99pW0d2WYosekLBZe9KcJop7CqJvT
6nnZLLh83uWgTPAaaxJlDHNJe+gvdkP+hoNC83cqn7TvlsX/4kh9LozLlO8v
YIGmxS9uJfgn79n4sEIWtvSbqCN+ICfqYHoRC6La29tLcH6KeG1ZWkz8NyV+
Jubj3rRPbH5bCelvG9K6Mf9XoPWG339LyfM+Y9/xfCJ70flqqecsuDbnvMf4
w27+6mSdStJ/Dt9Viib3pVoFj2yoZuGC3OivX+R5y0cWtntfkvFTT64f+Wt+
V4KUQmpZeE/tvoV8v9teJaPX61hg8jY2u2F+gw18dUWvSf/bOWpqTfAiGiY3
m94Q/zCOvrMC9ycEjx0famThsd9OJSuC3//pIU+8iVwnWX6eTe4nFw+raTWz
MOBZuK6LXNfH6/FZt5Dx9eZPoXDU4/T1euvSxkLAgk5/1AfXox/cCehgYfud
ufyoD+u69PuphE9k/NsfNkOC1OeKiObmh93EX/IDZd0IvuLLHu03PSxYmjtq
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
muDvZe4f/veP+FtF7lXU4/wfSMuyhg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8IPfdLLBUuCd+xUtqGmRjrLHeK3KDAZV0rUgKW2a+w3am61zWZgs1ILNXvqW
Zyl0YpR0XqTqhRYs/v5Ppwj7T485TyuqSQt2Ln7/eR/rqRnybpttrxb8Kd7X
qvyTTlR/THiJUrXAY291ve84nSg68p8fWNQCJ/Gi2ZZeOu4/+jcLeLWhPTTm
Vi7WV8bI+XHQWm1omVhs/PqLTiQKzn001dYGf9egewuYj7DEnVEW0AaJsMuW
J4bohC/m7cpHe20QtWpqezRCJ1wL45I3PLXhnVScGjPqCftRPgP3EG3oN+b+
VIj+Wfr07FSitMFry916Nry/bLvPb/K6NpyZ12pchffnX52NfJGvDScz6x9U
Ix4zWrlZkeXa8PP7P70l1IvJnIaKHe+0oUHwwM4U9EcVGG8T6dSGLG0P5VrM
b+wiL6X/lzace/7laTbWc2RKl61gThvkI5iyGgbwvu4D/kpWHVDlOJAfifw8
5v8qS4ZXB051L+/NQP+UvFa1i6I64LAzMcWym078eocqRtfoAJz50PoS9eun
8MxGG2UdYHpT9kAe4/e2Zf9cpoX2d3ac4fxCJ8OXJNyFjXXg5FGOGie093il
TjlNdKBDck3xINZjYNYitG+rDlh+TPh+rBn5pbWLzdpeB+SWLa8VYH17fD1T
7jnrQKbbRCMF47vtVl55xkMHrFIFVpc3oT9Hzu87/XTg1b3rNfKYj8IONzb5
IB0QaFrfUTaH8Vk/Xv/ntA6kjKrHpGI8RSZsDk0XdOCzWuypFbwfoO0Smn1F
B2aim+8NYL9pK5dmhyTqANdbWQVdjG9Khvntlps6UBJPmQx6QyflwnspUjk6
8Lbs1vgE1iOUq0iQcR/zU/i20RHfM2deMq4v0wH5dZoPklA/l//au9+s0IF+
P84Ie9SjWnr+paOvdYDvtKZtF/bfpdG5YvJOB9Q7y/8KIV+39dl+Fm7RgfPD
V9UmK+iE+0vu318dOnB1V3aEEPZ7y4eZNdX9OqBnrJrIheeUmm2bkkZ1gONG
hQLPEzrZ+zzL35umA0FD90c625GvZZNJJrM6cLuCwR+E86A3f9NzniUd8P7O
H9uG+pt9K71/kFUXBHquriQ9pRPPFOqqch5dEPqhdD56HvsjBtRjRHQhfSrV
vxbx/XUh1d5NRhdOHDh+2ScP9fLU2CldRV0Ie+Hnvw/5EhhocZtNQxcaDTxl
YhAPHe+k+m59XWgukkjRLaKTadeR8VJzXZgVOnz2GuZXsdtEIHKjLijJdAn5
LNPJmW1xRk47dKE23+a6MeqdBRk8oL4H35vr7P56k05WDA2ill11QXn1ojwV
+71O42pRu5cuztuT89bYn9EKfa33/XXhmM2OLZzJiKeUzp+wEF3oCNxobI/1
4xa8JLMrTBckacpr+hYQz9VdGxQidaHExWNR4D7iubz+yN8YXVj8tzngTCri
OXsh8WOyLrAYn3sYhvokQf1SnpOhCyO1PTwlH+mkb1il7787ujD2/J+5zXk6
yek+y7KtSBeaGjPaPPC7V1urqsxjXbgdeOqVJs4rpfcKuyYrdeGzzPlZ52js
z1enTzbUIP6OU6fS0+nkwbOPt9IbdWGv8tsHOVPYjw/W1QW06cLbgbZS5kI6
0c37bwy6dEEu+L7VnyDUg/T3fKKDujCv/zfuGerv80Rpw/FfupA9riudivtB
2OXj+18x0F6oicQephPL8/UXk//qAtv9rs+HsH5MJ8QLfVZ0oeWlkVkn4lnv
f7TFdLUenLys/9gggk4ue76Z4eXXA4HY1c/3BNLJdmdh6WExPRDSvMD6GPWE
Z9dh64q1ejDy/NiX5BI6ad388vA1ZT0wrFyvdMke8bTgT3DX0gMuXRZn9zLE
U//QMz0jPUjZ+TXh6P/5qf68h91KD3ijrupyuSCestzMvZv14Kv3948lwYin
+EGVhzv1wOix+faNqD81tWsOajjpwbGBzDcfTtDJ4NG+tCJ3PdAJpkyo7qIT
ZrFbLcqH9aDHKl1mO+qJfI0Le/5xPVhi76H/wXw2+ktYyYXqwdzHI0sSZqhX
Ip0nsyPwrP15MPAl8uf1jVLpGD3Q2BUkQ4vH+e/nOJqerAfxVyI+5ajRyXsh
4TVimXpQOS1Osc/H+lV/dryepwcRbXx7ODPphPNwUpzAAz247OhcnrkW91/B
XQ3xT/XA8YdwOWsMnex4ybvIVa0HE++d+Evuov74fNK/2qAHi/y3o4Ml6SSe
P/YoW7MebA4wSGI6ivvgi+13Izv0QFT55E4X7J/WQxy9K/16kLWDVURQCvWb
973Q+Z8Yv5J99cIOOhGsjLZZoOvBtYQsr0G01/PaFHn6rx5sK2XfRVlHJ3t4
VlXNrOjBqMJH8kaTTk5U1P4O5tAH9Wuavy5iPqkeEWoMAX1g35eX+A/zLeci
ngGS+iBYeecHnxDut8+W0sfl9OHRtfe1i8jXP+7Vbb7q+tBkGL56yIhOxDnP
cozo6UOpnfX2kws0YvLUFDzN9SG8/Oj9G1foxMVt7vTARn0IlJbcyrwZ+bn6
+cP9tvow9trwhMIYjdx6fPJXl6M+2JkqO0hg/av3G6xzctOH4VbCf9+BTvrZ
pp2++KB/rzyBgV4aWX74OMH+mD50TD3PeeVEJ+tcg941n9KHoLQjUyrudAKs
2ss2FzDe5p3MjA4a8SyjGTZe0Yeyea8cbqx/pHNJ4OYkfagU6y2T8qWTuyxH
79Wl64PEhrPBMt9opKFErZ/c0Yfcw31NlTJ0Muo0JvKqCONtvOvvewTnOXOB
rdkTfUg6pMBegfGoPPC59LxKH3RPedZGMKH+7FWsNqjHeKpFjnhg/x1ZGZ5+
/FEfZJ/HGhSN0si1ojvrtb/qgyVL9OeFnzRSvMfjUEmfPsx61MD3g3TycWnt
LbVRfTBSej9+fYpGqAX97fdp6D97/5GIzzTC45DFpfgH32/WvGywB/edRdcN
d5b1QTXkv5Rf+L7dfcmwtasNgLdhxUOolkaO23c9vsVvADGjG8VkN+A+upA2
LiFhAJk53JKC/HTyOH+vXJqsAUiN7X6woYJG2u1EXITVDGA2/05yHfJleq49
KUnXAHpeljqkStOJyN3kRl4zA7iXx5ei95hGDHfaM8VuMAD2c66FZ8XpxOkv
nwnHDgPgcW+5oKlEJ6fvNB+P3mMAcx6XWdLQPn1HXAHLAQMwzY5/8xbjfTFr
8/2CtwG0G3MVTanj/M/hFF8KMAA2yW715xgPcHCNjZ8wACXWnbo+wzRyP4jr
xbdzBhC0xxLHMOpRN9e1+ksGEGLEL9X4lUZCrLn3P4ozgL5a2p6QahrpKuLW
uJ2K9keDf7+Wxf1SiGcpJssAhKQcow8jX/PDeFpO5RuAQcZ/5ndLaYT7B0/O
oRIDAO22bJ4l9LeDN8j+mQFEPxrbxSJGJ11Pea0tqw2gwfJFaWwljVjJ8Amp
NxiA4VfzdF3kW/4lvh9inwygdClgnop4cdH4nq36agAuNoveoxhf0F7+6Mle
A5Cx6fDkfkEj317xO/X/wPwMvZSkuHH+KQuoNFHw/PBlzPI0jeQlCMxVTGO8
kpZ/OxA/jr8CH+7+MwAjemZJEpVGjh0UzExaZQhJOtP2Javp5Ot7waPnuQ1B
8/HjjVOvacRMR8jCX9gQsrUqjK1aaCQ3XYh3n7QhiKxPPRzP8X8+Cw9sVDCE
e11qeZs7aSTwiPBDnfWGkHLVY40i4vf1s3DEGn1D8Pjs4nd3Dv2ZiezmMjeE
V7P+VD06+ssTkf+7wRDMVD8WkJc0ws4tOv3DxhBY9iSG6g3RSMB/og1tDni2
TTn8eh751St645WrIYQoL9zf3Ih6sUnMt9jLELya6Hd8mmkku0TM+Ka/IXwb
vuje+4dGWEXFOS6FGEKk5lsbhx4a8T8v3h0Uhmcb2W31DTTSNipe7BZpCN53
X2/tG6cRIzuJszbXDEHeq8J18heNZFVI2BqnGIJEp+BVNXyPZZ3kGsVMQ1jj
ErBDBvvX74okXSDPEDaohud1UWiklSH5ZqnIEFyf59wIa0d/zlJJE48NwUIt
6RU3nrNqpDw7XxhCqvufL/PYvyxq0noNtYYwdEXa0aIP/SVLr3r8Ae83ljF8
sF9b5qW/3v5sCJd3KMaND9CIgZfMvWvd6O9sWbbAII1kNsmcOj1kCJWilI/H
UH+Y9Nds9R5HvNLsZMa6acT31hqJ3b8NQaY4gPdKP418WrV23HLeEH6zHb/k
jPHrBaytUmc2grYlxis64pPxdW2sOKcRzC7+TXrfhf4s1x1gFTSCJhejJ1vR
3vfeOs3fEkYQkO/ZsQrf/8Qru9wvawTb1rSHB2D99U7JtjapGkHgmeshN5DP
6QOyuc91jMAsLbju2Q/U3y1ywfkmRqD3sq/kCubr/VBuQzIYgd9ngTgX5FeT
uLxw+DYjYN0o7vIR/etEyI/42xtB89xYuzHilTYmX77P2QjyqBaPhj/SyKK9
wuVNHkZAe+IQJYj5H3qhsE/XzwgmvXs0bZBfAX2NVn+OG4FF4W1++y80cmIl
UPnlaSOcv79nh9/RyHl5Yb6IC0Zgmf+RsYz1u7y5cnbTFSMY0nddSxuhkUQ/
t37ORCP4MF4TdA/7IT2W5W1LmhGMcZyJHkO87pQVlFzPNgITxx/pgrOox59t
U53vG8FaHZ6BWvT/dOb32TVlRjB3fzdzZh2NVIvfPDRcjng9k7c4jvx8a2ax
o+AVxhN96V0R1qfFbUgv4K0R1DzKWLWC/doZcVlKt9kI2kUXlLUQv8G761n+
fDWCDv2hV9vx/vi7tvGqPsTbfvbDx3IamRo/+fnCiBG8qLeO6sT3/vFIv9hE
NYKliQ43sRXsB52aXM4ZI+j/LLx1CfHm3eNzteWfEUTnnVl3qIBGxE5xBV1f
ZQxPmHvevqDRyLqMh/ucuY3B4beYN51BI6rVjmSNsDHwnmOxjcrD+nyfVx6W
Mgb/PXqVN97TiClLDl+BvDEcsVX6j3kV/j9X2vTnqLox/MyK3FqHemWzbbxf
R88Y8t8F/gjKpZE9RxPezpoaw8JUF//CXxo5kKBfWmVtDEWauNhh//s87kq9
sN0YlrZXx1glol59PX9u025jaPo8cba2lUZO/5X35nQxhn7fwM8PML8IqcYd
LR7GwH5/OLE6h0ZiLAP1r/sZw7Wug5m/b9NIioeQtHMQvrc66exqtL8V9Zxl
TagxfGNjmy38gPp7/8DE0AW871M1Kx1OI6UfmNvvXzGG5Ul/H1/spwrq/RdH
E43h8da694dRX1/z297RuYnxOaz/bhhFI+/1fl+dzTYGw7iM3uf4ftvetKCq
+8aQ22s/Io/zqivU3PlCmTG4/ap+K/aARoZuDZJNFcagtk7BsjCIRiZeR6tw
vjaGE5ujNvPgvJoeUudveWsMjzYWq6ciPxZZ2/6kNBuD84GX+dd9aYRN9eTA
vg5jSNmi+P51Po3w7ZB6J9NvDBZRWu9lUS/Fj70pHRoxhtSC/Y3mV2hENtn7
xn2qMfQEH/GrOkwjas84zx+dMYb4/N3/KaDe6XWWeessGoNL/Z2odOS7+cIe
29lVJnDOQT2N05ZGNq2Z16/iNoHbtpusAzH+nZAtfUHYBCJebey+i/uY06GN
qzZJm0Bpj+Ppcx40cvDy2ASHggmclDcbiTiE+lYU396sbgL20zGvXLCfgz/p
VaXomcCNTq7nNTdpJIzReWefGd5/+MD7pCGNRAmdj5HZYALqz4q29GI/xBnK
Bw9tN4FiXHg0kL+pzu+d7+82AaH1B1rOmNLI7bMBcNTFBJw51a5n43usDudM
uz1NwLOAf3My4uevGqe31d8ERoPzP1DtaOTz8q315SEmULU/t8WM4DzpeKCo
cNYEREfd7Vhx3uY8eLkmOcoECmcSzS9hPuyRH8VWYk0g8/uz+3LrUF+ce/kD
UzF/n+5rZ2to5IsWhaM3ywQeHbdlmzyB847tH/P2e5iv1DP1ETacd71c/ypK
TSAw3Cum7C6NrH4iNaNYYQI0ubQbqjHI76vqtJTXJiAh423qNkslHe5mP5ne
mwBbjE2Q5wUasTC0+X6s1QSaLjnprcrE+c7t2tXXaQLWBinuF+lUwjl85LPN
IOK5M+SqhhPuC5VnmirHTOBeh/X6G8iPbwkx9cq/TWD+N0Xf+jeVWPpkVKfO
mwBHBzHUXY/8Ny8qZ2ExBfbTJltS7uM+I/SiLIjLFIYyVm2OWqSSkLHGggEh
UxAwS3Z/x4z70euuXFtpU4hsX+eQmE0j5MZYRpWCKc6vp64b+XDfOjqXoqph
ivPT46J4P5XwbOCISzMwhfMp/CN6cTTyn4RENKulKai/UOf6oEAjPXSV8JDN
pmAvSlX/9IZKrN8anx7caQp6qYORW7A/Cm9tDbJzMoX0uovJE1hvvpB9R6rd
TWH46dl7TQ+o5OS2w17qh03hN2dzWQbytW/t6f3px02hzrDvxOGdNLJh9rIj
e6gplM9K9nLmUUnRx7SdJyJMwVKSce//7wvk3d8yfNUUci/WpG7fj/oSWkHs
k03B7GjohlNoP2D3zuR1himYrP8huzBHJZuUvulq5OF3o10PDD1p5MG/UfXM
YlPcRwotFjEeofZZBQ78T1PX3e95ppVKQgvZ1px6aQrXFty2PXSjke/homIj
9fhegEN4YTWVbNmrxO/wyRRGwk46ehVTSel6Q46ar6awZOj/Ybs9jYiwbGbW
6jeFz7vWcX37TCVhXY4Lt0ZNAX7o73OIo5KhMu9pTropBHKCcRnisy36BPX0
H1NocrKXOT1GJWX7L42OLpvC6L69BWqnqURUL3Vgz2ozcHWO+XBBmkbOceR3
1vKbQcLzsy+PLVHJj4GnbdoSZkD3YTbuO0olNuX1H27LmgHHNnEZLcz/UeyX
Om41M5gVEINhXtQbrx8vz+iagc+RqGQvfyoJN5l+9svUDPx8mRIL26lkhG9V
2d4NZlC4J9s0RpxGdowKFdTbmMG8j7JBQzCVPHkpn6u7xwxyNwcXspRRiWSK
XkbOfjMo3mAp8UcC9d1vQwqvtxnUgci8TgSV/LRyiD0bYAaZCW7X5eKpZKeo
16XxE2aw7Xbt+kpBGpkreir2/pwZdOUlmvRmU0m+FVtR/iUz0GEcoBt5U4n9
FyfzyDgzKNO9PioxSSWLhwubD6aagX9+cWtLB5UULs4ftMwyA0lG8UrUPipx
TN4xJZVvBkpSXGWmT6mESfn2pbkHZtAnoRB35Q+VlFTRxb49NYOWDtc9NSFU
4rwLip6+NIPKGda9uxFv1pFk8+R6M0jKV55KxPcehf5oPvbRDJ6lMxan71LJ
AV5DD9svZiCz16fu514q4ci7PKXWawZPNEK9S95TyTOjrkurf5jBu+yauLVt
VOLxUU18dMIMTh6cDllywf7yOFtUN2UGkTStqoAkKqmc+WSeu2AGZg0u+3oG
qcQ7Zm3LeRZzGDEhipbnqERgbZDHfi5ziPb5st8d8ah+UjtlImQOxeck2a2Q
r35bhaPFpMzB1eLU6YkCKhHp8xafkTMHzd31D9dhfDVBFUWf1czhq2rfCOt9
Kglg47B4qGsOo9+uN868pRKJTJeWOFNzyBdwjPqO/hu0Hnj4W5uDXT5kbw6j
kqD6xamt2zEewdiwjEYqkXG2i1babQ62d8b/sV2hkkZqjvgqF3NYqtJrLztI
JScu/i4a9DAHn8/LAb6PqURWbKPFaz9z+JC4sjKK8X0qTm25FYTx6dn1CKF9
KPnpcSbUHAyoHH/jE6hE8avxtFOEOVyj5/rtfE4lbX4x0QZXzaEtN1sh7T8q
ObfUIy6UZA5VIfYtg8hH1RSNYsZNcxDcpRTg/IhKviqHWzTnmMPCBfqTBfQX
8bK1pbjAHCwdA121DlOJhr2c59WH5vA2nm3uQCaVdI2ETPs8N4daU59fuqgf
l840RG98Yw6OfC9bTI5TiQ6fmITce/y+5Vo9XxSV9OUdLl5uMYeuTeXXPe9R
yVXjFxZ938xBUXp0s8pFKjH4xNX6YsAc/N9I/mA7RSWDHgc8b/40h5pP+2Vm
8L242dLpE3TEW0zXfRzrb3JtJdrhjzk0m95crkf7kbW7JXSWzWEqOZfpIOpF
0tO8Yl52C5g7trQ3OY1KLLbNWFB4LcBk71ovXeyvsb7NrY2iFmDf/+uCNcaX
GnzT8/4aCwgpLV27K4VKgH18OkrJApoZ7He0Y6iEmml22VPTAhr27Wv2Rvt0
7TgJYmgB6c0ibePXUC8b+otlLC3g2UDN9rWxVDLprG25sMkCvH7sHZTF+1m0
iNZOWws4dvVxo8JVKtkW2e5Z7mgBPDqCpgqXqWRGTHEm5YAF9Of8TqjH+HMf
nLwc5G0BWZvrNv/G8w54L2EXYAF6Wn9uxmH8jlejqr+esABeN+79G/F99zbi
sf+8BVQ6VRiypCK/JRZXDUdbwFS0x0Iy9kOIR2WBX4IFRPz2jTDD984VntjB
SLOAO+9k379FfC9P6jBO5liA/+qBjC7kb5IJLWWxwAKMFjewnrlAJZkRRUZR
jyzAgV2yfiwX9abRp4fzhQWkqD4v6j+L+isgH55UawFNEeqfrmE9Kp0H5MSb
LKA68MWsI9a7Njfz7e12C/hZ2FDQjP6axpyOKPYiPl89b1gHIP90hHkf/LCA
MO/Ibg7k+0Bo6yNdqgVM9DReuYjxjtXEOlbOYL2sriRneVLJFMe2OaslC/Bo
vpehh/4X7Vmz3rJZQp7qimF4IpWwZ9QQWz5LsB7r8i9FfeMfOvejXcwSBC9E
+tvmYP+qmV5xWWcJZ2QP5ExnUIl88Kz6oIolzEYcKY/ehXx/8bjFV8cSmA7H
KCvdoBIj5mMhNBNL+Kytk9WSj/zYri52wtoSMsWCZiRscH4k/3yxsN0SOA6E
nxjHeB2789wuOljCtlvssm2o9+5yB5k59luCZ7G99bptWJ8j0vcSDlmC1reF
yPUnsT6PO7eJBljCUpy0WG4F1mf+OvXWCUtwF+KtYkf/0db2SfLnLSH/devO
Lx5UkhDDY1AUbQndr21sGFXIx8+NndoJlpBbcSV5GOPPk4w+W5FmCXUVJ0R5
dqB+e1qvs8yxBM2Unr230L6iaKmuvgDPBiPb3VBfa36/8LV5ZAkD7duH9Q2x
PqanuD5XWkLIz+rEhmdYn4t6ZftqLeGZa8n91z5Ynw/03QMfMP7o5H+Vslgf
wQez3u2WMPkgRGu8EOvjcjiD0mMJe13/tc6g/vy7o2AZ8sMS6Jxeu/7y4byY
+D44R7GET4M3OxexP/n0si5dmLGE5oGDPTmRWJ8wZ1X2JUtQN3dbJ8+M9akT
+RTHZgV1TXKXDyN/NLg+HxfmswKJ/07Ma6MeGDnEC2eKWUGob32ywhyFQOb2
57LrrKBvv8kS8yEq2T7Mtr9AxQpKY/8GcNyiEgf1umVNHSs44LigcmmGQg6E
hOc9M7GCr9s17fg2UolvldkWc2srOMPyeiHjDuo5y9/x2u3o747HA88/FBJm
8zR+m4MVGAjQEiTkUP9Sjuu2ulqBkuvJrljUw4Se9R17D2F8F91k/JYoJF1+
LLTvqBWkf0sy7VymkDz/fJlDJ6zgJyfjZX8W1ueJR834OStI2ixs2MKB9VmQ
8Q6KtoK0awfXCw5QyJsN3av/xlvBxORKxwLyO2CzWd3eNCsITxYsTpRGvLbd
Ovcs2wrexaVfTqumkLc2i0bCBVbwR+Zf3+kTyK+dbr+DH1phf9/7dcmEStba
v37Q9twKoi+HUvffpZCPDut8tWus8P/wwTtHbHG+7I2QTWi0AvnyyxY8e3C+
OA/1UNusQEDhRVvqTQppc91wY0e3FXC5hs/txvfPu93dVTxkBZ/dLSX4falE
3YOVi3PCCvY+tJH/kUEh37x8Gg5PIX43yw7MjlJIpM+78HcLVtC2KjVqcyCV
aPupmCqtIuDDK9q5uohC+vyvTkdxEzBh+m1U8ZhCrgaOlw4LE6j5U3m3B/ln
EGTjZy1DoMTro/mqOgoZCnkgn6tIwK9AbbAjikISTvL0L2sQKBQN7vthRyVm
oYE33QwJ2Jjs8gscpJBfYS27qy0JTIQZ69R5UEjqeW0e6S0EpGz7B1LUsL8j
kt6dsSPgzJOu9g/rRYv8HdHlRMDd7/ed2B0UkhntYG58kAD1jy071zyFbLn6
dPbGYQLRNxkyuhJUMn1N5NHMcQKiug/2Xd5MIbnxJ/33hBJwYda0G6ulENuk
b4pPIgh8ktV+oqFCJfMpxt8FYghMbnVPl7KjkPs30jOOJxNY0Fl3sCCGQhzS
5/e0ZBDoDtkW7KRKJcuZrnyaeQTaT/ZId3hRyIPbLxtjiwnA5Qt9vXspxDlX
JmriCeZ7raGDKon9dve85faXBHbXL+17eoFCHt8b+FtQTyBsGzX61HoKcS8k
T9g/EUiIn8uxX6QQrge5AT5fCVSMxPVl5lDI81JmlYY+AqWv3ZXU+SjE+5HX
kPwogXjaDuk/nylE4Gn9rYs0AhvabxxlfkUhr8oVnQZnCcyGP9nBxEQh/pXR
AmSZgOROUTUW9Bfn9t+o3SoAS/Ub5c/aKWR44O6G8NUA/q0G7lLMFGLi8TWn
lBug3yqg+qEf1nOIdamPH8AqVomS1kchI16GrjwiAB3HQ8Kf8FOI2QhuIxIA
QXeZnqQYUEiST5rIURmAwiOnJY27sN4/3wVnygKMCsc3H1ClECu/vy0fFAG+
VpVZtK7G+o+raMyrAvSZpTvpvKWQCX/nGFVN9HeNyf3UFtQT6tWf+3QBbsf7
PAv+OUHSAl9svGIIMCV++JH+PQqh0sdzK/DvisP8gHudN4VsCJJaHrXE97Wf
7ZtvnyAZv232i24AUFzM319+lkImQ85WbtoCINQR36gWjvyZeSB6wgZgi5LI
L8GWCZJ1si/krh0AT6AGz4GdFDL1h6et3QG/1x+NOZ1AIUf3Dcy/cAJo+eXy
bWZggow8f6hwxxXjV/MZOclKIW4SF3dedQdY2rTCapCG/RfqcPq4F0CYvsDT
WzIUsqtb4Y6TL8CmuZcJTR8mSKPpbJOlP97v7u318v2/fr6bUTwGUJz4OFja
nUJeLNxcyxMC0K7b6i7dMEH09h/ZNn0S4KJ1o2G5BIUUvzQL6TkDYNeur912
jkIUZHiyas8DOL+LyDFnYD7n+t8WXgTgPJHBwdYxQUT7yxiJ0QB+07kpUYex
vpYRkqdjADT/G2gU0KKQ1dm7N7rHA2x+r9lwuWqCRCzLB25OxvdUuOVo6hQy
7z6TpnEDIKToZpb6fgoJefO2RjgD4Jj6yemQtglCWXdzYiELQFXluSDL2ATx
jvATGc4FaIZXXQVuFNI/aGr1IR/xZ68wjUC8nKy5/R4VApRGlQ28fzNBWu/0
Jd8sQf+zB6O3GVHINpayl+GPAGhqdZ+P4LnW68KozzOArsoC157aCWJWb8+/
sxKgJ0FF7sbiBHmqIG9qUI14y50/6mpDIRqXpr2kawAeeb0V2IP8uTfSEMfS
AMBSJbpdpXWCrN2cVjH+HiC+d6RgzphC0u4dHmz7CKAm0DhxRIRC+NlNuSpb
Mf9bv4R06ybIVV8ug5wvANGcIx7zPBTC9L7X7XInQPK3II/TuhRyRqX0SmAv
wDu/DHeTbxNk6kr4Y8fvAPPe43ujhifI0bFdveY/ANhz1oYPaWM/bZNjU/gF
IJP4MOnMwgRxK5rS4qIgf6KF6q81T5BvnA3Ov+mI1xf5HVKiyB//G5FdUwCN
bAl8tlj/xibfkjd/sJ7kUT3r1wlivd7k2/0F7J/RfbVZ0xOkKpaTKWEZwEQw
of2uLIXoU3vUTrJYg5eD5R4x6gQpsS3Zc4DdGnxVVbZKIp+VSs+f38hlDT1W
Hy4mC1NINu+uAnU+azi5+ZKiJdZL/JjsZ0Eha5iwvbepoG+CJLX8XpgTtYYX
+57tSFyaIJza9YqDktbAyxlTM4B6FZmYavd+jTXOY5v3qyYmyD+GT2iZHPqj
xRZcpE2QE/bGeTeUrMHv1fezVE7s50ccn86pWcO9B8Y1dvMTxEewZ/aQpjVo
pr3d0Yn3B4IfrNuhaw1MtV9yV/A9p/Zz2/UMrWF40lWmdQX5o2f3n6SpNVBt
ZfbyTE2QbdfX3WayxHgqpV8e/jNBaqcn3/0C9G9x6Sgv8sXMsW6yZZM1yPLt
b16N7z19dl2qYps1tPdoCLjPTRANUZ9Nt22tgWb1dOnq7ARxbKX86bK3hpBg
zY0X8fu5mJAikb3WYBZSsOSL7+dvnN9v72INhqqXpJ7/niAfly7wxblhvupP
zr3Fekw9Z69972kNm4ukRGPYKUQqJP6/Vb7WYNLVmbgb7TdoiCgTf2s4lqq9
b4UyQfx/ZnaFHcP8T5dcX4d8S8mVi60IsQYWbVvLjzNYX9dCy6lT6L9qUssD
+TUsoj2pedYaNPg9/95E/Llay/OOXMD4bXcPLf1D/Yix2HsvyhpSAgZWArsm
iOvG+tVDV6zhDz3Yuxr9Ry5tr5KJswY7oU0Nshhf0fO2AOcka0jo5Rb7hv3S
FrxvXWqqNRR+o3j0slHI3PqBz63p1pBr+TitT5BCZH96X+K+bQ1dH+C2ThPi
n0sx2nrHGsT4hxijiG+Qa8h45D1r+Dkptxi0Bvczkflbr4usIVu3zq6+cYLU
tFywWyjF/OrX7IkYnyBjV9mZjZ5gvA0XS74r47zbGP80uMIa+vl8dPZ9miAm
S8K+pVXWkPnReysD9c3jeabE+GtrYA8YO6upQSFXguU+KtZbg3pEpL8Ifi9b
X3je4z3y7azylZka7K9RLZ2sj9YQdHpybyHO4+Wc8uHOVnxfRirXH/FUdrW4
IfwV8VQ5eu5OyQSxE6nfuqsL+6fgPtMaRQo51bJ94VqfNZh6m5SLY32zr7aV
vBu0Bg/TEh+xWxPk3YZ9B1n+R7GVxzP9/3GJIkeufCOURO6QylXvl9lmm202
FKkkuVIkkSOVKMlRcnQQUqGkg3KEJEUld6WSa2abCYWSpPq9f39+Hp/P3u/n
63m93/+MZwtXB4yMJXB+J+b75LcIsV7zSrIEzJ9ypfeLyHFbkObav9tybhRt
OfTlSPmkLTwir/1d/hf73yBEb/KHLVy2DfqWo4zPb97sZ8M57M9z1XJZZ0bR
o7wT5/z/YjzGxfUI4+3dvsj2pigBnjRebb6D8YkppUwPLCJAQXL/7iUJ2M9t
ioUrpAjgzqIIDuH+dEnIcnNdSoCAUA9LMaMvKJqgKZWuSMB8fem+ex77eb7o
Sdt/BCi3Tnp9M3cUtVQYBy9RI4DI5HtCFv7+e3D5avIqAjSqSaa9zRlFagY2
70+uIcD78mjp6OhRZMdrOPNElwDBi0o2/8F4AvKoVr8MCSD70TlCrHQUpW3v
GDM3JUBdv4NTzi7sZ0XXvOANBFi98i/9ggK+n7T2sUss8TwLhmP/ezmKliR4
i41sJsDGDQ/OBhOxnwlfKrQIBFA95dp5E+fbff7Qvt1kAqTcFf/Pq28UxVbM
rsimEWBo5Y1ujtkoKg4+0dbNJICCjnZGEL4fdOkvOqngjPngn102/20UzQ0n
r2e6EmBRUGSIvv4o0sxT5J/dQYCGhpyeX0Wj6ICFtc+x3QTokBfT+o7zUdHp
NRy8lwA2on9IIzCKRPYn7vX2I8CRpL5Fe+mjiCZWNuS6nwDdoQP9Y1jvjJxP
exwOEuBsntjl8dhRNLBxAWfLYQJIejQo6UmNIv0OXU+zcAKkrVES/Q/7O3Qf
a0D7KAFo61au+ILzVCca4aFyAvMvZZC/5K8QSV7N65OOI4D0NCHBKRDrueHl
TpEzBFBKcL1sh/svt23i83QiAcrGjY3ldHGe/JR3CM5h/BVLmEuXjqL1C7b0
9KQRIOyoJytpYBQdz/LZ3naRALZPiw1Zh/H9ZH3Kx2dZWL+zY+r3u4VIofWR
a3ku3n9zxkr1DHxe+fZ237pOAH85Yavq41F069/CbVcLCRDlNRb37aMQTV02
eH++mACnD+XHrzIcRTZmzi5x9wjAPtl7dxbzf+ZN1NsjZQTgWSipTMphPbyv
OwVUEMDMOHJFT4cQqf193bmrmgD34q5kP7g7inwvTbLYdQSIrBjibt8zikpN
VDqIDQT4s//F8rgCIZp/DY4WTQQQ3XLG/77zKCLv9W8zaMb4Q4NfKF/D59X8
ecbKNgLEHOiv1q4Sop7MyhaFLgJMHm/rlhgRojXrBhwWdRPA66d+cPLtUXTw
1aI3vz4RoLPjpvat30JUvceYNt6HnzMmoymZQiT2e+vrQQ4BuiRJyZkhuB8y
jlHe8Qgw8u7yzXNY/8tGBS9fCglgvnily+ooIRpqaiHXjBPgnN8zpQTZUWTk
+b3x3iQBLHyC94+eGEURv1aQrv8gwEx+gWH1VSFqSLN7kfmLALMpYZ10PJ+0
4X67s38I0PrSvyQ3fBS5NqY1RC+wgyrJVatXY/zXPaptg8XtwMp2YdHsbiEa
+8mp3ytpB3zXVUU1pqNo4wVJcJWxg0dzC1eUmo+ik/qmT2nydtCsoXi6apsQ
tTx327JlmR141ZKG3F8LkfKumCemKnbw8QPldNh23K8zRTba6nZw0ytUn3xG
iO6cb69ZrmkHxLq23ER/IZrR/WklrW0Hcn6XNizEeYAGjep/unYgo6AjJY/9
k7iDbDltaAfF8mpFBHMhev89sIpvYgfmEv2fKr8K0apzmZt6zO2gTtuM0a2C
z7+1TypaLezAzOy+ZKONED2qH97wzMYOer6xipzPCtG/7dLlj8AOCEcDrhw0
xnmbXm9+i2gHunf9fjwOF6KM5B0Psyl24LY44I38RiHq144zO0+3A71h690R
i0aR7tPi0liWHfAM6m0nXghRiFuXyREXO5AoUv5+RUmInkz+ur/PzQ7cJSKp
8aVCVDHcXVm60w42Thsvtv8mRA8+PHz6y9MOVPdwfxL+E6LbzakvbX3w8+Kv
e8KSsB5PAtvP7rMD9XEbK8UpIbr6gPahM9AOfjwpFu1QE6LMG2sHVEIwPsMr
WmF+QnTuophgzxE7eCbxZipjQogSznImbkfZgbSFkidXR4hORtfNTB63g0Xy
GtUcshBFHcz+axmH9Z+/+fEVT4hCvSIWxZ6xA59JqyubMb+BW7fKNifZwbZV
iiMf9IXIl2KmrJCK/ZD+37wkzqen9VIN9ww72PWG3RZnJ0Tbjce0r1+2g/fO
On3aeH4nzddGo1ftwIie5inVJER0pcINZvl2wBi8U8p2FiLS4rjNUQVYz961
p2kLhWjL3G5Sw207SP2+0qrhgRBZjNswltyzgy6qg7arlxCZDqpsdSqzgwAX
9aP7Z0eQ/tuZnVkVdpBVKcJ0voLz1/TWe6ga66lXkXjgoBCpP35wQP+pHTwZ
KJPaNj2ClEtSQkOe28GrzLHUBSeFSC4vILr6JeZTiW59LRL3YZr9KdEWOziS
8vJgCv5e9PSaZFqHHcj6J2jJ7cP9EL4gI+2dHWw46fWPGiNEPwL6s3s+2sGt
FGsFR4xnYlfNjdV9dkCWeTFz10mIRliX7wRw7MCjmrNPKQ7n1y7sYRnPDoKZ
i2vyRITo80anmjkhzocfR3tkixC901v3nDCBnyM7o39hfG1q0m8Sp+ygcCU5
aq+UEL1cKuzqmrEDhXFv9zRjIaoXbepR/W0Hy17SCcRjuF9+XB/y+mcHM99b
n+zHfno4cmK0eCERGOpJoTarhajk886pqcVEOGtXV3Q2TIgK2yznrKSJMBN/
I+qslhDlPVMWjZMjwrnc0RQTVSG6/Gha8o0SEcolarzS9wtRWlGHvKIKEYTi
r74X4f2Tsu6q7FAngvhwUZm/shCdSknUvKFJhLT01SbOnkJ0PMZP74s2EWQS
7SY/bxKiiMNE0/X6RPjI7sy6gL8/5KtpedQYr39QY6rDRYgCtv+F52ZEqFum
5x+M+fCmf6ZIbSLChKFrgTLGswtVsZytiRAklW4uSxOibWaZbtmICCLuf4J+
2QoRSzvEk2tHhNO5C611VgkRdbmjvwGFCJITtQozIEQEKcPgw3QiXF7oLe9G
ECKbvxIRNSwilF3QOVy/Vog2TPJOLNxKhMKOzM90KyEyHm4447CdCNs8U9dW
IiHS/ZB3Pn0XEdSzdU93rBMizeboS5/3EGEsLMD/Cu4H1Sfb87R8iTCpZXsp
Gf9e6cHGov0BRHjCHVGzxvPvFvGtzgsiwp+n9z8Y4e+LWZmtb0OI0FN4vyVk
vRB9v/ZicHE45vNHvoM/7is0OT1tfZQIFz3/NCni9RJttRYHnyAC9YFTULgB
9ssFJ9WbcUTou7UxwWWzEK0cOmn08QwR5BhyCxoxHwFmpSCdTIRm85n5jjVC
VB476AypRFjiSWLLWwqRyNulfqEZRKD1jPUfdhAimhaKunUZrxeEnl7SxP1y
OCil9yrmqyzfuAzPO/g855pcPhH0jnuuf4b10ldqfUgsIMJwvOpvOvZPmPd8
U8RtIsREn1mwFfut/pFBT8ldIkTMuL5R2SFEUuI7xgdLiQALo5JTcZ9s25oo
sqyCCKe8nLVmFIToWsFjRWo1EfSPZAfq7BSiLz9GdI7VEcFJ3GF6FvO1kbzc
qrSBCKK7FghWiAlRzEV7Bq8J//5pztfN+Px5wz/iqfKGCO7n3/6QtMfnz6bC
w4x2IpRa/Io9hPO558z7+JNvsT9vVqlUUnAePohllX8gQrGIRtUON3z+rDW/
K/xMhJSS0iq3qRFkG7G3Xn0Q+2c/cZUi7sPkV2lv2cNEuPXSNnAC92338gb+
6RGM97d9xTHcF5r7Jn89HsO/P++c/U9FiA48XiUz8Y0IUQW99PQQIaqUZK1a
/YMIq66FK5yZx/3ifmL9tl9EGPF1KNf6M4LoxffIiX+IYLhn32I/nM9Lc33b
6xaQQH1HYfqYNO4PmkzglDgJFPzEnOsHR5Bhtk2MzhISPDC9pu0UJEThX/an
u8uSYFXrfb4Q899gnV14ToEExZ9/OqJXI0gmuflxgzIJdhZ0jvhjft16f7XM
qJLgWK1zTr41Pm8M9Qb1V5KAUOmUXVsxgsaj3aY9tEgQnH+Vswrnx6L1zKL0
tSQwV3vNCsb9HateqfLSgATzXrtVLtwbQa2BfMPf60iga+ys5LpCiJbXLYN1
5iSYtbr7Z4evEO2VJTnvtSDBas2wwpkHI+ieR6jvJRsSvDiXPrxqcgTN3rsR
+QZI4PXszrnLwUJk968r+R+RBCZZkbHvnoygc46i19ZTSeDR8J3h2ziCPuaZ
PvRj4GfVBV9W4L7X+ubZlM0mwS64s7Xg7QgKgtRP7VtJkGpUtdT36giqSn06
ttCdBJd/Xz+ogvtpIWfi3yYPEiw/Q89P/DqCmKYaige8SHDxuGqBadQIunyS
oXPNlwSmh73infH5xu2MtnwXgPlI/TecJoP7YXUJXeIgCfrX9X3Q9RpBESGf
d9scxt/fVkNWuK+eNyw5HBxOgg00xfk1ekJkMtXjtPMoCT4yGP6aO0dQruYd
M8oJEkTZ2E+r4Hmk2EcVzONI0Hz/4bXj+PyIiHGYWnmGBIPov56TKSOIf39F
l1QSCdwjm/dy944g54EvpT/PkaD1bRN31ALnTbb2AjeNBNqmfon7OSPIeEvy
ofaLJEhrlDi32XQEZQfuZNdkkcCSXKokht9L5BiaFuWSoFTubONCXSE60jIv
l36dBNKPRb+XEEYQ93fLt+OF2C9lgqgXwSOIZZDTEVBMAuOFWzc+w3mocw98
sO0eCXwKR83NkkeQQeLmVEIZCeoMHqqOqmL+HssEG1eQIOG66rqpnyNokbDP
UbWaBGWCArLO8Ag6vPzeukV1JFjyO0GlT2wEDdofXzr1jAQivWl3pM9iPcKZ
X/saSbBIKW/AFp8XNYUa7a9fkyBLItyo1XwE6XZP3CtvJUH5y9kXXSoj6KL4
03P5nVg/8eWqmf9G0MIN54NS3pNg+/5zP39j/oK9dzMjP5GAtaK0/8xnAepP
X2fs00cC6E3cefDGCHJ4/k+GzSGBXIGoa10v9stU+7gNjwSH6C9DW/gCpLP6
WquukAQp8/vzZfVHUDo7+K7SOAnq11+U1fg2gkROQorIJAnoS7XnWSbYfw/k
Ase+Yz3K7r77/lqAegcG6R9ncT7OgXVU+QiiLi01fDFPglOHBoOVML6KLSel
H4iQQXRT4KKqOwK0Jog9li1GhtV3lPrH7EbQhRzNljMSZBi0aths0DSC/rZM
3jksTQaecNTQ7YMAHZh/lrRbjgxX9xi+bG4ToE8GafsdlMhQJks82Yn3I+/w
cti0nAyshJubH2J8jxLNDLTUyLAr1LA/6KwAaVaLSi1dRYYstYejO3fhvAm7
Rue0yDChfTKlMW4EzS+/0cxfS4bYP7/j6ecEaB/lcHGXARlm2nLopGEB6g63
S6xbR4Y+2YU1HrkjiFikGFC8ngyMl7ZeD98KUFk3l3pxE94/LqdE/6QArVz0
SC/WmgzN3yyYvP0jKHnDKckghL8P/mdgifHNebsIt9uRYerP1YzduwTIL2PN
a5I9GdZYhPcvXzCC3j3/fsvUgQzuPdzrUkEjiDD9IkHdkQzRhkam+2IF6P7q
TH9JZ/x869n+tecFSM3Jh/JjGxkmu19MS/uNoMSTG3Q57mQo9NU1reoWoJ8P
xCVaPcigkXXPVo8iQN6D7wVVXmQ4e2a83Az7uWtp4cubvphPV+2Zo3ojCKEj
RakBZDiUtAv6yQJUEkQ+Ex2E8UiVP9DC+qnmKvv5h5CBDOLv6mkjaOPaq+23
jpAhrHz2V26wADk90LQQRpHhSmZ+3s/9AhRkWXRN7wQZMuVphvusR1BSg6Fk
QBwZtjI3T507LUC3HMoOFZ8hQ4G+6399GN+Ld5t6RpOwH47fz+/TwvnZ9YRg
kEoGk8Cxa25XBWieT7izP4MMbsGNw5uMBWh58CvFkstkoHfRGIniI8j8FyN6
7CoZGo+ZdcSVCRAr9u2wYT4ZNhy/tuGJmgAFSm1nBBaQYfzn1JDHkAAlZvSX
372N30/rqb1sFKBCdW+NibtkYHIUtSKUBKihUBhvXEYG2m4v+5xanK91B78G
VZBBQUPVx/qdAM1VfXe9X02G0np3Riv+XpkQVf+1DvMh6Xrk9kUBMnvzT9fk
ORmUD7SbH+8VIEeX0xeCX5LBqqqUewHjOdC3ZO7BGzJUzd1TaQ8RoATfVK/J
djL8GFBob+8ToJtfl70xfUeG5EfeTjr6AlQfkb0+5CPW51gDT84Z52+B5tWy
XjLIhEes1fooQL8SC8WmB8kw4loYn2mN8SgZBq7nkWFViEWEhCXGk1P6/rCQ
DItSQtvkWwSIqbNpy6NxMlSv/855zhSggPu1hd8nySDiOeb5UluA4i0ISzfM
kCGi7fnlpmoBuvHsZXjYHBlUr7yRyNuD8dAYg+V/yeD0+4ZbowrG87aLMiNq
D313VikNFAjQ7E630o2L7aGa58cj4/mU+H0q4VL2IBc4YcHFfJkc3BtbudQe
nPxz1lhgPzNmR0Z/KtrDA/8eGesTGM/JIGeL5fZQV0K3CVHGeJZ8r4lQswde
bvKXmggBup4euebxKnswa5lVOHFGgOrU/iX/WmMPp9c2phLVBain4NQPSz28
/8b2lZu8cR6Ml3hEGdlD899Uq1uJGE/V+aZqU3vIID2W7VyL8dguW/d7gz24
mXCV9TC/9OasS9ZW9jC18qInN0GA/J1XiURvsQdm/3Fbd3MBOtVb4F9LsIeQ
Y/LzeTgv13wMOufJ9pD5to06jvNaO/HAcrODPUTds6xcZov7K3zj9WOO9iCu
uD1OFwnQjEjtkjpne/BXHVScjBQghUTbw39d7UF5JPvZLroAGSu+/Lxlpz3Q
H3j4PbMRINpVOvGEpz30fL7zfM9BAfLV7ip56m0P+v0X5/tcBCj2nusykX32
oJezmd27RYByN/Udg0B7sDjx+XoXnr+m3osfc8gevDUUG+9vF6CP1BHmszB7
6OBneYUSBeh7V2Dlgih7SFF7dbxhhwDJ7ZxeSThuD9fG9jWGuAuQIS8iITbW
HmrLOj/oYXz7GXlPouLtoZyye30V3r+4vHEqJBHzPbpvbNhVgITqY2v3n7OH
LtVLpnH4vW68wq69afagdoESWoP59ZuwSNtx0R50U97+I7Jw/rbtfumchedL
1tTXwb8frjs975BrDztXShm4YTxaa0tMidfxPF2NjV9pAuR1vsvXptAedD5+
3tPtiPn/OZttXoz1c/0+eBHPO7B7ZafhPXuQKYyzcsbvNV6RFmmX2QO57NtG
VYIA7TI5YK1egectHdre5yNAVy+nBS+rxvrsqx5x8hCgzyKPC2TqsP6bqd5B
m3D/7RvoEW+whw0xu4IdMX/bO8Xl/jbaw2odseuVuP8uWxqSZl7j98l/XK/i
vH3Id4qaaLWH+fxjaD/WX3lJ5H1+J14/xSg0PEqAtobkDfe/t4fEiLqEPZjP
jJ5GlQ+f7KHQwYI/rCtAXYQxZnufPWyOXPon8pAAyd9ROPWSYw/S27v6e/bh
flO0fPyUh/NmN7T2LPb7uaO7JyqF9pA1k3/RHvPdyj2t9WDcHgI2J9eOxAmQ
NL3E7dYkzlecC7sZr+/wqCvl2g+cp2pRsQRD3Idqvxou/7KHMJvM52k4H69P
rZxN/YP1iHQbraEKkMQ4yejsAgqofzJcHiglQPZbD3idFKeAyZqbnVWhOJ9P
0i5FSlIgqOxjw5nDAtSo/bjlkAx+PhJqX7pAgMTODSwIkKcAI0n/vQvOi92M
+CavZRSoT+jZ9PYC9q+H4QF3FQqE3XHeofYf7pcmp3wndQpsMbKxRHIC9M84
spumSYG+xuk6yTQB2nIpT8pOmwI+boGtHiQBiv7XCNZ6FAhw9VirLeSjGr+x
sPVGFJD5q54XHIj7ul3hjoEpBQrOrbnTgvvD0sJyUGsDBWqRrq01l48iru1e
pmaJ15u8Y7cRny+VEvE0pc0U6PpbVfz0Es5rcMkJaVsK0DM0bgUtFKANn7oe
iZEo8Kzh7nPJMT4Ktf0lnKdQoCpWfPdJfJ94eHvlyh90CnyLTv+TulmApuTJ
LuMsCgz2dN/reMZHplEHzvJcKLDkFM1dHucreCitrs+NAjOdC1edCsfnPe3x
9PudFJD4sciwAX8/UTag2+ZJgdexbBIJ82+0YpFHkzcFxl2nHp1Nx+dJnGF6
nT8FJK9KtvMxnjtfnF5VHKCARnBr4chTPhp1jvxzL5gCcqT8FZ7HBUivNs+s
KJQCns8KHvw0wf22pskvL4ICn+TfK97I5KPC5LGrl6IpIL6sd+ME9jPvu0LX
+RgKLNDYcUIpSICOVCcphJ7CeFfsz/6Xx0eLYsSc3RIoEJJyof7bOz66SDqW
bpNMAbPEH7Ou2H86UjNvV6VSIDPu/VZ1Ph9VdAQpiWdg/9hvTvkZw0f2FwUu
wksUqEaNX5/jPHzc4ZnZmk0Bfd/zd1Nxn/lrfnpfmof5t9KKDQzko1k+W/ni
DQpY/bJwfT/IRwklzduiiijwnmAs14b7cXmI3SWPOxRgiYrq3b3OR7c31X4g
3KeAbzUaWHOEj6z+mC9f+5ACkd7bOzRxHzU33HWTqsR6LHp8ZpGIALkn6Fz5
Wo3n8dnw5QMB88fI+/S2jgLFLWu5dl/5KEpxuWpVA8bfN7fXAffRkk+p7leb
KFDu5qTy0YOPsnIls2OasV8jFpudDuMjA+/Yz95t2I88vSvv8Xy1er9XULso
QCxqHa2p4CP618M7jbopMB840BajxUe9j8auyvdQ4LLLQYsXv/noQJRP348+
rL9+UrGXIr4PoX71Hg4FbinyyxxW8VGyuKtHHY8Cxy4lJq8/xkdqb9pzrwtx
HjhXf+VuFKC7qZSB+HEKOP2XZLjdn4+2bHu2cv8kBa73HyGvl+ejthVWno4/
MN6zZT5ncV49OGXX1v+iwOQMPOpvxf4rNOD89wf7IezPDrkxHjp+4KbmvAgV
RGrN3n84y0eyZupeg2JUSM1/F/1PFp8/PzOvv5CgAuHPeUnCCj5a90SWe0ua
CjPUEKk/UnxUH3tGK0WOCsWWZIr0PB+xKCLeh5SoEEHc6JN8nI8GZSJvbl1O
BavwgMyvjTwU/HZy2FKNCst+qmbzLvKRyJUAbY1VeL/Lfzbf6+ajVA+uj+ga
KsTLv+V2vOehVWt2FvLXUsFrw4/IeTxfqfAdv9mACnqdAnKHgI8I9xlr76+j
QlbR1fZqAz7qCm3yS19PhTXO11S593nIywrdCt9EBfWhe8Na2N9T/ypHdlhT
Qfv+8X8tqXwU22iiB4gKCnJShKM5PKSQdHvfGjsq5PgYCPat5KPrrNXFEvb4
95RcF6vnfLReOXt0jEaFlL7YgX29PPTis6JBJ5MKzRX3rAtv85BLfvL+cicq
3KXOS6fm8NGwr3jJlW1UCBY6jZdi/4UaHh875k6F2X+PqufDeEhsasbQywPj
HQ03kljHRxmVBwPJXlSw6HlK23iej9YcG7mr70vF9zWmwOYSD5UT9kzIBlCh
4d9S0ysPeIgs0WM8HUiFQ4mJbyPP8VF3q9PBD4eosH3vd0vDaR7yTX9zvyaM
CqIc+3/lnjw040b8lhdJBdstcdelrPloQ0TI44/HqGDkrrHikA3Gd+larHws
FQL+msfTnHjoUUWbAy2eCrGNCaJPFvLR9Pt5pbhEKkQvOqvfyeAjsx/6/TXn
MF9mazvXbeWhEKXtRd/TqCB9fCG56A0Pla4/E2x0iQrMXI1GHxc++uZUbumb
TQXKAZcyyl4eWhfCFc3Lo8KSbVV3Jy7yUNAF+ZYPN6hwj3A+/jmTj+4+QJly
t6hQprCQ8jaSh8baAz2oJVQ4vaTxufk+HjL4mr029gH2m4HnkWGMP0C2+Vv1
IypsUS96ujOTh4qNZh9PV1EhtMB3H4XEQ0K6TpzhE/x9tYr4Spw33QMudJ9n
VEj7LyrzvzIe8k+KXZbbSIUMmdTKKUMeKip+0N/9mgruj8lHxud4iP+6v2hp
GxVkLq8VkFp4SFsofYjShfPw0339h1U85C1hbXWyG/vVIO34lQ4eurF238Lq
Hir0ioTuyBvkoSHypZapfip03Tm2JRR/r+nbmGnApYJxnr1v100e8jw97eEt
wP42lbYqwfm8dlNTN+cLFTzsX98EfR4aeO44+f4rFUru0QIsjvKQBvdYtex3
KozpzDbLfuUhD9GSOPtZKrQT/L92W/NQjmYPPWYe5/eU/Kdf23ioFySUH4vQ
ILD0xvMbAh5a4blxYFKMBtUXbZdbYL3dT3jf0pekwfF1ynoJVjzcf2mH9srQ
QHmryYrQDzz06Um91VV5GqzSanDRDuCh5X0TC98vo4EEqfm/3Wt5yG1erVVG
lQaUmVf2p+t56NIKh4tkDRpYNYh4RsfwULdV5O4Tq2lwUOT6x3F1HlrmXqRb
pYP3r0kiJBXg/ES+n/ymT4NlUQn3UtN4KP3ywhq9dTS4yOsey8ffd1WanvJa
T4PTvhXvTpzlIfkPuxnZm2jQQLOoic7lIdZMivI7axpkyS3liGrzUOqy2gFp
oME983eZcJCH2s1Hb5GINCCbfYzadoOHZF2Whxyn0KB0TmqKZ8pDzMNk60o6
Dd6HpR+22s5DKWmhYt9YNNh8Z9lVy3weaim93qq7lQb6lmvVam15SKqz4+Ke
7TTYeDFZfzWVh2jf/u7O2kWD2w2+geZXeOjsUiO9t3tosDM3/DiXzUOvjHdM
SfnSwHC5ic0bxEOLmWdriAE0yCXdSFBKwXkOrDx1LIgGUbXtP3/t5qH4ZB6j
IoQG2+94tGhu5qHGO4r/fT1Cg9TY/e8VTuD+eGM7uPYoDWK+JHcbYj2Iowdv
e56ggVn0n72bgIfiJHNDrsTRoCBBhxN9iIcadFusu87Q4GxlfHwI5mPN2uzO
hiQaRKi9WvvdHu+nHeD38DwNPG0+yh7BfTGiZfnnRjoNVCj1JvzDPERdLZGe
cQnz/bU72An7qXjVB93T2TTgR+sU8XD+pVcW1oXl0QDOeuTM7sd5Vg9z8b1B
A2GOdujgHh7qWEEc3VZEA/rrRgO+Kw+ZqSrG2N/B+P1PhDzH7zOWDy2zuE+D
lJeeBStxP8wol97RfUiDfXo1R5QxHrdlMbYqlTTI4fxMFMP8VCs6fpCsocGD
zdXDgzt4SE1BI3CujgZXdMzIK7zx+SY3LvqlgQacYzL3THxxfmRrL39uooFA
VGXRZowXZJKMW5qxXnkEzdBdvP//X/BFbRv218aazVXBmN8leu53u7C+To3n
z7vhPpWY/ZrTjffPoHiXMLGei16ePteD+QgxqzmO+dEXv7jiRD/mL73XXsef
h5IX+pQeHKJBt6fuDJXAQxMLzO09+TSovbYkUYjxsEQW9rFGaSD+fUc4O5qH
yv52hthO0MDpsd8mUSIPKf25JmE2hf0Z/km4ncFDYb8P5q6ewX7MKl/0Jx7n
6dcWc8U5PN+lWyIHMT6LWZnmhX9pcHfr1/YD63F+Z3p3f1/gAMWmj3N24vXn
v9/5MSzuABs+H/9EjMB9MR2V9F7SAa4t0Vq/TY+H6iepmk0y+HtWTu41zOfq
b8srK+QdQN45NcMR5zFuQkAvWuYAjzQyrutb8tDwWMXQJRUHuHA76+RDnB/y
l9MRCeoOoBBdrYkyeOiW0EU2UtMBzi6wTTuO9VoyonVzn7YDuBdVVJ9S5KED
/ClLdz0HCKWtq1Y4wkNtw8/aaUYOUPtpcVN6Ig+ZcFN9rE0dIOCfYM2cAg9d
4Oz+bbDBAcanNI2+YH9PDRhfULN0gCypKbdGnE+X/j86Mpsd4OaOibJ4cx6q
6G2p/QMOcPiG2ZSCNO6rz9lOE0QHiOVqPHmP54n6FDDST3GAzVaf1RNwfno/
WB5vpztA9PMj4QmTw2hLt4RSPcsBqu4kLvuE/ZH37sPtBy4OwLh4qPUAzrfI
20KU7+YA2/VIo0ki+L7RGfb+wk4H0L50PTz8P3w/aCfuj/V0gJiSM6fzcL/r
tCkuOOztACtdJRcXY3wJLUMX9/o7wKQW/4f9wDAabS41dDngAPUqq4tfH+ch
+uuYBmKwAyTKmZaZ4/vCvZeObhtCHeDKjk8/lTuGkVyTxoR2hAPMPngftw3r
HfJiPE45Gn/fKXfjH+7Ddw21KotjHGBIZ3X/kalhtOFZ0v2fcfi5V9ZSZGgY
kVXk2mwSHKCrKi/Q6SoPbTuUMXYy2QGMqR9nk+R5yO/1cqmXqQ6wOqi9cKhh
GEVo5uhJZzoAYZGTuTHuq4RITQr7igNsTBvIf6jFQ1c6C3wv5jhAb4jeavmi
YVSsp3/6c74D7Kz8dmAW468+ee/GqkIHWLXsdLriJh5688mswacY+6N2QbJU
6jDqNa0cLL6H50u7b6GL+2HsrPW/r2UO8MXYdGMn7tc/nKfqGyodQOzyiPb8
8WEka0W0iapxANG/UcHPsf800l65P33qAGZXB0qmcH+vG6VHir1wAI038aoF
ocMICJ2XqK8c4LZTZD9lMQ+xs7ZWnGtxgNHjC2fifLB+U5/eve1wAM/P6yq2
HRpGITSP6eXvHeDyyDen85+GUdz1IXmPTw5gdONuSCP2S8acr8mNPoy3fiud
g9e/6fSFOcJxAKU/DuGFxcOovPhgoBEf+/N993pH3AdNot+TQkYd4EfDFOEy
xv/BPaK4csIBpDs2MO9HD6ORsvlX81MOcGuLvaIx9tvskpMC2584HxtF93mk
DCPJveKLzvzGefwS9qCMPYxUa86uafnnAMtf8B8swPzoK8rayYvRQf3x4LF7
ecPIen/anm0SdKB+fNoYazCM6M+VY7Kl6UA8/05ZDN9vdq3Izh2Uo0Oa6+er
Dx8Oo6DDK59oL6ND0CXVE/lSw+j4mxufA1ToEGnGeC6K+TqvpTt3X50OIfyJ
nICXw+ja0ZLlPzTp8K7hSvTaaS568NZkk5UOHXIktfZt+zyMnhmUbz2hj/eT
Ccx8+nEYdcVZhr4wpoNb37LUqiEu4n5+kia5ng4HZJ1DGjFf39cTSpmb6MDd
uW3dI94wEktuak+3poOYx4r3MT1ctGyYNvER0aHXLHtiV/gw0rFpl9Yg0uHL
zozoxLFhtDHD2WAvBeOVGZgzwt/bj32g3qLToVEn7epWu2HkRtzpP86iw2CY
CZH3ZRjtuzoYb7aVDmMGHR9/DHJR1HfvgvDtdGjZHSzGkRtGiXTh89pddCCI
FO7k4rxk3wwcWuBFhy7DO6UF41xUMj8pYu+L8Q8l3ZXG89S6HFmZHECHJfRo
PYvOYdRaMre5M4gO/028XVfyl4v6xU7sVD6M14t/OHG9iosmdi48uiOcDol1
6JVJ5TD69+jMlWtH6aC3efE6MwWcbxnpKt4JOmRRvxAUL3LRKp/Ubv1TdNg4
3iJ5J3MYmT5R+nEwgQ4mM/m91jrDiLDsimJ5Mh3oyxc4eBzlIqdAdbO5VDqY
+YkclAwaRnsb81kokw4T8a9dX1gMo6aoiKjgK3QwanHO7/bnIl0Tx5v5OXSw
P73c3Qe/T+Rpt3Xl0yE+50Lvzq3DaCxr/ufCQqy/z4q/BG8uYrLeam4opkPt
u2UWtb+w/uLFDr736MBz47d2+AwjhZqYsEtldJB3n2VmHuSi0GDXvFcVdEjg
toY41nJRt7bx61/VdNjX8iX9ne8wsvgsNq3/lA6iTJOFSWe4KCv1s9rO53Tw
6Eht4J3monlSGTnlJR1+mM22bXUdRh6/E4Lr3mD+vW8uiS3iovoHu7O+ttPh
2809vmo7uGi178YXq97Rgb9bdzIXz3NqhcwE+yMd9jvX6y9o5iJ+B/e/uF48
n1WeyvctXESJr7Z9NEiHJq+5WWlZ3F/WF/bzhumgD+tY+4VcJD3pl6kspIPa
bd75K2ZcFFS45an9OB0iOMkXgnu5qGPHMmHEJJ5XEc29EhlGZvJjCsU/MD9L
gpp2beCizKYGm8+/6ODDtOog3uai2aNXfKX/0sGypzP7qPQwcjcNTt0syoAt
KrPrh4jYT3xyddAiBvSK3RX2RXKRxlX14bwlDCBGqHXWLRlGMezvMp2yDPiY
1zsVsouLhha92SSqyIBaheM3S524iFibv2f9fwzY8Kq+oP83FxUeikjyXsGA
mdHSGzFRXCSx1rE8cyUDsvizdz9t5KKAXu2BJi0GjHz2r5TFfm65MC8xu5YB
v5z2B9hc4iJj+7dmeoYMaI03zHu7lotS52/vdDdhgPHzBZHj9Vw0VRoTn2TO
gPEL/b/J97nIxc/1Qa0FAzTUL44d0uaiSjXjnnEbBvyRvHS65yoXqXaJia20
ZcCqDdvLGE+5KPrMZyMWiQH0qbHCBcY4LzZlriepDGhhJ2wCjBemEk6WMRjw
beCm8tFGLrpetPsOl82Asjvr+LlYP7FdG98rbWNAp2/zF+FOLvJVkPlHcmfA
uQqbq8XPuOjVS65uuAcD9jbGvS9w5iL9Y9VOt7wYcHfbi6yz9lyUbHYh+pMv
A7KP6X1yLMf5FPgVLtnPgK1lD0qs93ERK2dLh/VBBpgd3pR0xJqLypyWzR04
zICx0mwPxRtcpCQxppUbzoDU+PL6YZy/I08aGO1HGZDr8iwpy4KLPoVcCReJ
YYBEyv5Z8jkustENzjc9xQB9g8Phkme5KLeP/MYrgQGyB+duXtjMRSLp6j/S
kxkQ9vFWIwPP70X5rtGYygC3x2iaeZ6LXvxppsxkMOD6qXH7Xxi/zsP8kLVX
GHBTajdZMoCLEvwjrrrlMODVyoW3avB+o+qOTWfzsZ++MUz6XLjoYFlTbUgB
A76KigfdwHn5Tt7ycMdtzOfCgwemcP4iPpffJt5lwNBhOUO//Vz056DRNaNS
BkysDt+khX8fK1ZwUbmcAXrjii1TR7ho0RW1lH9VDDj9ap1dYQQXJRllxI3U
MsDGptNWHesh1yAV1VnPgNWfN51Zjfsmc1tccPULBiwWfzt5Khz74cuc741X
DEj4UhTliN/nngjZldzCANb7vdKNuG+0lEadwzoYsNDpQEh6EBfdurWH5vGO
AZJXFVetD+Qiw82fwP4jAx5Kf1Neh/GWdrI2mfQyIDjh719nrN9G31dGKoMM
qH8v4VTqx0U1c2iN6DADjq8IO+t8CPvrfKXqFwED2vY8X3IWr/9Ca538uy8M
UPxY7Su1m4uoVYWLn3zFfr4ZrOGL92uja/wtmMbPv5aWnMf6OHEyv5/7yYDA
K6ULCjy46EOYzJfw3wwoaC6/fBA/71xymuP5D89jR6bePMlFg7nzH6gLmTCz
5lppwAEu8lkf2ma2mAmZagZ1FCbW6+WXFyukmBCy7MXJLsxn0M69NWJLmfBE
uj2+LJaLpr/1lI4rMKF5mXzYSges12mnW93KTDjV/ndRAsY7r9Kc+1SVCYfO
i7uvTeOik/dsM29pMIHlEf55DOuxyO5x0oXVTMiNXuGwk8BFiR9MYqN0mGCX
6DNwLomLlh64FbFXnwn0xLc3h49xUYbIqoN0YyaI/GhRtjbnouWZl3w2mDHh
npPn1XTMd47e0p0aG5lQYrbS1Dgb929dvNNiKybc2ONUYoXXL3T6S/m2mQnu
8c7oJeIiA0EY+mTLhLbXDtTlefj8ODq+oYHEBNrzwPqbWC9zOR/DO1QmDMw9
ajRdxUWPb/auzmAwgVhBNW0/wUVbLF1UjrGZ0GWbVG+Pz8eG1jdLfbcyIZK3
bruLJj7/vewWOW7H+OTHn+yh4D6bqZ7ftIsJtU8r5urucBE7yWx61R4mxKot
BHWcn+6VxUJJHyYsedpf5qvERe6PNAen/JmQv3lBfi5ef4BypfvzASZskwg/
XY/39+6Ta30RzITUrSXx90S4aORQwvO7oUwIU/XcyXPnosBFItUXI5hw1WTL
CVYx7ses8AcnoplQf08jq06Vi8LXfS30j2HCYVqjtSneb/65bw77FNbbeOx8
+i0uinHrT7dKYEK52AZarCsXiY9vTdRKZoJYcOGXUv4QSjzZGiOditdf+7hX
5DAXySqTwn+kMyHGwsytMpOL0otrA/svMeGv+o820y9DaDky936ZzYRha/OC
/zCfdKM9XLFrTLiz7QT1bwkXnVhxzotwkwm6NU9dvuN5yiRrOCduMeHTtiUd
7+eGEP+nwPNJCROeKvYIH+PzS5WvNDj3gAmPW6OvZCvg+8A7290W5ZjP5cmi
AR+GUGxDUH/YYyY8SBNLYOC+L3+QvevhEybM6T4NfKKL+cp91fvtGRPsvXcZ
+VcNIbWUHzuMm5hAWEb5deQU7tujqz/vb2bCj5AEsd/ARaf2ObrfbmOCeUFa
zuJrQ6jKNfoTv4sJo48XBI96cdEX0m23NR+YsOYm7d8pN3xemnd/2POZCcx+
6/7x80PIafVC17wBJrxUafNxsOSieDmT7l4uE+R9OR+24fw9/rtzq+oIE0p5
S4tlzw6hsbGz71zHmOAi2uT5VxLfvz5XOGd+Y0JhzPT2OHweu7zmdnV9Z0L3
g62bMpOGUEKlnJPcLyZc3GM5MIrnry3Y3Mn4wwQOeSj5LM7P1/QAVtICR/Du
9HDsvjiEVsdean8l7gjfkErVxsIhtC34BXPREkdIjl0/fBn3aaLHZKudrCNs
lfb4sv32EKqjazBOKjiCQqHo7Gz4EJqycmipU3aE7UP/Fbfs5SJtvQiHeVVH
6Fh73/Jr/RBy+6+g2XKlI2xwzbWfdhxCyeJd1HAtR5j84nWJTcL3pem/rx6t
dQRwij7U2jOEpjkGlCkDRwidV6r1NBlCOh1uL9eZOIIRfAnao4bzUHeaHGju
COoLhyrfTA+hcyVljcUWjqAcpMJ8ozqEGrIGiCM2jmBRfkZSB/ttJkH6hbat
I1w3mNhdLMFFeuGWdntJjqD98vLyb0uH0E4f34ZrVEcg7PS/HPdoCKU6p9v2
MxxhPKk4e5cy7l/b+voVTo6gqhdwqwJ/P7tuHG3f9v95l7q+OTqEDDVUn150
x8/urtFeOE+7pe23vPNwhGml6nETlSGUNnf4ifxeRzCXztniRxxCTSPXbBz9
HMFwuOzJEkUumuturUne7wiSCxaqFegPIePGOavmgxiv7/uUVPkh5PVwbfXi
UEfY9vAT7d6/IZSZ72JJinCEIzK9zNu2Q+jV+ZNVsdGOcD/9vZcUn4Pmj93b
VB/jCJs3DFKeDQ4hkwOfK/6ccoRP4e+n2TuGkLe7xEbrs46wxD2SOv2cgy5T
NpRHpDiClH7gcEvlEHqz0cu84oIjCEt+6vmHDqG/a84/nM50hHe1RJRTwkFm
irVmplmOcIZ10t72zBDyXSAsDcp1hOU1zXmPsF+zvi4zLbnuCDf9ZOvPXuOg
tj7CA2GhIxDpH14ZOg2hBS0H16294whmBa0zzpexP65sPqp23xFe7e4WPrnF
Qfd8pV7KP3QEOZE3RREzHCRm/klhcaUjzFeXrzlRMoTcFxR5zFc7Qu3D1+fy
8bwP2kKLJ+sc4cpo5K7VuRy06Cphht+Av/eXNiw5gfXdJ0fobXIEN8ksf0OL
IVS2sT+ls9kR3Fvv7+VFcpCEWMmnpjZHiM55sHmp1hDy6IzUru1yhLo0q+Zn
h4fQo1z7Q6XdjvBnd/WQ0wUOkjqw7ElhD/bv+hb1d7Uc5GXJlbja7whKqsOm
hyNxHywqdbkw5AhBqbv/yL7jINl3x6/F8x0hJkj739JQDvLOp48dHXWE2CUW
2fF2Q6g6SNXi0IQj3PukEvx55RCSsxmJ851yhHw7T2+yJwf5Sla075jB+ndH
Fj4e4aAn3XEr2HOOkHGdwN3FHEJKN9l+5L+OYLc8iLo3loPKq85/Ul/AAnGG
ulvZOQ7yzDtyYvlCFkSoxdKd7IeQVPwubUVxFkhd2n+hq5GDKg4Q38gsZsHr
U5KHZVzxPM4GhyQkWdAuWUzvkB5CMlYK/y2UYkHYm1/7j0vg+Vb9qv0jzYKN
YXey1ztx0N7Fg16zsiw4ktJX9KoKzzvRJDEtxwLh6gz5PXpD6PG7u/fGFVgQ
U9ZuYHkUz1+T4TKixAIj58et4kEctPT60bkhZRYsCHSRCVmO+Ujwuta3nAWh
g1sWSNVwkM9BKvmjKgsOZWZNJdlzkNw2k7EuNRZIXH50SqOfg2ps/ktr1WBB
1N87adOTmC+tv5terWKByLSJ/ScmByks4fU1rGbB8gs2JrKZmL9vb+KerGEB
u+3xwk7xIeT/oUyvSocFt8S9d3tEcZBS3ZX2Ml0WaKXGxjjs4KCnN2PC7uqz
4PutzPsXJjgoIMlvxS1DFqzSllA6WcZBy0KYz64bs+DHwInAB0QOqnfb4Jdj
wgKTBQeqf2E+9iM1mctmLBBTOblh7jMHKessfJhmzoLta4yoB1w46Jn0qFvK
RhY88qOT5Y9z0IHpjr9nLFgw05FSFDLMQf/1VN6MtWLBz6ePnrQf46CG+lza
MRsWqAysUHm6lYMCi05/C9/CAs81Zqpvmzlo+bkDF0MA8+UcOddSzEEvQp1t
Agn4/XLxt5l0Djq4w2rIj8gC06W+d/7kcJAqQTPBi8wCn5PCaGjioCZdCeNd
FBbcLH913h/779DSr29daSzov+ui7XyYg9Rm3kc60VmQu5Qb3IH987K3diWD
idf7V+ZpHMdBIc9vNNqzWFDc7HboNuZPvThxP8GJBWrbfqzpvstBr1IPyW92
YcE9pGF1+Dper3DBE6NtLHiAkoPHdnJQcM0Ffw03FjS/PvSk8yzG36GptNSd
BbZd6u7/Yb7/45c+/beDBUvSUteewHkK+G27/9suFnTd1NbWwH6qk+tS5uxm
QeY9pkJIEdZfx6uhcw8L/hn7wuFU7A/rqcCGvSyoSg4SGfLnoGpWrMpDHzxP
yz1Z//PYv74KjTf8WDB8vl+0DPeJ19HrwRn7WNB2xdAdHcF5STVTO70f8/vS
8Rk7moOWFDa8DAtkwbmGnQGnszjIo8bpsO9BFrROjHUfPcNBZR1DGq6HWDAh
GZfqEcFB4vyQZvvDLNBRopWyUjjI7bfoEYswFugJ34kb4/1L5NI19cJZkOW+
4JNeDAeJ6Gi1qkSy4KLViYCqUxzkYv0wYslRzFeZx2+ZJA66xbJb8zuaBTYO
bdbteL95n7ftX47j9TV/zy7Bz6yje4/2xmB/tmw2X4J/fzN1Wqc1lgVTtdmL
vp3moNmCuK4np7DfDkj3teG+oNcoHr8XzwKOCcrWwO+vddzQy0tgQYW2noYM
nneat/79+UQWZLBvUC0wn+Tfz2NikllQ4JqlysHPWXIuhofO4TzSM5LZYRw0
oT38YU8qCyg2D/qt8f4E69A4pzQW1P+sEFXA/F5kia2zy2BBkLdt2zO8/qhP
Rs/6iywIaeE3UYM5aMvRNfFrLrPgzup6Gwv8/YXUR6bLsljQ7WakVpbGQcMF
xD7xqzgPucZVj/ZykEXNu4SZHJxXeLtCNpGDkju8zQV5LEjV9Vt//zYHDfK+
D3zIx/nT4k05HOAg89+nkl7dwPljrtrG3cdBCXLLNj0uwH69ECPtco+DerUL
hm4XYf4UZ/ck4fVMrDecy7qN9xefebwc998pVqNl0h0W/B4KTVxxkYM++mzl
Hb2L/Xd9Ju059rvhUV7qgfu4b9OIS67hvJ5IDbPZVYr9pfo3Z3EAB3UViI8w
HrIg37Kn/gg+T3RqMtO3lGP/i5VXTIZzUFSHNlpXif3HY54h2eHzlFc+uvIx
CwjdRX++FHDQ6t+ki3I1LHjmE3Cejf1+RK7bdsETFlyZuKwfa81Bzdq+45N1
WB+XppIGzKeG9czloXoWvFp9RjfgBc4rK574toEF8ZV+G8ZxXpt8lL89f8EC
uc5ohWOWuB+OFmY/asJ6lbQoyVbgvkndaF/wigUlXSeulWXgvitomspsxvNk
ztRqa+L+rNmWG9+C5x0c1edhPf07+NTwNtx/4k9bfBo4qJZ35IdfBwuevDE6
0WfBQYKiPbzYLtzH9+ski2xxXgPo73PescAPtm7yeI31N9zUWNWN9xvveFZB
5aB9E5rlbz+ywJjArUzB+2U8kC6Y6GHBSMn69mPPMJ6QnxmSfTgPMvVR3ri/
vpgPnVozwIK4R7flL4nj/v3ZEoo4uL+VPt21xvraPq70duey4MIea9eVuP8P
HL3uEsZjwXXlpJKyb4Po8uYUYqoA65H05Jw+9vfzf+Hmd4R4nrd7ju9Kx/5+
5rWm6QsLbt+616HAG0SqpxhKnHGc97eu5gj7iUS2EJv/ivswY4mSKb7fBEto
fVeewvyfDO4e4w6i7GaZYdPv2O/nDSMv2GD+k2ff0mcw/95uXq8ecdAUk/vc
b5YFzF2Dvxnjg0hdvu1h7Bzmw/9Z5XcZDqK8rbqRM8+CDX5fxf6Wc1Bo5o30
qr84r8M7KsVEOCjP9VzcWxE2fL881X6cM4iaVSIPT4iyQb+/KfEdzsPM5717
JcXZ0KJv+7dYhYM0c5nOaxazwcT2Q+uSmkFE97S0Q5JsSP0dmdmF+yli9Zr1
7lJsKJHlkjs2ctCNYVmtMBk2zMpmDTTnDKK2wl8KqUvZkC6RO6aL55/zHxa9
I8+G6NDf0wRnDtI2aJ9qVGRDg0yN1VzSIGKNPx4aXMYGowxZk1Tsh+j7N7t+
/8eGzZIBf+JwPooOnW9QVmVDbp/Omdvxg6hrfVSZqRob5B5ePT26gIP+/vC+
Ttdgw6rfe4/vwP2qV+WY5reKDbISpSJ5KYPIJcoqNnY1G7Z5NUw8ez2IYmy0
Q3LWsGFOUWfXQXz/u/N3qVeVDhvOsReKO+UNou76OfZbXTb8UtbaVp4xiETj
eLYT+myw/d6i+no/BxmROkwljdigFG5wZMHjQeS2uEZzzTo2FP44IT7hO4hO
vS6QR6ZsSGtf8crEkYPuJ6UucF/PBqrTbpmh7kHUwzg6GbqBDWyjJF6l3SAS
l/PlnN/EhvJWLeUt2rhfulidxZZYj9gx27Dvg2hnhvWzRms8z/DA4i1Gg+jM
Np3Swc1smI5ryVefHERly+XzfyM2JCoT5iWxH/p7fqcqE9jg/sf8x541g0gy
hx9jSmTDgecXn6pXDiLz3Z3BdDIbbg3x7rLVOGi3Zq2nH4UNPruvyJXqDqJE
biErlsaGf4dXvVoWPYgqCi5ADp0N128lJv/S4CCOX7RJFZMNeryk0UMWg0ha
32/VWxbm72vAmhfEQWQxxpabcGJDmQstw1gR3w/v2YhIbmXDhArPt541iM4F
r/2m5cqGXrqmB2XZIKJd92pS3c6GiwVeF+Jw3ha/y7kqv4MNpZZr34elD6IX
4p9CJHZh/63cb2DdPIBiNilR/3mwoW7VpMTizEFks89x5YwnG2z8f9TXfxhE
v7ISf4x54fduXqe3jA+gipbGN1xvNnhVHnR0wvOF/BW53uPLhqEdu/vzhwaR
sYlNRKc/xtfdNLzBehB92RPOfBXABrp01Mx42QC6lV625ukBNmy8Jj6z8PYg
8m4cnysPwn4aUZ9lJA8izZ+6nSXBbNCW/05bljSA+nW9i26E4PVp82nqpEGU
5Z53LCuUDRErd8W74Ty5Jvc4XzjChkbHdW5bewfwfXOZfkIE5sum6szl1wOo
4ytL5EQUG07byog3Fw+iFM3k7rBoNoyO7VhhbYX5cn5ZcuA4zsPriiumuwfQ
otOicXtj2NBB8dyq4DmInlds3u4ei/M7MmxEPoH9PhKxjn2KDZbV6isjDgwg
G9VH4pR4Noi2FoUM/hlAsw5fP29JwH4gW/WGYT7Lj+mXbUjEftvS9ovdN4BC
7vskGCazoUf+0YFgnwFkzLnmoXWODbEd+XRG0CAaVeg1V01lg6beF+lk7Ici
4n9S8mlsGOxRjX9sMoC8jzhxFmewQTjRWdGuNohW3Uqp/JvJhjU7E092Bgyi
3k+vUn5cYsOLJPeGaf8BdEVKzHvsCsZrdOfCr/MDaNtmZMXNxu8ZF87x/AeR
wsEouZ4cnBfuxSpPwQBqv1bO78hjw8cT7Zs4awdQcte32pf5WJ85kTLD9YOI
ImaYXneDDe2s8W+vzXDeNvrtKy9gAy+4X35AawA1+F1HJUVsqE5rbqFifx2/
0rfsxm02/N2uQN3oOIis3ywfu3KHDYTUvk3CcMzXvHND6l2sR4vD3jTyAHpk
fP7ymfts4GZajQgsB9Ehz+ag46VsoJC0nD0mMV9p4qSwh2wgFRe7/6/i6o6n
8m3jijaVUmaSrIyK7HBfRKkkzlaS7NAQyUpEVghJMsqoSBSy109CZCbO4HCQ
SkIqK6v3fv98Puc+z31953WO9xYOGnsHoq7F5qD2ISbFYoWDns/4/rIpxf6z
THafkBlEtrKl7y3KzcGuMm5xnTIHSVj8TjWrxP727b1h6MNB7Aglj2PVON8f
uQRC9+P9VOV0Qu8/c3j22tljDeaLPJkpofYW+yeMVdQmyUHbJDizCu/M4fKv
DAV3PtzP5iJtkg3mwN82kxHwh4MigsiZwu/NQcSicN5iJwcdK47x3tpsDrHy
TjfEXnEQz7eW0+tazIFHO4K7QGAQ1Qqtk1lpxf1ZI+L6/hQH3TxhsDTdjvu7
yNnpIn7W9rvZ9aPTHJwO+iQf4R1Es3ll2cNd2I+b7ij3ZXLQG84ff1a3ORTx
u0nJ7OEg45rwRwt0c5hpxsEYxPhSdheJsjAfc3bscqzHVd/idp0+7Kd6ShCf
DJ7nzMnv5/px/9gpl5tWc1Ci5hD3LY45jKwbP/ynh4MUBW+Ipw1hf9R2voxT
4aDaGV6tt5/NIaTh2OUzjzmI1J1BHP6C+XFdgZ0sDhot1LzMPWoO5CPle1QM
Ocgvtj1MaswcrjPLq+PvcNDWq3aZRuPmsMpF6NLzbg56arpQ7TCJ96m/rJEC
jYM0lWKYoVPmEPXiyCNrDw5q3STzJ/u3OTgEFQQt4jxbj1XyfZg2h1ch65Qr
XThouslc7sesOcglaE+a4eewrG8GvH/NYYPoT61tlRwkFnLznNIizvOzrUcs
/Tgo3267l+kyzqftyTY5Zw4yPPIi7so/c3j653uZUQ4HMfegvJhVBAhAoff5
wjjIlavnfQE3AZ512jj0X+EgLo7zcNcaAuxw1UzhS+Kg+Gqu5T/rCKBlrXXy
dhQHyaUkCO7YSIACXnWFAuyvKh9FFXVeAszcNJWqjOQgM4s6E+pmAjx2kVHX
xc8jGjRHr60EaCgbnLfD93ntnAx8tI0A5E9mroeCOYh3JiilQoAAIS8OLaXh
57RPwqV9Owmgptbj45jAQaqFrz8uCREAlr9+ehvIwf8HjcZ3iRJgvv9ZRj/O
l+WVvrVoFwGCc3yEdmRw0NQptz3Wu/FzMrN7AesRrLhOJ3APAQjvSsLfOXKQ
0KZUSsZeAvDfSP+45gUH5X5XcXsnjechHe5Nj+EgaGq6OyJLAFPV06FxFA7q
fm71fI08AUzSOkRO4PNOd6ZrZRQJULi3uSwnjYOWbCP6ju0nwMe+LwfKcb5j
DCRmnQ4S4PI4z5O0dA6S2lOyNUIF49fLPWxexEFl/04qvFQlwJjbx+gIbQ4y
GRgyalUngOd44YensRw0WHXDekKTADYJ90ZVsB+uJ/P5bj5MgAeOnPY1qhy0
0SfzwQFdAuhED2xheXPQY5pWvhnC83tl897G+0FFo+ODmz4BnI4sUp7i8407
7L/EHSFAq/rdiodnOejM9MK/N0YEMIobNjb9wUGTXTEiPccI0EWI7ZDT5aDb
BTJqs8cxP4P7pOc1OWhnTNVpQRM8v/Xy0/e/OSjnMsFZ05QAy53l2qE4v3qn
RoMtzDBfESllCQIc1KXg/8SHQIBf9iNvI6Y4yGGjQEUyiQCJWS1S/XYctDD6
oruKQgCLv6/5TX8NoOj36Gc/jQATz0e4fw5zkOTzng3/zmC+d/9n4Ir1Lgl2
kZI4R4B6NZ/rfz8OIHaXufSu8wQ4w7/eXraMg1bt0ZQRuUCAE4slzgMNHCRz
RVxW0BbrPWVkXtgwgEyqeeQE7LG/nF5EqON53Tb9kON3JIBKvsTxv3ifJVh8
3Lf5IsYrXNZQPj+AqrJK5Te5EOD3bpclY/YAGppJVVh/iQBcEY/6RzH+tYbB
imuuEKBa5wyPhwXujzhnpdVuBOjMrJEyjx1A5oNm+/9dI4Bkj/W31lQO8tyv
cWDJgwDlCtY+ZTUclOK36+BfTwK4PXl3lxQxgN5+4Fae9SJAxZUn4d3CHPRV
aEz5jw++b7Rpn/oszodjp8qUHwHYa49/S24ZQCrFJYcm/AmwfluB49+HA4jK
nao6FkCAU7+F1aSx/n7mQWrfbhNgq63VlorDHJTx5KL6SDABEiop1cXGA+j9
xGmNoRAC9ESmqI3ivI8fVtccCCNAlAdNaCkb93+EmFZfBAGENSh7+/B5DeZq
bWYkxue7/PsefQBZynzX7okmgLLoH6v4PuwXj47DXTEEOOqtwGeD58mqK9bp
iCPAB3Wydif+fuvWFN3WeALoboo93JzPQb+tbus1J2C9a855OmznIME8J9SY
iPN+SOHM2b/9SGfRFN4l/T9Pq0+cP8BBNsfV9GtTCCDfRhvcjPsh7KGoQfVj
/P7VqgHqqwdQ3pdVRyrScB7Dp/KD7wzg3/ujR0ozcJ+tujZ0FO+j+cB2w6Kn
BIjzIzxNsRxAuzqLjAqeE2DQUCbB+Vc/MhBPPvoqG/t/rK7D4xrOt2vgsZc5
BGgc/cv9ZXAARVU4GmfnEuCiclpw0bN+VLje9PizVwRYdWaVDYkzgJgU1RMZ
+QRIGjgv0GnGQctPRU4+KSTAF9ESGYuyfiT5h8skpQjPN7w/pUp+ABnrfzN5
VILn4WdVWF3loEv32k4llBFg6mCScYfYAIrrf2N6v4IAfFnBtewH/ahMIel0
TBUB7njIP/wkxUH93gFmUTUE+Pr1tlHlswG0usnBPKKWAAtdu5kG5v1Ibucp
Qmgd9ntbd11l8AA6ZXeIGFyP85bzptKPH/8+KxQmBTYSQCkz9Avf5X6UyMVF
9m/C+nT9snrQ0o+qTb+SfT8Q4K+AuLybNAcNp7RSvFrxPGLqa8x7+9H6H4XU
6+0E0Davz912uB8paT2iXeskQJpV4KtvrQOIEHrL4koX9kegx+8zdgPIq8f+
jGs39muFeYggVz9K3Wty9iId58vzJb+D9ACqc1OxdGBi/vlf85g0D6DR/4TO
2fbivu8Iak2W6Ud8m/+ds2YTIH6mn/r2Uj/+PRNtRxzA7wt4+jy7cwDlrBN3
OTpIgO+XS7we5/Qjr+A8N61hAjyy9nOX7GOjo6t0vRRHCPAq32L4N3EACfi3
+u/+ivUxejWrf3wADS+cvbNtlAA+kuduXK1no/wbP+6uGcPzVBz7nhzaj/yn
feLmfxCAeTzV694D3CduGx/9mCBA3nk/7zuy/Uhk8tGTgZ+4b6L/jch/YqNR
533PP/4iwJBnNt9R8gAq+VaWW/8H67fnW+XNxn4UbGf8pnQG949WyQ6LEDYi
DDHKc+YI4BXORRTF/pKwcqxN/UuAjVG759z1BtBk72xjzCIB8q0kHVEZG1VR
Q9qClgmw9s+7Bw+H2Ciie0e35z/sV94LK1G6A4hm/qz34ioiFJ10nr95pB/J
tKsOWXITwWwVxe6iIxtNn6j/dnoNEZY/H7jmUdmP6t4TJw3WEUFgrs1f+lM/
ijH8PK22gQgB/rueNtuxkdXba4tym4jwK94qe3CZjRT1Vq8W4yOCB1ugr37j
AFqoiF2/ZQsRnvGH6m5tY6MmjT1bVvMTwe1YbFok/n5CUf6OmW1ESGo1sDV5
24/slEFsVIAIGXuHxPaf70cqrzok+3YSgUzI96k5yEZcCuf3tQsRgW/XyvXH
u/pRe9bkgbciRGBKehqG1vajFCl/9SIxIli8HfnP8BIbOafz6WaJE6G1qtx7
6w020hRPPZIkQYSJu8rWi/n9aG2y4okoSSL8Vr7UpPuTjboFq8wCpIiQWMQ6
flqUjTLiT1LdZYjg+Y+PFK7ej67y951zkCPCin7xHQ3HfqQX7WxnIU+EKZ1N
H3fIsxHvpgVnE0UiNF0SZL5/wEa9oeFuaD/G9yIqazK8H2XzCHupHCSCyoLN
n5hoNvIMzPaXViHCQeWQTT272chwReOOkCoRCjwt9DOgH23zfX93kzoRwm7a
8fdv6EeDc5S4FQ2MPzerafsaNnrt8TXxlxYRTghdSkovYSP/X9efjBwmwtel
koLHZv3I5PKa5wxdImwYfBMsasRGIj/icz8gIjw4MaJVp4796Cj1plqfCKyT
pkc5Gv2oZORNef4RIqzvLAt+9IaNgi8cqc00wvy2+fG/X+xDhIGuxoRjRAgf
e5Xh28lGEmdt2sKPYzxm5aoqfP1okvHrk99JItBoE2uqd2I/kgJ7r5wigtHk
QSabgv34ceuQzWkiXD16beKTWD+imaZ9I5sT4dV4V2s41kum5cCkMZEIcgKe
klfWYz8e+2/6MJkIqUP77n5is1FdvenifioR/18XSnNqZqMY/YFVkhZE2C8v
8/AINxupuzSZoLNEePGye59FBBv1xRc+tDxHhG7X1qsnRtgooCZl2Ps8Eay5
h/ft24HvGw1ReniBCGcGmy1qLrBRK7+bV5Et9itLs7xymI3cDp9999GeCLdz
fYqREhvttDfa/NORCLm/W1t79TG+6AMWvM5EmE/M/8fNYCObMuGn+1yJ0Ckx
klpzjI3WDXP/PHqZCKNXTvoSFdkod9Oklt1VImi/HBRxf4fzrcYMDrxGBCff
lH1z1mw0b1XX8dgD5693c2HUHjZKDcsVqfLE+hW/u3ngJRsZFCbYs7yIsPnZ
y8bq61i/voD8WR8i8H+xqn8nwUbRa1wWt98kQr040aYglo0OHSAfVb5FBJne
A+TOIDZi0lCsaSAR75sn/HJy2C+397FdgoiQfie+6KgPG0nlbpcNv4P9/7Ly
oSjmr7ln2e15KPb3V6Mv4mpsdPnft6p34URQK/ATfY37QmBf17qhu0RYeJ83
3hLGRhWEKsJKFBHoiq38CYZsdN7veapoDBHKz2W2vT/LRjzPY0Y144jw4bRt
qXogG+V0+ByixOPvX22/60BkI7O/dv7uCdi/RTXTZ6lsNCN5ujkmkQgV4ioL
yRhvkomWwKskIlyMVswptWIj8Nx7viWFCF6nRLftOsNGX5/w5Yw+JkK8t/bm
Gic2uts8N70mHc97h1Ntj/vm4J8htDeTCG0k95FXNmxEF2uNgGdEkLA2J3ic
YyO/oyU957Jw/9gotJnZstGeq2kSvi9wvjiz6h2X2ajxUYRL4ksiPG0T4Bhj
P7u+8ygpziNCl+yC8U2Mb9uE1apPrzGeC/fcM3zZqHTncZOpAiLoUxvChMls
ZAmHHvIVYb3viy7ym7LRauddw/IlRHjUUMLPj/s++/46JeMyIixd77ftxnhO
Vf+6YV9BhF6TePn9umz0+2tf3e0qIgjtOULaf5eNErc28qXVEKHsfcN1KtZD
TzufVl1LBCWV6+mxCmz02TYps7cO45uwzMjB+oRFBU/O1eN5zv8dt/Fmo/2l
l7V2vCfCjhrXOQ0x3H+DtGCVZtxHXJvd1G6ykffGIx2nWzAf19uJL3Bfiasq
iVxqw/2WY5w2y89G9ecE7SM6iLCtOrn5DebbOXRVftZHIhTPmRpsfMpGWwp+
LNR/IkJjU8iw4BY2KurtMRruwecVmMkEEzY6w1Mb849BBGelV7Gjxbjf9+f0
ifUSgdJNbtyA8/mMGi+jzSbCCOE10wX364lAfzfqABHifvB0J9Sy0VSOU5XH
IObTkuMmL8VGsoaZE5eGiTDNLLabxH1l1d8v7jhChK3N3Mf/32fxnkJm1l/x
vnox/4DtwkYtW4iBFqNEOCU67jnzsQ+tfhFVSBjDfd/xO7TfDe8Lg6bPJ8ex
/xQ/W9kVsNGVvtU7jCaxPkZbntr096HnHrpH9aawHhyLqM3b2aifz+uGxm/8
LC5/U7IV5yOrMPvgNO6Th7R85i42OgkTrH2zuB+O+f+XXtuHbrNkN+2dx3k7
5ERYyGSj8ms2OmILRIg45O0r6YXxbUq9tGMJ+21yk7tAWh+SecZ4vHmFCPDT
wSXagI3O6W3rXMdFgtzKecqXaoyPYbJq1WoSgOBJ0811fejD1VCVBW4SuPIa
hAl39qFVG+ts/6whgUjesQoS7h/NzKX48XUkuFA+78QngvHpaDR+2UCCbbXX
gn7cxPh63OYGNpEgoG3VwircD/2Xc+WYfCTIM/0hs/YWxrf+m8XHLSTwnpIR
nr/ch06m77n7gR9/3mGVf3cJ49O2rHq3nQTHi2KPvilno7JPCRNVO0jQ8ynp
9cacPvTT9aN4iSAJYq175fcFYHxrec1eC5PAXoI7i5aO8/LkaGC2KAm0NJ1i
1bEf7msGFqbvIsHKv/C6U5oY38fKz0m7SWDmdFHuNt5nq1xmBeL3kGD/K1XH
LTh/mjzKR6P24s892qKqoA9dTnW5ESKN8XTM9rU/7UPP1J9n35LFfOhIupPS
2IjdMcjy2keC2qubt+nG96FtF0U3XVPA99fX3Lm6rw8dX03RcVEiwaRAqNd7
e7xPkmMu2R0gwXohhxsxm3DeVVsen1MmwUGXEjnCdC+abFvTSTlEAvXDVIE5
7BdpR1hlpkaCZzEM9xmcV0suX5XjGiRg8r426tvZh+4/KrY10CLBTFgwBBtg
fCpT8YcPk2B0Iu/2gas4H63yjaq6JEjKGBbhv9WHNOzt55QQCRJDiwzudPWi
yytP5GT1SeDJbajfhf349GGvhcQREsS58b9t+duH+g7uuCtsRALzU/mN7OJe
tO3D6aptx/D8Q7fue93A+GwjJjYdJ0GrpsR22yMY31K9+JqTWE8vx32bf/ei
0gf/Tq+YkECtJ+1uVD/Gt187cM6UBF/BV6AG51O6yaNwyowEC0VE/ianPmR5
4fXn7wQS+OS4CBsH9qK4he8Cn0kkGC5+WeZU0Iea70sdZVNIQBASu/0Q88Ol
dP5GDw0/H41/XX2rF6k3PspuP0OCmLfdocqb+tCl892s95YkMMoSJxjyYXzz
mze9tcL+essZpWH8hXpPA0asSaDXMdSw/X4vqg3Wml1nS4JV8dmWyVN9qP1D
u4uCPQk2Zoekroz2ov6tdkOmjiT4MES0szvfi8YpfynXLpJgZ9iJYqP3fWgh
Jbr1gQsJHNb3b/i3qg+t/7zXoPwS1ut70mi0ai/aua+8lH2FBNcPbyg1xH6R
umKqxHWNBHVWij3jIn34//jnjL0eJGDPcKRubu9FsOgldMyTBDZ/E4qzLfrQ
af3N0c5eJAh+Wp99TBn3VWgmd7QPCXh6s2wfLrGQa5umd4EfCVK1br2YEe5D
PtvbJ7v9SbCm1Pzsc+yPMAtbu/kAEtjtTg7r+MlCCU/mWaJBJKg6uTT+ldGL
nn6JOo3uYP5P98dMmvShQoW9DTaheN6gqudp4yz01q1MOyScBMp+O3frJfSi
ztJT+S/ukiDctULP37QPDSwPS7dF4Xk/qcYL/mah8SNeyVP3SCCU3KR8n9qL
FsL5+AXiSFDs5WNjehTz05kRohGP8es+vDG0wkI7d2ounUkgwQNuorOMeC+S
smxz80/E+j7fJrhdtQ8dyrD5lp5EAutzMmvN+HuRweicZUMKCVSajI0//GAh
s/1RXaOPSRB1VvcgEsL8eEga86aT4Hb5fIWzbC9yrSitPpBJgo87eW4z3rKQ
D9epQ8RnOF/t7ibTf3pR2NHhbM8s7AdpzXY+1IsSIm+IJ73AeTSJ3i6ZzkLP
unjjq19i/upDW8ebelGRUMaGoTwSOK11SeCm9KI6K41bPPkkSJvwfsIVwUKd
T1unZQtJIBP8sdj0US8aGLvgfLKIBLqpfQnyztg/B+c4l0tI8OrkZDrVj4UW
PCPJcWU4b1MhyR6OvWh99Z6W4goSdNbM6D737kWC3KXAqiJB9dkxTvINFpI5
blKyVIP5PDik91atF6neG1KQeEuCwNe7ZbmCMD89nulH3mH+TX27OD6YH1Fe
QccG3EefPjleXduLrC6kR0a8J4Hqo9yAo3cwP1nqq181k+D3yrGBz8GYn4mW
Gx9bcN41aCuufSwUfujCxHQbCc7IyZfLBPSiRO9ZG6FO7H+Ph1m74lno+X93
mYe7sD99binolbBQ0Zo9pue7SZDvYZD1wx3zc7Lk3W06CfybpMhtzzE/sSe1
njOxPmTPzr8PWYjDGHzV3Iv9G/XvzeULuC92eUpNsPGzvnW8aCULLdluStrK
wXq5BhVqB7LQxpy0LapDWJ9opiPPiV4kNKV2h/oZ8/uDY32wA/Oj3rLg8wXz
cW7zhNw1FlLzs776+BsJwiRkhwkHMP9Tj3+Ufsf9J2atavWFhTLs+x0+/sD9
1dOvnOTEQha9osNjEyT8+7ecrLuxF209feYczxQJ5HPjeceXWej9u0Tmrt8k
6L9mEtN/kYX8NRlEjWkSDO65tJVvBN+Xt6PDbBbj8+Az3MmH79tDOuE8TwLS
MN/9zOsslJkQ1xC0QILnY889zLEfz2z6CKlL2A+EByE3sL/5A7ZUlayQ4Kh+
W+ODMBZqmj6l0clFBonjEBTzjIVuXYws/L6aDA612y/e24T7b+CDEvcaMiTp
fpVresxCE4QNL8TWkUHutXzT7zgWevr+mJT6BjK8KLiSGYTnP6sT8uT0JjII
n7/9V7+IhbYV1Itc5CODWuohUVns32Zp7oTbW8hAS9zKeTDGQgFJ+vwp/GTY
fPaSfWIDC2lsCYgs3k4GSxeC+WV8fjKoZl3HDjJEnzXT96PjvMwv3R4VJEMT
43zytU4Wsrx0eGWVCBno8SZznbEstH3Y21tUjAyqggMORfUs9IFSNq0qTgaV
X7Iunz+xUGDL7BVTCTJs3PWr8kYqC2mC2g9HSTKkPsko/VXKQj+L3B0Cpcig
acXvdAe///m+wqEkGTKQvh+QEsphoXOPpyyL5Mgwxj13vq6AhQS2H2C2yePn
2P2bDZtYqCX0EvGbIhnSveb0/TD+20sv27kOkIH1vkbDoZCFtNzGjosok4F3
e0LXl2oWmvoi13DoEBny/E4n7KxgoawzjnBKjQwV2YtJH8pYyKrjWaWDBhm8
39oL3sTv22E4oh6gRYZLl/n0b5SzUGuZZOGjw2QIYU7MltaxUJDSBaU3unj+
PrPAnlcspJ3xJLsVkSFmNuhNNL7/186BvV/1ybDzdkjHgTYWyr4r9uTfETLo
bLEs+4nPn+c6KyJ8lAwD4dMab3Cedl5/9EDFmAymB7nCvnWzUNt3xlaTE2T8
f8knPquYhYKtdkbam5BhZHpoyTKRhQ5/Iq27ZUqGxC6XdA7W6/ex+7cTzchw
wSDuTCie70XVx+UCAp7nc6xONtbXWnmrdwuJDB/qJR6u/shCgs9Np0coZDjX
pcBbjfVqF4m6skIjw7hYZldjAAvdudcyJniWDMZ/qCXJ+H06PBsdlM+RQSuS
vmL0lYX+eBkPnThPhowtbzs8b7JQzkSIpd0F7O8nl3Ujclnogk0D46YtGU71
yMpRZ1lIiMFNfGhPhqvh0iEht1mo46RBe74jGfRcuYUUsJ9CagOOf7hIBg8/
oaJf//B9av/Vf3YhQ/b43oibMfi+F8to+RIZvETItXPu+PPoyPTfV8gg00Q4
ELeA+bkmyj3qhvPix/p4oQbrRcmx63cnQ0Hlend7M+yfw1qNXdfJoGQaxzBq
xn7e3STbdIMMTwVKiGfnsN+5qeHV3ni+Hlv9RRrOw7cvY4W+ZPA/I9fo589C
6q0eJtk3sb/sUlO6eHuRfz73q9RbZJD+K5prHc1CjfFxW+4H4vkYntUWiIU2
e+9xCwvC/G5P5+L9zkLUc/ldN++Q4XLEz5BZBgul6SNV91AyCBgoU9wVWWhU
uv2BUzgZfj+2NDyF+/TgxnNz5+5ivvvcxKRxP3hN/qARo8jQMPczddychWq7
fCqM75Hh5gPr8lw9FlpfukFML5YMuvYGyG51LzJLTrx56D4ZVrlFBxLTWOjR
LVmO3APMb+GOC/obWWjYtgTEH2K9v2tb+mL/yxsbZWx/hO9fW1WrOMlC1xS7
uTckkyF8vV0qeTsLVWy1tV9JwXrl3Pu54zQLrZ751fjnMRm0/aOibm/oRSdY
AXLf08iQYjdSq0JlobjqLREDGdi/fROLC/NM1Jf++Menp3g+vdrmtUwWkgpR
OtX8nAxfuX4+fIjz5upc9aommwyNMiYjqv1MVGR6cmtRDtavusHqsSveHyq9
bi9yMb95dk++TbOQoeDFT49fkeFgG39R7DoWilycU43PJ0POUOhuyiITdXNC
EsILcb7LGyqzMP+76nfM+xeR4a/MwNq1dizkkP3UwqOEDJENta9/ljLRq8hD
lRfLcF4aDtYVYT1nr9aJna/Afdp67tLLWhbSI5v7k6rI4Hbxn3d8NROFaA1y
jteQ4VfYjLHzFpyfXVf0US0Zvl/I4vk9hPO8eiVDtY4M/d4X7qfj+c5/jeSR
r8fPqVX7hLKZKPuDqMPuRuzXSGl/uxe4n17lvBdoIsPSqprN1ldxX97X2rfx
A85P9fmZG0FMFHCjKeJfCxmGpO5qB+3H++QsdXy6Dfsx7XmSEO6zrfD11FgH
GYZzjwv05jIRTer6a85HMlgb1GzIy2Oi9PU8/D2fyMAfJ3FkRz4LjY3HXfvQ
Q4Y2gra//WYWUvm4p/s/Bhm4Kl6ER59nIp/ifLViFhlOSJE5Q6dYqO4RepjT
h/tgV+iNaryPN/q3zz/pJ8OsdGFtBT5PsDl35gEH52vbz+iFd0yUdHS8MmKI
DINtJ8IuPGKhz/K+uwI+4/s/78uvx/gVt2y8df0L7rsn+X6hRCby+JM46PyN
DBd1ba59sWahKoasgfV3MtiUSNloCbAQT1VJJvkH1ue1oPhZOSaSOpV2/PoE
5otBcz+9xESGA+E/43/ifus5O71an4Xsrrg/KPqF+SYF/8zbw0RBXOcOd/8h
Q1GNYt7BGibKiD069GeGDGuTXtgancT4JA+Gbp/H+fhP55miNBMNvxFWOrRA
BvL4tifTAUy02oj7E2EJ+3n7McXNJ1hIkj7udW2FDGUntL4+UWYiA0e6eBwX
BXgmDffNHGMim/n/6gtWU+CSWWfTTh28D8NfOH/koYBOrlGlmhETpYnc3/pr
LQWs1KNokzuYqPalX8nWDRR48EhN2GoPCw3qOFge3ESB9vedBaHnmIir/fRq
Mz4KrFcouTs4zkAS57Wyr2yhwGO3/UlS2O8wJWl6j58CX9t+iZXfYCLrQN7p
V9spwE45eXpNOwPd2jb7qH0HBfbVKXW+a2Gix5kcNClIAaFiWbWsGCaqUW3+
widCgQkR79m+cgYaaCi8qyRGgZunq35dSGCiFUqK8ilxCqhHfR6Wf8ZE4qN3
GK4SFBhD708b5jOQnveVm5GSFDBxXG4NtGIiq40We3OlKNDQ5bDNvZCJbiYb
NLfIUGCbvWlRFD6foqh45YccBb6Mk5iJskxUVb1jxyYFCvyVEn15voSJ2Kb/
KuSVKHDxzB3NQDzPEmfU+sQBzI8eX0/lNAOJuXWtdVbG/CpqNta9ZiKd1VW5
4YcosJJcJHmlmYEs7z8jvFCjQMBTjrFlEwP5St2bb9KgwKMAqW0Rj7E/i70e
j2pRwNzC/r7mAANVHLUxXK9DgZhqOyfFpwzUyzg5JqtHgRmfUde3OH8LTmox
xwDzUVO323aGgUQWxNUdDShQJhV4UiacgbTvrmeHGFJA5ECe04ULTHRG7Hfg
86MUUIndXHuUl4m88/pkG40pkHH7ie6jGwyUqNfQ9uUE1vfWJWkebSYq63jl
vuYUBXzu3Pl4XIKJmNaJwtKnKRCcu60DXWGg+V+B/xmaYz6jeLfGbGUioSAX
ezsiBTYc8GDvOcBEmgLkTcFkCoz84+Sdxedpz/QKMqkUiCeMSLK+MdANdTnq
OwsKTIdFXxbRYKKE9/zLw2cpsNxX9KPOk4FKaIsZq60ocGLX59fUOgaifx8x
lrSmgJHyvlcn8flZn/ZJfRsKmE64cn8PYqCdvGXxF+wokPifqv+/dAZSS03X
DnSgAMnkyeE8PA9p/93BNCf8fO/sr+l4BvL4zyOk1pkCdd+e/pUOY6B4MyvF
QVcKiNlEC23B+SwaOtb17zIFzk39+t6bxUDd15S9drtRYK2vZ+et6wz0h1tU
HLlT4LbRm9lZzOdTHnKO9nWMpzrJ5EIjA1HW3FNXv0GBD7WGZhQ7Blq3trlO
2Rvn6+Wu3Uq9DFS2lvu0ki/Wy+zVQNIvBrq4TrdP7iYF/HzK5EsvYz3X33CU
ukWB4sPT/a1pDNSyvuDP7kAKVNg/Nr+/wkB+G37cEg2iQD898Xl3HAMpbZTm
FbxDAcW2qLdVWM+BjecTt4VSIM1XdFPIdwa6t+mR1OZwCuyo2rYsWcNAwPsp
f8NdnI8aXVTvzEC/ePl010RRQO/aj8z6/xgog+9YM9c9Chhoz2yRZjMQcXMg
eSmGAhdcj90Q9WYgni2VQ3NxFLh+782xLw8YqHjLzKU/8Xj+q1cy7QcZyGHr
gYXJBMzf8W3Sww8ZSJD/YshYIsazxWPvYT8GauLP3PY1iQJhAYmc160M5L2t
//FQCgVG71kHM0oYSH67oEL/Ywos5BTGjHkxUN9281JmGgWy9/H1HnjFQJEC
d490Z1Dgme5D0n/vGUh3R0NHx1MKlOt8C6SHMtDkjn9nW55TYFVoyeUzWO8n
O7VGG7MpoJTrTghtYCAzQXePuhycX6ZR2s9UBlollMdVk0uBFIn3NDr2Q6HQ
t8jyV5hvqb1c48UMZCu8R7g4H/dV5KDHML5fQOTss/xCChgu1vhZRTJQg8gD
5dwiCiSst2JZ4rx6inZUZ5XgPpm0TY96w0CyYhtOZJZR4JdJ4dT+RAZiih2h
P66gQG2AY71/EgOF77ppk1SF/fnQd+uVPJxf8dLJBzWYn3riXFgGA/0Q/+UT
W4v5vP3loW4y7qvdCuui6iiQ80vh+xV83ykJ+/th9bg/z9nOpuLnFYknu4Mb
8f22O5ia+Puv97Be3mqigAw5dt8k9pO15HZN3w+YH/1gmVePGYh/76l6z1Y8
n8abnTux3+v2hppda6fA0jG9hSPPGchd6i37Uifmuzyy6xLWU0p60eliF/ZP
5XGeQ5kM1COtNmPXTYHn5GOyz3CfhshcCbSmU+C7mmKfIj6vIfuCz5KJ57Es
7I1MYKBR2c+PqL1YT4fvkfKlDPRIbpcMkY35binUU8DznthHLTQdoEBRqkY4
GeuxuC9W78QgBYZPr7F3KWCgXPmWD0bDuF/d787KYX3OKayh6o9QwOzdW8+y
2wy0WRF91vmK++7qYmUN1vc/Re8rmqMU2HVSSr4L639V6c3ioTEKuOZdK+vA
+u3ZPxF6YJwCQ7nfEh/iPunaLyugMEmB9IBRs//7K/jAhTSZKQpIcSph+Rnu
l4PJipK/KXAtKfTBJO636PP+NduncT+fb618WYjxRV8wWzNLAeeDyZX9uA8M
agyHZ+co0DZtblTihvWbkPUY/Yv7o681jIPxzYptWtu7SIG3VZ571RgMdNpk
8mHLMgXm39+i349hoGzfj/uq/1GgtX+/m7ktA61+WVT5ahUVHrdoUGvf4f3S
+/BUGjcVZCp/fziH812ywZcTu4YKjcTkdjULBtqqZeUWtI4KanZPJBZjcd84
6XNf30AFy4+ZHjP9WO+HUg8cNlGhbEpnP78H3mfv18nS+KgQSy+jNVpiP8+O
lR3fQoWKL4bsV90M1CndfuIwPxUe+ZrO8bzAeSUXsBW3UyHAcGO0sAHmKzj+
svgOKgydvq9Yjf028OYG11ZBKhRXnc3YzcJ++HwmbpUw/vzhy12KBAaK2aYn
9UeECvqn/5r7nGOgMf09JSNiVDiT820mGPeJoRuPMV2cCpeMPVw7cL4fp31j
vZeggpNXkv+jA3gfdXxwKZekQsjAnJ4g5p/wL285R4oKQlcj3Ldg/nP3x95L
kaHCg9B+MX58fo2Vx55oOSp41Z4bO2jPQFZR1De35KmQnx0TazqM+7lK28hN
kQobZj8usfA828Z3MWz2U8H0pjNxYi8DuYquukg6SIWYqNDForcM1HhiZMFI
hQpbUzevu4PzJ+HzPlJDlQo993x9P2xmIJ8XOeL71KlA8M07KHeNgT4xo/JF
NKngOT9nKk9nIMX1bga82lS4HMVszMDzhWiQupcP4/kyX4Wv7GagQQcNh5+6
VMj4a16U8gH3Q4LI/CCign/Y+f1deF/GNyyHd+lTwf7Pa1LQNB1NTg+K1h+h
winpcJkDgQxkLFWfV2xEhXo5NSahgoHSiVko6xgVujhOPYurGGjhdsTHxONY
T5/KUROMj1R4yTbiJBW6ay5flce/V14Nmc34nqJCzs6dnwj6DLSeXzX00mkq
TIXSGiWG6cgGBIXPm1NhtFn92fpoBqq6spBjRqTCZqm2xYJ7eD8/6dcxIFOh
3eEBz2YWHV1pr20/RMXf9+5LX1HA+2A501raggpytQrFSrgPJJVCf+88i+ez
6aKe24D3naVz8PpzVLje3bDzAJOO6HdP7Vywwn5AOamSuN8PVh7M/mFNhds9
Y7RK7Pfwse3a/TZU4A+5OVVVSkfDwnMt7XbYvzWd7iIaDKRzvPdcrQOe95B0
UBPuowSv6p8FTlQYD+XV4e+mo6mstMBMZyoUlC4Ec9Pp6AQjaPsDVyqsZfzn
EILxZK51fBZyGfvrTXfNw13498HwU9+Mq1RQV+Z5dSaTjtb+N2xec40KF9bs
Ux6+gP2eLCHX60GFvw2NI/fUGcjphtXKjCcVlG7LrtsVR0ePiCnd/N54vk7H
k+OqDPThQG+Oki8VbO7qdoydxP23SSjw+E38bHxmqTSCjhRHyVT7W1TojFrW
EefB/Vd/XykwkAq6mrYPGBh/dNpH7tQgnG+BSLe6SDqq9dvSW3aHChPqaptK
P9HRL9qp/O5QjNfR+LcG9rek2t2QqXAq6O1eKtR6SEck/mZL3kgqWPfLOntk
0dGdibWH5KLx+Ygnx7VIuF+aDTcYxlBhNqrlP59sOvr27DbnfBwVxD+mJEjc
piOh27XFvvFU2Mk4yVWjh/vcauXuwwQqXBVAX5Rq6MhXW8fmTSLOq3XBpav2
dJS700ezI4kKDf+VarqI4774Xbr5RwoV3vbe0j7VQ0dbOmZG1j7B8x0J2rCX
QEfw8lClZDoVDt6rbTWfpSO3ULdYvUwqHKevNrYZo6MM29eOZ55RQTpM/pqG
MR19QhO6nllUWMWMGCV/oCMeMQWBuBdU0Ar5Ofv7Lx2pzTuN5b3E/WAas3Hv
MTpy6H5e25xHhZW+P/4+j+koMX8k4ctr7AdhnbzNOC/NkZKXVhVSAYbrg3+d
ouPf49ZHdhVRITtO9qqWJ9bH6LGwVgkVerUDH3GW6ejcHvZPUhkVdM7yHdQ9
S0fRy8KNVyuooPJOlrmLREf/sagpkVVUYCfvCdo4hf1X/OBadg0Vwpv9Lotc
oqM9cZ+M62up0EbJ483VoiPCZf7dg3W4P52ddSpwHoJOnJ5ZrMd9f7LlsXAg
HRXJRLUIvqdCGreitp8sHX1d3ZJ+qBnPF5irYlVBR4Kc9V6nW3B/jSRtdomn
I+PKo6YubVSIs9RJ99xFRz4Pg6VCO6hw7eWGTIVEOnrpXreQ8ZEKy80vuJSe
0hH7NNfHmk94Pyhmvd0mSkd8inpZvT34eXYp1Pc6Hemt97s5y6ACjWA1NZhH
R1dHyonbeqngrFE767GbjtJr5/btZ1MhmFXfich01JWixnVigAp8YwLTg6+x
Pt7udPtBKvCe6H9xaR/Wh1yQGziM9e4cz3uN8Tso/7ydOoLz7luh++IFHT3k
U7Io/4r7yuu/TDcNOmr67nygZxT32e/YdzJSdPS3IXvNrzEqjLmNBv9IpiP5
jK99vBN437TZ9iVivc/6SxXK/aTCcNp/zho76CjyjE2Y4S8q1CVvnrUNo6Ma
9TQr6z9UsBOqbSmi0tHPbQOqfjNUGLFR2NHPS0eFVq6/3OeoEFknUdB1kY48
chbyXP7ifm5z93jrQUfqs2HOtotUWE8rvuC9Fc+jLyh7dpkKX3f3/LbAeKqi
nn0m/KOCkXms4hecH3/WobQTq2hwp0NM01wB+126ztKAmwYpJg83ye2kI243
M2HtNfj5ltwhBTc6aqwa6FFeR4PCk4Fi0afpKGz9pbh9G2gQsly5q3Aj7i/S
oumeTTQwEVDm9T+J9UoL3yTMRwPzfxtbSvG8nT8Em7ZuoYH67Ej5a/z+OI3n
wev5abBidizZRQb3QZCqPtd2GtjNWqp4u2D/dNQtzwnQQLt89/UZZTrqFTGv
+LmTBvVcR0s389NRigPH85sQDXQ2lkm2YX2tCi8d4ojQYPjI6LEVnJc9K4s/
6WJ4nlVLBsqYj5HjEbnt4jS4pp3q9FGdjp4/ELrYKEEDp/6Zvg6cF6eh59I1
kjSoc883PyBBRwpKasPFUjSIzN1BMRDH+87r3eM8GRrkB1PsXfB9+fXmZ5/J
0cDTpEVECfvh2tZBwVR5GnRraXs3C2A/WV7ujlekAfPegQ3H9OloPmspJnI/
DUruFjln4L6o+BNxKvggDeJKU3a9FKEjPyS80U+FBtWcy4OrFOkI3c1qdFel
QbSsqo+yCR2tZqgFuajTwJqVcq8B+7Vesh7ZatKgiqR5Ngz7PeQyYemMNg2K
b8q0NhnQ0fGKwTKCDg2O6u++kqxJR7xrr1w/oUcDo/rRr6MYT7v5srIB0GDZ
mrcwVZWOYlLvTmoZ0MBUbsabguiI+F34pbIhDR7Znj3TgfXZqZbtuO8oDd6S
N5o7ydMRM0Bdao8xDabcC6OCdegoqbV+UOgEDRSdZuYOH8R9JERM3WpCg/QC
lpKKHB1J2A1ZrDelwcFvamUSanhfvr6yk8uMBvMTJrR2fP/TxeWuOXMahL8j
rqhj/I7HIu/9JGI/xD5amjiA83RfxOQbmQY82wrUf6vQ0fhA9noOFfOlwf/6
G77vlbxGA90C65cadyQMP7t5NgS2n8X4SrLmbu+nI9U6ol7jORoE5hTLL+PP
Z/mGF6rP00Bgs/MIBc9TZnG1tPgC1ju++qixEt4fz1bc82xpsMPVPCAW50Pv
V+TBZ/Y0UEvdS2rDfHLpik6kONKg/WnCIzc8T13YixfxF2kw0DTb9hf3wZ1u
DYdIFxr0RKcd9sXvN5ZolAy+RIPR+CPXlw/T0UZXEsf3Cg2EF7XYMXvpqLV0
ONndjQb+ScLUIszvPW43mos71ktU7OyBI3RkuHoiJ/U6DVS4rlSr4L6d57q4
3HGDBp06yqU5+Pu5/0ZOr/bBfiqQfkvAfWO9Yp2h6of5ljsqyoP1E1hmTzv4
0yBshmujHfZL8yLt2KMAGqy+8y6GF+fVf6H7UcttGrxQEZzZIU1HKn/NxpeD
abCxUtw0B/vz61yr3sFQGiykR5OOmNJR8qxxrE04nqdg6ZgVxms2U/85/i7m
Oz7VIAj3G880qL+PwnwPbOwYMMP8/q4K+3uPBvt7FeY78byXfmn2KcTRwI0u
+Xp+Cx1JThUpWcXT4EG0z5N6vH/pkwcDYhJwf3jfmrbH5yMmcrvqErGforfI
8eO+QeNy0jNJNPje9k5wiEhH02NPb8imYr8+rmZuxeezv0t8sHhCg1xn/WgG
Nx1ZjqaIRabToJlvoEIC70P+b0JXajJpIMNzoaFBEvfbl/i3U88wn9T5Uepy
D/IZ2SqwNxvrJ1wY6obfv/9zpAM5hwZyux+5+uLzn4fWl4fm0oDPplAlebYH
JQ4Gb6p4RYMN8Rv3NZvTkQmHy2o8nwbi84IbpfB5rgG/fPE3OP+sZ6zXP3tQ
MXt+tXkx5od/5eUu3KfOfR7koFLcrw1Xm4r20JF471RWcTkNXJfrozJGe1AX
03XhWyUNbE4qrXbGeoUyRk1EarD/E0Nd9uLzOnS7Jya1NJgs0tf2H+pBU92D
v/zraJAkbPkk/yjO1ydLw4J6GsxkwRkb3G8WXcyEz400+Br7oJLQ24M2fyR9
39GM82j8pnwasJ87Og8bt+C+m+v85IT94tluEu3TRoOcl3yzCp96kEJb02Bu
Bz7ftuyor01Hgy2GhzgfsX7P6S2KuF/iP9Te4e/GfhyS/rCjtQcZN+swj9Bp
8JekpJyF87L8vkzek0kDh6Vp3UwxvN8aVW9m92K9lR2XxBt6kENDfkcvmwa9
iaMZGjgPIvWKknwcGlzPy3rdiP3YUZftgYZo8PtYu6h5TQ8Kfiv13u0znmcx
eJkX86FZmyb89AsNDE+Ly94Twn1RI+ZK/0aD4+NKxNLSHpRenVizfowGBR4S
OkcE6YhSJcB/eBz7f61Y+yz278bKGNtLk7hvhHbRLQt6UE05b8mTKRoIiawX
mcP72L0sbH3Xb4znXnHA0jY6kivlOcszQ4Ox4PTYYy97ELs4IE99jgZii6Vz
J1fjfi1a+uf0lwbZQ+1uKdjvRm+8CMmLNJhoHH8f8KwHLRRMP21bxn0y63DG
Zq4Hvcq/OvfvH9ZPcOk3YxMd/Q/wzR4/
         "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.34}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Fidelity\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {0.33822650455395725`, 1.0010399206745753`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Floquet\"", "\"RWA\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7482711364588737`*^9, 3.748271251039849*^9, {3.7482713162293253`*^9, 
   3.7482713264474573`*^9}, {3.748271401179845*^9, 3.748271418835701*^9}, 
   3.7482717903838577`*^9, 3.748271890390729*^9, 3.748272050150738*^9, 
   3.74827314809544*^9, 3.7482732358544116`*^9, 3.7482739392419834`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two frequencies, but with third-order terms - very slow", "Section",
 CellChangeTimes->{{3.7482726226430035`*^9, 3.7482726374295025`*^9}, {
  3.748287250423521*^9, 3.748287252124544*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "\[CapitalDelta]", ",", " ", "A", ",", " ", "Ba", ",", " ", "Bb", ",", 
     " ", "\[Omega]a", ",", " ", "\[Omega]b", ",", " ", "H"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H0", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "A"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"A", ",", " ", "\[CapitalDelta]"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1a", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Ba", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1a", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Ba"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hp1b", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bb", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Hn1b", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "Bb"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"H", " ", "=", " ", 
    RowBox[{"H0", " ", "+", " ", 
     RowBox[{"Hp1a", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]a", "*", "t"}]]}], " ", "+", 
     " ", 
     RowBox[{"Hn1a", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]a", "*", "t"}]]}], " ", 
     "+", " ", 
     RowBox[{"Hp1b", "*", 
      SuperscriptBox["E", 
       RowBox[{"\[ImaginaryI]", "*", "\[Omega]b", "*", "t"}]]}], " ", "+", 
     " ", 
     RowBox[{"Hn1b", "*", 
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Omega]b", "*", "t"}]]}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]I", " ", "=", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"termOrder", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockOrder", " ", "=", " ", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"k", "*", "\[Omega]b"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"termOrder", " ", "-", " ", 
              RowBox[{"Abs", "[", "kk", "]"}]}], ")"}]}], ",", " ", 
           RowBox[{"(", 
            RowBox[{"termOrder", " ", "-", " ", 
             RowBox[{"Abs", "[", "kk", "]"}]}], ")"}]}], "}"}]}], "]"}], " ", 
       "+", " ", 
       RowBox[{"kk", "*", "\[Omega]a"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"kk", ",", " ", 
        RowBox[{"-", "termOrder"}], ",", " ", "termOrder"}], "}"}]}], "]"}], 
    " ", "//", " ", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ord", " ", "=", " ", 
   RowBox[{
    RowBox[{"blockOrder", " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]a", " ", "\[Rule]", " ", "100"}], ",", " ", 
       RowBox[{"\[Omega]b", " ", "\[Rule]", " ", "99"}]}], "}"}]}], " ", "//",
     " ", "Ordering"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blockOrder", "[", 
   RowBox[{"[", "ord", "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", " ", "=", "  ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", "blockOrder", "]"}], " ", "+", " ", "1"}], ")"}],
     "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HF", " ", "=", " ", 
    RowBox[{"0", "*", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{"2", "*", 
       RowBox[{"Length", "[", "blockOrder", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getBlock", "[", 
   RowBox[{"i_", ",", " ", "j_", ",", " ", "M_"}], "]"}], " ", ":=", " ", 
  RowBox[{"M", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
        "n"}]}], " ", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
              "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
         "n"}], " ", "-", " ", 
        RowBox[{"(", 
         RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "M", "]"}], "/", "n"}], " ", "+", " ", 
             "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
        "n"}]}], " ", "}"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setBlock", "[", 
    RowBox[{"i_", ",", " ", "j_", ",", " ", "block_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"HF", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "i"}], ")"}], "*", 
          "n"}]}], " ", "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", 
                " ", "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], 
           "*", "n"}], " ", "-", " ", 
          RowBox[{"(", 
           RowBox[{"n", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "HF", "]"}], "/", "n"}], " ", "+", " ",
                "1"}], ")"}], "/", "2"}], " ", "+", " ", "j"}], ")"}], "*", 
          "n"}]}], " ", "}"}]}], "]"}], "]"}], " ", "=", " ", "block"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"setBlock", "[", 
      RowBox[{"i", ",", " ", "i", ",", " ", 
       RowBox[{"H0", " ", "+", " ", 
        RowBox[{
         RowBox[{"blockOrder", "[", 
          RowBox[{"[", 
           RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], "*", 
         "\[Sigma]I"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"i", ",", " ", "j"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", 
           RowBox[{"-", "\[Omega]a"}]}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hn1a"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", "\[Omega]a"}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hp1a"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", 
           RowBox[{"-", "\[Omega]b"}]}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hn1b"}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], " ", "-", " ", 
            RowBox[{"blockOrder", "[", 
             RowBox[{"[", 
              RowBox[{"j", " ", "+", " ", "l"}], "]"}], "]"}]}], " ", 
           "\[Equal]", " ", "\[Omega]b"}], ",", " ", 
          RowBox[{"setBlock", "[", 
           RowBox[{"i", ",", " ", "j", ",", " ", "Hp1b"}], "]"}]}], "]"}], 
        ";"}], "\[IndentingNewLine]", ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"l", " ", "-", "1"}], ")"}]}], ",", " ", 
        RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
      RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<H:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"H", " ", "//", " ", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<HF:\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HF", " ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", " ", "=", " ", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ba", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bb", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]a", " ", "=", " ", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]b", " ", "=", " ", "61"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tmax", " ", "=", " ", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"URWA", " ", "=", " ", 
   RowBox[{"findEvolutionOperator", "[", "H0", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UF", " ", "=", " ", 
    RowBox[{"findEvolutionOperator", "[", "HF", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "=", " ", 
   RowBox[{"0", "*", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"UfromF", " ", "=", " ", 
      RowBox[{"UfromF", " ", "+", " ", 
       RowBox[{
        RowBox[{"getBlock", "[", 
         RowBox[{"i", ",", " ", "0", ",", " ", "UF"}], "]"}], "*", 
        SuperscriptBox["E", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"blockOrder", "[", 
           RowBox[{"[", 
            RowBox[{"i", " ", "+", " ", "l"}], "]"}], "]"}], "*", 
          "t"}]]}]}]}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], ",", " ", 
       RowBox[{"(", 
        RowBox[{"l", " ", "-", " ", "1"}], ")"}]}], "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MF", " ", "=", " ", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "UfromF"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MRWA", " ", "=", " ", 
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Uexact", "]"}], ".", "URWA"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<exact\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uexact", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Floquet - fidelity \>\"", " ", "<>", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"fidelity", "[", 
     RowBox[{"MF", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UfromF", " ", "/.", " ", 
   RowBox[{"t", "\[Rule]", "Tmax"}]}], " ", " ", "//", " ", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<RWA - fidelity \>\"", " ", "<>", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{"fidelity", "[", 
     RowBox[{"MRWA", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}], "]"}], "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"URWA", " ", "/.", " ", 
    RowBox[{"t", "\[Rule]", "Tmax"}]}], "  ", "//", " ", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fidelity", "[", "MF", "]"}], ",", " ", 
     RowBox[{"fidelity", "[", "MRWA", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "Tmax"}], "}"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Fidelity\>\""}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Floquet\>\"", ",", " ", "\"\<RWA\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.748272650388056*^9, 3.7482726727691956`*^9}, {
  3.7482729220638156`*^9, 3.748272923982713*^9}, {3.7482730858285155`*^9, 
  3.7482730928294916`*^9}, {3.748273405497001*^9, 3.74827347597927*^9}, {
  3.748273509321703*^9, 3.7482735095325823`*^9}, {3.748273656607038*^9, 
  3.748273657502523*^9}, {3.7482738017189736`*^9, 3.7482738026614327`*^9}, {
  3.7482745204484987`*^9, 3.748274528277998*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], " ", "\[Omega]a"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Omega]a"}], "-", "\[Omega]b"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Omega]a"}], "-", 
    RowBox[{"2", " ", "\[Omega]b"}]}], ",", 
   RowBox[{
    RowBox[{"-", "3"}], " ", "\[Omega]b"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Omega]a"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Omega]a"}], "-", "\[Omega]b"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[Omega]b"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[Omega]a"}], "+", "\[Omega]b"}], ",", 
   RowBox[{"-", "\[Omega]a"}], ",", 
   RowBox[{"-", "\[Omega]b"}], ",", 
   RowBox[{"\[Omega]a", "-", 
    RowBox[{"2", " ", "\[Omega]b"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[Omega]a"}], "+", "\[Omega]b"}], ",", "0", ",", 
   RowBox[{"\[Omega]a", "-", "\[Omega]b"}], ",", 
   RowBox[{
    RowBox[{"-", "\[Omega]a"}], "+", 
    RowBox[{"2", " ", "\[Omega]b"}]}], ",", "\[Omega]b", ",", "\[Omega]a", 
   ",", 
   RowBox[{
    RowBox[{"2", " ", "\[Omega]a"}], "-", "\[Omega]b"}], ",", 
   RowBox[{"2", " ", "\[Omega]b"}], ",", 
   RowBox[{"\[Omega]a", "+", "\[Omega]b"}], ",", 
   RowBox[{"2", " ", "\[Omega]a"}], ",", 
   RowBox[{"3", " ", "\[Omega]b"}], ",", 
   RowBox[{"\[Omega]a", "+", 
    RowBox[{"2", " ", "\[Omega]b"}]}], ",", 
   RowBox[{
    RowBox[{"2", " ", "\[Omega]a"}], "+", "\[Omega]b"}], ",", 
   RowBox[{"3", " ", "\[Omega]a"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.748272936629444*^9, {3.748273455394842*^9, 3.7482734765529404`*^9}, 
   3.748273510125242*^9, 3.7482736704859324`*^9, 3.748273939673955*^9, 
   3.748274530101946*^9}],

Cell[BoxData["\<\"H:\"\>"], "Print",
 CellChangeTimes->{
  3.7482729363855844`*^9, {3.7482734556217117`*^9, 3.748273476733955*^9}, 
   3.748273510355109*^9, 3.7482736707297907`*^9, 3.7482739398878326`*^9, 
   3.7482745303603477`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"A", "+", 
       RowBox[{"Ba", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]a"}]]}], 
       "+", 
       RowBox[{"Bb", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]b"}]]}]}]},
     {
      RowBox[{"A", "+", 
       RowBox[{"Ba", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]a"}]]}], "+", 
       RowBox[{"Bb", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]b"}]]}]}], 
      "\[CapitalDelta]"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748272936629444*^9, {3.748273455394842*^9, 3.7482734765529404`*^9}, 
   3.748273510125242*^9, 3.7482736704859324`*^9, 3.748273939673955*^9, 
   3.748274530633191*^9}],

Cell[BoxData["\<\"HF:\"\>"], "Print",
 CellChangeTimes->{
  3.7482729363855844`*^9, {3.7482734556217117`*^9, 3.748273476733955*^9}, 
   3.748273510355109*^9, 3.7482736707297907`*^9, 3.7482739398878326`*^9, 
   3.7482745308723946`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[Omega]a"}], "A", "0", "0", "0", "Ba", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"3", " ", "\[Omega]a"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Omega]a"}], "-", "\[Omega]b"}], "A", "0", 
      "Bb", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"2", " ", "\[Omega]a"}], "-", "\[Omega]b"}], "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Omega]a"}], "A", "0", "Bb", "0", "0", "0", 
      "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"Ba", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"2", " ", "\[Omega]a"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Omega]a"}], "+", "\[Omega]b"}], "A", "0", 
      "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"2", " ", "\[Omega]a"}], "+", "\[Omega]b"}], "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Omega]a"}], "-", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "A", "0", "Bb", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a", "-", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Omega]a"}], "-", "\[Omega]b"}], "A", "0", "Bb", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "Ba", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a", "-", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "\[Omega]a"}], "A", "0", "Bb", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a"}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Omega]a"}], "+", "\[Omega]b"}], "A", "0", "Bb", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "Bb", "0", 
      "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a", "+", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{
       RowBox[{"-", "\[Omega]a"}], "+", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "A", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]a", "+", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"3", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "-", "\[Omega]b"}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "A", "0", "Bb", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      "\[CapitalDelta]", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "\[Omega]b",
       "A", "0", "Bb", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]b"}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"2", " ", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Bb", "0", 
      "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{"3", " ", "\[Omega]b"}], "A", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"3", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", 
      RowBox[{"\[Omega]a", "-", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "A", "0", "Bb", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a", "-", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[Omega]a", "-", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", 
      "0", "0", "Ba", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a", "-", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "\[Omega]a", "A", "0", "Bb", 
      "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a"}], "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[Omega]a", "+", "\[Omega]b"}], "A", "0", "Bb", "0", "0", "0", 
      "0", "0", "Ba", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a", "+", "\[Omega]b"}], "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"\[Omega]a", "+", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "A", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "Ba", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", "\[Omega]a", "+", 
       RowBox[{"2", " ", "\[Omega]b"}]}], "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"2", " ", "\[Omega]a"}], "-", "\[Omega]b"}], "A", "0", "Bb", 
      "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", "0", "0", 
      "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"2", " ", "\[Omega]a"}], "-", "\[Omega]b"}], "0", "0", "0", 
      "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", 
      RowBox[{"2", " ", "\[Omega]a"}], "A", "0", "Bb", "0", "Ba"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", "0", "0", 
      "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"2", " ", "\[Omega]a"}]}], "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", 
      RowBox[{
       RowBox[{"2", " ", "\[Omega]a"}], "+", "\[Omega]b"}], "A", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "Ba", "0", "0", "0", 
      "0", "0", "Bb", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"2", " ", "\[Omega]a"}], "+", "\[Omega]b"}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", 
      RowBox[{"3", " ", "\[Omega]a"}], "A"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "Ba", "0", "0", "0", "A", 
      RowBox[{"\[CapitalDelta]", "+", 
       RowBox[{"3", " ", "\[Omega]a"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.748272936629444*^9, {3.748273455394842*^9, 3.7482734765529404`*^9}, 
   3.748273510125242*^9, 3.7482736704859324`*^9, 3.748273939673955*^9, 
   3.748274531116282*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1364, 676},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4484, 121, 289, "Input"],
Cell[CellGroupData[{
Cell[5067, 145, 100, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[5192, 150, 12751, 338, 1219, "Input"],
Cell[17946, 490, 102, 1, 23, "Print"],
Cell[18051, 493, 2340, 46, 48, "Output"],
Cell[20394, 541, 104, 1, 23, "Print"],
Cell[20501, 544, 2313, 43, 102, "Output"],
Cell[22817, 589, 2484, 46, 44, "Output"],
Cell[25304, 637, 2478, 46, 44, "Output"],
Cell[27785, 685, 2481, 46, 44, "Output"],
Cell[30269, 733, 131530, 2203, 250, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161848, 2942, 100, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[161973, 2947, 15122, 421, 1599, "Input"],
Cell[177098, 3370, 857, 12, 23, "Print"],
Cell[177958, 3384, 2233, 49, 48, "Output"],
Cell[180194, 3435, 860, 12, 23, "Print"],
Cell[181057, 3449, 2394, 48, 162, "Output"],
Cell[183454, 3499, 859, 12, 23, "Print"],
Cell[184316, 3513, 2039, 39, 44, "Output"],
Cell[186358, 3554, 890, 12, 23, "Print"],
Cell[187251, 3568, 2043, 39, 44, "Output"],
Cell[189297, 3609, 887, 12, 23, "Print"],
Cell[190187, 3623, 2045, 41, 44, "Output"],
Cell[192235, 3666, 136237, 2282, 254, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328521, 5954, 187, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[328733, 5960, 16724, 462, 1599, "Input"],
Cell[345460, 6424, 249, 3, 23, "Print"],
Cell[345712, 6429, 1584, 40, 48, "Output"],
Cell[347299, 6471, 250, 3, 23, "Print"],
Cell[347552, 6476, 5977, 112, 402, "Output"],
Cell[353532, 6590, 252, 3, 23, "Print"],
Cell[353787, 6595, 1395, 30, 44, "Output"],
Cell[355185, 6627, 281, 3, 23, "Print"],
Cell[355469, 6632, 1394, 30, 44, "Output"],
Cell[356866, 6664, 275, 3, 23, "Print"],
Cell[357144, 6669, 1400, 32, 44, "Output"],
Cell[358547, 6703, 135954, 2279, 252, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[494550, 8988, 193, 2, 70, "Section"],
Cell[CellGroupData[{
Cell[494768, 8994, 17133, 478, 1699, "Input"],
Cell[511904, 9474, 1706, 47, 52, "Output"],
Cell[513613, 9523, 233, 4, 23, "Print"],
Cell[513849, 9529, 1463, 39, 48, "Output"],
Cell[515315, 9570, 234, 4, 23, "Print"],
Cell[515552, 9576, 17924, 303, 762, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)


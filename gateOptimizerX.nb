(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    432804,       7961]
NotebookOptionsPosition[    429686,       7869]
NotebookOutlinePosition[    430027,       7884]
CellTagsIndexPosition[    429984,       7881]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Auxiliary functions", "Section",
 CellChangeTimes->{{3.753034379067154*^9, 3.753034383520705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$HistoryLength", " ", "=", " ", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"findEvolutionOperator2D", "[", "Ham_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"funcs", "=", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[Psi]", "[", 
           RowBox[{"#2", " ", "+", " ", 
            RowBox[{"8", "*", 
             RowBox[{"(", 
              RowBox[{"#1", "-", " ", "1"}], ")"}]}]}], "]"}], "[", "t", 
          "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"8", ",", " ", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"equations", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Ham", ".", "funcs"}], " ", "\[Equal]", " ", 
           RowBox[{"\[ImaginaryI]", "*", 
            RowBox[{"D", "[", 
             RowBox[{"funcs", ",", "t"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"funcs", "\[Equal]", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "8", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1", ",", " ", "2", ",", " ", "3", ",", " ", "4", ",", " ", 
                 "5", ",", "6", " ", ",", " ", "7", ",", " ", "8"}], "}"}], 
               ",", " ", 
               RowBox[{"{", 
                RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}]}], "/.", 
           RowBox[{"t", "\[Rule]", "0"}]}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NDSolveValue", "[", 
       RowBox[{"equations", ",", "funcs", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "Tmax"}], "}"}], ",", " ", 
        RowBox[{"AccuracyGoal", "\[Rule]", "10"}], ",", " ", 
        RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", " ", 
        RowBox[{"EvaluationMonitor", "\[RuleDelayed]", 
         RowBox[{"showStatus", "[", 
          RowBox[{"\"\<t = \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"CForm", "[", "t", "]"}], "]"}]}], "]"}]}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2"}], "}"}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"fidelity2D", "[", 
     RowBox[{"Mt_", ",", " ", "Ma_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "6"}], ")"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{".25", "*", 
        RowBox[{"Tr", "[", 
         RowBox[{"Mt", ".", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]I", " ", "+", " ", "\[Sigma]i"}], ")"}], ".", 
          RowBox[{"ConjugateTranspose", "[", "Mt", "]"}], ".", "Ma", ".", 
          RowBox[{"(", 
           RowBox[{"\[Sigma]I", " ", "+", " ", "\[Sigma]i"}], ")"}], ".", 
          RowBox[{"ConjugateTranspose", "[", "Ma", "]"}]}], "]"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]i", ",", " ", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]X", ",", " ", 
           RowBox[{"-", "\[Sigma]X"}], ",", " ", "\[Sigma]Y", ",", " ", 
           RowBox[{"-", "\[Sigma]Y"}], ",", " ", "\[Sigma]Z", ",", " ", 
           RowBox[{"-", "\[Sigma]Z"}]}], "}"}]}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fidelityXY", "[", "M_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Utarget", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", "\[Sigma]X"}], " ", "+", 
       " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", "\[Sigma]Y"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NMaximize", "[", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"fidelity2D", "[", 
          RowBox[{"Utarget", ",", " ", "M"}], "]"}], "]"}], ",", " ", 
        RowBox[{"{", "\[Theta]", "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"XYangle", "[", "M_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Utarget", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", "\[Sigma]X"}], " ", "+", 
       " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", "\[Sigma]Y"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", " ", "/.", " ", 
      RowBox[{
       RowBox[{"NMaximize", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"fidelity2D", "[", 
           RowBox[{"Utarget", ",", " ", "M"}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", "\[Theta]", "}"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "fidelityToGate", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fidelityToXYGate", "[", 
    RowBox[{
     RowBox[{"Ea_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"Ba_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"\[Omega]Ein_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"\[Omega]Bin_", "?", "NumericQ"}], ",", " ", 
     RowBox[{"Tmaxin_", "?", "NumericQ"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"HcorrectedAtStart", " ", "=", " ", "Hcorrected"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Clear", "[", 
      RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Ea", "*", 
       RowBox[{"cosWindow", "[", 
        RowBox[{"t", ",", " ", 
         RowBox[{"Tmax", "/", "3"}], ",", " ", "Tmax"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
      RowBox[{"Ba", "*", 
       RowBox[{"cosWindow", "[", 
        RowBox[{"t", ",", " ", 
         RowBox[{"Tmax", "/", "3"}], ",", " ", "Tmax"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]E", " ", "=", " ", "\[Omega]Ein"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Omega]B", " ", "=", " ", "\[Omega]Bin"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Tmax", " ", "=", " ", "Tmaxin"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"U", " ", "=", " ", 
      RowBox[{"findEvolutionOperator2D", "[", 
       RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"UU", " ", "=", " ", 
      RowBox[{"U", " ", "/.", " ", 
       RowBox[{"t", "\[Rule]", "Tmax"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"F", " ", "=", " ", 
      RowBox[{
       RowBox[{"fidelityXY", "[", "UU", "]"}], " ", "//", " ", "Chop"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"F", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\[CapitalDelta]E", ",", " ", "B0", ",", " ", "Ea", ",", " ", "Ba", 
          ",", " ", "\[Omega]Ein", ",", " ", "\[Omega]Bin", ",", " ", 
          "Tmax"}], "}"}]}], "}"}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"output", " ", "=", " ", "F"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"output", " ", ">", " ", "bestSoFar"}], ",", " ", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bestSoFar", " ", "=", " ", "output"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"bestParameters", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\[CapitalDelta]E", ",", " ", "B0", ",", " ", "Ea", ",", " ", "Ba",
             ",", " ", "\[Omega]Ein", ",", " ", "\[Omega]Bin", ",", " ", 
            "Tmax"}], "}"}]}], ";"}], "\[IndentingNewLine]", ")"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "output"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "map", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"map", "[", 
   RowBox[{"x_", ",", " ", "a_", ",", " ", "b_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"a", " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", " ", "-", " ", "a"}], ")"}], "*", "x"}]}], " ", "//", " ", 
   "Re"}]}]}], "Input",
 CellChangeTimes->{{3.748868042823764*^9, 3.7488681045182185`*^9}, {
   3.7488681749646297`*^9, 3.7488682445255513`*^9}, {3.748868301590673*^9, 
   3.7488685646671*^9}, {3.7488686147372503`*^9, 3.748868696235155*^9}, {
   3.7488688286698513`*^9, 3.748868837837569*^9}, {3.7488690219125137`*^9, 
   3.7488690912574162`*^9}, {3.7488691222425632`*^9, 3.748869137421818*^9}, {
   3.7488691771948414`*^9, 3.7488692534118557`*^9}, {3.748869491181861*^9, 
   3.7488695902772646`*^9}, {3.7488696203817296`*^9, 3.74886962749563*^9}, {
   3.748869733418502*^9, 3.7488697342070475`*^9}, {3.7488698987375774`*^9, 
   3.7488699036307592`*^9}, {3.7488699497951603`*^9, 3.748869981837699*^9}, {
   3.748870032903277*^9, 3.748870183071757*^9}, {3.7488703060429063`*^9, 
   3.7488704085688334`*^9}, {3.7488704500449376`*^9, 
   3.7488705400294557`*^9}, {3.748870584788613*^9, 3.7488706450780506`*^9}, {
   3.7488707240459476`*^9, 3.74887072912702*^9}, 3.7488709149040666`*^9, {
   3.7488711523767514`*^9, 3.748871153813923*^9}, {3.7488714954546614`*^9, 
   3.7488715099193287`*^9}, {3.748871868761881*^9, 3.748871942174532*^9}, {
   3.748872020382021*^9, 3.7488720226896915`*^9}, {3.748872069173199*^9, 
   3.7488722190637712`*^9}, {3.7488722803104596`*^9, 
   3.7488723320313826`*^9}, {3.7488725330016737`*^9, 3.748872619638477*^9}, {
   3.748876640016803*^9, 3.748876666094777*^9}, {3.748877051704959*^9, 
   3.74887715371215*^9}, {3.7488773504125185`*^9, 3.7488773794297876`*^9}, {
   3.748877856107978*^9, 3.74887796041984*^9}, {3.748878001674057*^9, 
   3.748878055889801*^9}, {3.748878088478014*^9, 3.7488781137684326`*^9}, {
   3.7488807866597347`*^9, 3.74888091302888*^9}, {3.7488811187512217`*^9, 
   3.748881124855708*^9}, {3.748882474186612*^9, 3.7488825046242766`*^9}, {
   3.7488830297579947`*^9, 3.748883060950012*^9}, {3.7488834448517227`*^9, 
   3.748883445423387*^9}, {3.748883595607071*^9, 3.7488836543901005`*^9}, {
   3.748883703205963*^9, 3.748883719920326*^9}, {3.748883755293934*^9, 
   3.7488837627846127`*^9}, {3.748884464075526*^9, 3.748884469485408*^9}, {
   3.748884594545309*^9, 3.7488846219585266`*^9}, {3.748884666165019*^9, 
   3.7488846762831864`*^9}, 3.7488847559020643`*^9, {3.7488850776327524`*^9, 
   3.748885115718807*^9}, {3.748885295904167*^9, 3.748885297224434*^9}, {
   3.7488970465029016`*^9, 3.748897082243295*^9}, {3.748897565079009*^9, 
   3.7488975701660767`*^9}, {3.7488977325734463`*^9, 3.748897737291775*^9}, {
   3.7488983530857162`*^9, 3.7488983534495*^9}, {3.749299172533746*^9, 
   3.7492991801593485`*^9}, {3.7493000291645174`*^9, 
   3.7493000312942915`*^9}, {3.7493020534701023`*^9, 3.749302056799182*^9}, {
   3.749302539692789*^9, 3.7493025442311735`*^9}, {3.7493030218320704`*^9, 
   3.74930304316677*^9}, {3.7493036615308275`*^9, 3.749303682676637*^9}, 
   3.7493045937365503`*^9, {3.749305297652417*^9, 3.7493053053120003`*^9}, {
   3.749770451046073*^9, 3.749770481650054*^9}, {3.7497705237406445`*^9, 
   3.7497705560097656`*^9}, {3.7497712105002127`*^9, 
   3.7497712720906844`*^9}, {3.7497713324324102`*^9, 3.749771459847307*^9}, {
   3.749771765194148*^9, 3.749771806057583*^9}, {3.7497721116463747`*^9, 
   3.7497721287605023`*^9}, 3.7497721767080355`*^9, {3.7497724013475375`*^9, 
   3.7497724016073885`*^9}, {3.7497727680317106`*^9, 
   3.7497727718914833`*^9}, {3.7497826469480915`*^9, 3.749782650369113*^9}, {
   3.749782719436269*^9, 3.7497827306588044`*^9}, {3.7497831485477285`*^9, 
   3.749783160115057*^9}, {3.749783768988895*^9, 3.7497837846498375`*^9}, {
   3.749783822590952*^9, 3.7497838507796907`*^9}, {3.750687181309536*^9, 
   3.750687230994295*^9}, {3.750692002223221*^9, 3.750692033173361*^9}, {
   3.750725607432372*^9, 3.75072564377551*^9}, {3.7507260143209114`*^9, 
   3.750726018748369*^9}, {3.7507333632398744`*^9, 3.750733416569871*^9}, {
   3.750733468013812*^9, 3.7507335648851376`*^9}, {3.750767218297253*^9, 
   3.7507672200979004`*^9}, {3.7507678537739935`*^9, 
   3.7507678617330866`*^9}, {3.7507678983593874`*^9, 
   3.7507679925629425`*^9}, {3.7507680372225056`*^9, 
   3.7507680534283895`*^9}, {3.7507685797788267`*^9, 3.7507686069737177`*^9}, 
   3.750772246677681*^9, {3.750775574691947*^9, 3.750775639812272*^9}, {
   3.7507805858844547`*^9, 3.750780607699105*^9}, {3.7507806382722263`*^9, 
   3.750780783429366*^9}, {3.750781582272604*^9, 3.7507815829553337`*^9}, {
   3.750783610280716*^9, 3.750783636885186*^9}, {3.750982968917549*^9, 
   3.7509829947428656`*^9}, {3.750983108460089*^9, 3.7509831245063267`*^9}, {
   3.7509945453079543`*^9, 3.7509946035057135`*^9}, {3.7509946929383593`*^9, 
   3.750994729126266*^9}, {3.7509948936083674`*^9, 3.750995168356369*^9}, {
   3.750995284808712*^9, 3.750995292908842*^9}, {3.750995337106987*^9, 
   3.7509953781793613`*^9}, {3.75099542952024*^9, 3.750995430658269*^9}, {
   3.7509955958695173`*^9, 3.7509956974159603`*^9}, {3.750996040324638*^9, 
   3.7509960477044344`*^9}, {3.7510856463996506`*^9, 
   3.7510856853002496`*^9}, {3.751292570630089*^9, 3.751292579065151*^9}, {
   3.7512926121426315`*^9, 3.751292730456869*^9}, {3.7512927968095856`*^9, 
   3.7512927980884123`*^9}, {3.751292845025528*^9, 3.751292865994632*^9}, {
   3.7512929198532343`*^9, 3.7512929246179304`*^9}, {3.7512929760167274`*^9, 
   3.751293011617013*^9}, {3.7512930454628286`*^9, 3.7512930604965954`*^9}, {
   3.7512933633627343`*^9, 3.751293392247506*^9}, {3.751293494028467*^9, 
   3.751293496774276*^9}, {3.75129384558178*^9, 3.751293855127629*^9}, {
   3.751293973004285*^9, 3.7512940427519665`*^9}, {3.751294074978858*^9, 
   3.7512940854372296`*^9}, {3.7512956349051423`*^9, 3.751295635157172*^9}, {
   3.751299209378405*^9, 3.7512992106235495`*^9}, {3.7518097921335583`*^9, 
   3.7518097928731327`*^9}, {3.751809827906107*^9, 3.751810030181779*^9}, {
   3.751812594259968*^9, 3.7518125989672604`*^9}, {3.751812693651807*^9, 
   3.751812721004077*^9}, {3.7518127780052967`*^9, 3.7518128116041813`*^9}, {
   3.751813371735674*^9, 3.751813387888392*^9}, {3.751929275022686*^9, 
   3.75192938843734*^9}, 3.7519297037486706`*^9, {3.751929858335792*^9, 
   3.7519299004595194`*^9}, {3.751929948078083*^9, 3.751930091406503*^9}, 
   3.751930162140749*^9, {3.7519302374193764`*^9, 3.7519302459684525`*^9}, {
   3.7519306184688315`*^9, 3.751930637754144*^9}, {3.7530306449920783`*^9, 
   3.7530306475715985`*^9}, {3.7530343192444324`*^9, 3.753034352681568*^9}, {
   3.7530344644102917`*^9, 3.753034512818576*^9}, {3.7530345799110394`*^9, 
   3.753034674456778*^9}, {3.7530384722187634`*^9, 3.7530385251163483`*^9}, {
   3.7541812067486057`*^9, 3.7541813072696238`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run optimization", "Section",
 CellChangeTimes->{{3.7530343615751505`*^9, 3.7530343648112855`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"setVariables", "[", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]", " ", "=", " ", 
    SuperscriptBox["10", "9"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EaD", " ", "=", "116.68"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]ED", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "*", "\[Pi]", "*", 
      RowBox[{"(", 
       RowBox[{"\[Epsilon]0", " ", "-", " ", 
        RowBox[{"A", "/", "4"}], " ", "+", " ", 
        RowBox[{"A", "*", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"dState", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "2"], "/", "2"}]}]}], ")"}]}], 
     " ", "-", " ", 
     RowBox[{"2", "*", "\[Pi]", "*", "2.0548", "*", 
      SuperscriptBox["10", "8"]}]}], " ", "/.", " ", 
    RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BaD", " ", "=", " ", "0.015131"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]BD", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "*", "\[Pi]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"B0", "*", "\[Gamma]e"}], " ", "-", " ", 
         RowBox[{"A", "*", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"dState", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "2"], "/", "2"}]}]}], ")"}]}], 
      " ", "-", " ", 
      RowBox[{"2", "*", "\[Pi]", "*", "1.9759", "*", 
       SuperscriptBox["10", "8"]}]}], " ", "/.", " ", 
     RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"defaultEnergies", " ", "=", " ", 
   RowBox[{"energiesInOrder", "[", "HexactStatic", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ubase", " ", "=", " ", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], "*", "t", "*", 
      RowBox[{"DiagonalMatrix", "[", "defaultEnergies", "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<----------------------------------------\>\"", " ", "<>", " ", 
    "\"\<startin'\>\"", " ", "<>", " ", 
    "\"\<----------------------------------------\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimeConstrained", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"bestSoFar", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"bestParameters", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"NMaximize", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"fidelityToXYGate", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"map", "[", 
             RowBox[{"x1", ",", " ", 
              RowBox[{"EaD", "*", ".95"}], ",", " ", 
              RowBox[{"EaD", "*", "1.05"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"map", "[", 
             RowBox[{"x1", ",", " ", 
              RowBox[{"BaD", "*", ".95"}], ",", " ", 
              RowBox[{"BaD", "*", "1.05"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"map", "[", 
             RowBox[{"x3", ",", " ", 
              RowBox[{"\[Omega]ED", " ", "-", " ", 
               RowBox[{".05", "*", 
                SuperscriptBox["10", "9"]}]}], ",", " ", 
              RowBox[{"\[Omega]ED", " ", "+", " ", 
               RowBox[{".05", "*", 
                SuperscriptBox["10", "9"]}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"map", "[", 
             RowBox[{"x4", ",", " ", 
              RowBox[{"\[Omega]BD", " ", "-", " ", 
               RowBox[{".05", "*", 
                SuperscriptBox["10", "9"]}]}], ",", " ", 
              RowBox[{"\[Omega]BD", " ", "+", " ", 
               RowBox[{".05", "*", 
                SuperscriptBox["10", "9"]}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"100", "*", 
             SuperscriptBox["10", 
              RowBox[{"-", "9"}]]}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"0", " ", "<", " ", "x1", " ", "<", " ", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"0", " ", "<", " ", "x2", " ", "<", " ", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"0", " ", "<", " ", "x3", " ", "<", " ", "1"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"0", " ", "<", " ", "x4", " ", "<", " ", "1"}]}], 
         RowBox[{"(*", 
          RowBox[{",", "\[IndentingNewLine]", 
           RowBox[{"0", " ", "<", " ", "x5", " ", "<", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"0", "<", "x6", "<", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"0", "<", "x7", "<", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"0", "<", "x8", "<", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"0", "<", "x9", "<", "1"}]}], "*)"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x1", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x2", ",", " ", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x3", ",", " ", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"x4", ",", ".3", ",", " ", ".7"}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{",", " ", 
           RowBox[{"{", 
            RowBox[{"x5", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x6", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x7", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x8", ",", ".3", ",", " ", ".7"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"x9", ",", ".3", ",", " ", ".7"}], "}"}]}], "*)"}], "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Method", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<NelderMead\>\"", ",", " ", 
           RowBox[{"\"\<RandomSeed\>\"", "\[Rule]", 
            RowBox[{"RandomInteger", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "10000"}], "}"}], "]"}]}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"MaxIterations", "\[Rule]", "10000"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ")"}], ",", " ", 
    RowBox[{"60", "*", "60", "*", "10"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Beep", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Pause", "[", ".5", "]"}], ";"}], "\[IndentingNewLine]", ")"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"clearVariables", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.748868042823764*^9, 3.7488681045182185`*^9}, {
   3.7488681749646297`*^9, 3.7488682445255513`*^9}, {3.748868301590673*^9, 
   3.7488685646671*^9}, {3.7488686147372503`*^9, 3.748868696235155*^9}, {
   3.7488688286698513`*^9, 3.748868837837569*^9}, {3.7488690219125137`*^9, 
   3.7488690912574162`*^9}, {3.7488691222425632`*^9, 3.748869137421818*^9}, {
   3.7488691771948414`*^9, 3.7488692534118557`*^9}, {3.748869491181861*^9, 
   3.7488695902772646`*^9}, {3.7488696203817296`*^9, 3.74886962749563*^9}, {
   3.748869733418502*^9, 3.7488697342070475`*^9}, {3.7488698987375774`*^9, 
   3.7488699036307592`*^9}, {3.7488699497951603`*^9, 3.748869981837699*^9}, {
   3.748870032903277*^9, 3.748870183071757*^9}, {3.7488703060429063`*^9, 
   3.7488704085688334`*^9}, {3.7488704500449376`*^9, 
   3.7488705400294557`*^9}, {3.748870584788613*^9, 3.7488706450780506`*^9}, {
   3.7488707240459476`*^9, 3.74887072912702*^9}, 3.7488709149040666`*^9, {
   3.7488711523767514`*^9, 3.748871153813923*^9}, {3.7488714954546614`*^9, 
   3.7488715099193287`*^9}, {3.748871868761881*^9, 3.748871942174532*^9}, {
   3.748872020382021*^9, 3.7488720226896915`*^9}, {3.748872069173199*^9, 
   3.7488722190637712`*^9}, {3.7488722803104596`*^9, 
   3.7488723320313826`*^9}, {3.7488725330016737`*^9, 3.748872619638477*^9}, {
   3.748876640016803*^9, 3.748876666094777*^9}, {3.748877051704959*^9, 
   3.74887715371215*^9}, {3.7488773504125185`*^9, 3.7488773794297876`*^9}, {
   3.748877856107978*^9, 3.74887796041984*^9}, {3.748878001674057*^9, 
   3.748878055889801*^9}, {3.748878088478014*^9, 3.7488781137684326`*^9}, {
   3.7488807866597347`*^9, 3.74888091302888*^9}, {3.7488811187512217`*^9, 
   3.748881124855708*^9}, {3.748882474186612*^9, 3.7488825046242766`*^9}, {
   3.7488830297579947`*^9, 3.748883060950012*^9}, {3.7488834448517227`*^9, 
   3.748883445423387*^9}, {3.748883595607071*^9, 3.7488836543901005`*^9}, {
   3.748883703205963*^9, 3.748883719920326*^9}, {3.748883755293934*^9, 
   3.7488837627846127`*^9}, {3.748884464075526*^9, 3.748884469485408*^9}, {
   3.748884594545309*^9, 3.7488846219585266`*^9}, {3.748884666165019*^9, 
   3.7488846762831864`*^9}, 3.7488847559020643`*^9, {3.7488850776327524`*^9, 
   3.748885115718807*^9}, {3.748885295904167*^9, 3.748885297224434*^9}, {
   3.7488970465029016`*^9, 3.748897082243295*^9}, {3.748897565079009*^9, 
   3.7488975701660767`*^9}, {3.7488977325734463`*^9, 3.748897737291775*^9}, {
   3.7488983530857162`*^9, 3.7488983534495*^9}, {3.749299172533746*^9, 
   3.7492991801593485`*^9}, {3.7493000291645174`*^9, 
   3.7493000312942915`*^9}, {3.7493020534701023`*^9, 3.749302056799182*^9}, {
   3.749302539692789*^9, 3.7493025442311735`*^9}, {3.7493030218320704`*^9, 
   3.74930304316677*^9}, {3.7493036615308275`*^9, 3.749303682676637*^9}, 
   3.7493045937365503`*^9, {3.749305297652417*^9, 3.7493053053120003`*^9}, {
   3.749770451046073*^9, 3.749770481650054*^9}, {3.7497705237406445`*^9, 
   3.7497705560097656`*^9}, {3.7497712105002127`*^9, 
   3.7497712720906844`*^9}, {3.7497713324324102`*^9, 3.749771459847307*^9}, {
   3.749771765194148*^9, 3.749771806057583*^9}, {3.7497721116463747`*^9, 
   3.7497721287605023`*^9}, 3.7497721767080355`*^9, {3.7497724013475375`*^9, 
   3.7497724016073885`*^9}, {3.7497727680317106`*^9, 
   3.7497727718914833`*^9}, {3.7497826469480915`*^9, 3.749782650369113*^9}, {
   3.749782719436269*^9, 3.7497827306588044`*^9}, {3.7497831485477285`*^9, 
   3.749783160115057*^9}, {3.749783768988895*^9, 3.7497837846498375`*^9}, {
   3.749783822590952*^9, 3.7497838507796907`*^9}, {3.750687181309536*^9, 
   3.750687230994295*^9}, {3.750692002223221*^9, 3.750692033173361*^9}, {
   3.750725607432372*^9, 3.75072564377551*^9}, {3.7507260143209114`*^9, 
   3.750726018748369*^9}, {3.7507333632398744`*^9, 3.750733416569871*^9}, {
   3.750733468013812*^9, 3.7507335648851376`*^9}, {3.750767218297253*^9, 
   3.7507672200979004`*^9}, {3.7507678537739935`*^9, 
   3.7507678617330866`*^9}, {3.7507678983593874`*^9, 
   3.7507679925629425`*^9}, {3.7507680372225056`*^9, 
   3.7507680534283895`*^9}, {3.7507685797788267`*^9, 3.7507686069737177`*^9}, 
   3.750772246677681*^9, {3.750775574691947*^9, 3.750775639812272*^9}, {
   3.7507805858844547`*^9, 3.750780607699105*^9}, {3.7507806382722263`*^9, 
   3.750780783429366*^9}, {3.750781582272604*^9, 3.7507815829553337`*^9}, {
   3.750783610280716*^9, 3.750783636885186*^9}, {3.750982968917549*^9, 
   3.7509829947428656`*^9}, {3.750983108460089*^9, 3.7509831245063267`*^9}, {
   3.7509945453079543`*^9, 3.7509946035057135`*^9}, {3.7509946929383593`*^9, 
   3.750994729126266*^9}, {3.7509948936083674`*^9, 3.750995168356369*^9}, {
   3.750995284808712*^9, 3.750995292908842*^9}, {3.750995337106987*^9, 
   3.7509953781793613`*^9}, {3.75099542952024*^9, 3.750995430658269*^9}, {
   3.7509955958695173`*^9, 3.7509956974159603`*^9}, {3.750996040324638*^9, 
   3.7509960477044344`*^9}, {3.7510856463996506`*^9, 
   3.7510856853002496`*^9}, {3.751292570630089*^9, 3.751292579065151*^9}, {
   3.7512926121426315`*^9, 3.751292730456869*^9}, {3.7512927968095856`*^9, 
   3.7512927980884123`*^9}, {3.751292845025528*^9, 3.751292865994632*^9}, {
   3.7512929198532343`*^9, 3.7512929246179304`*^9}, {3.7512929760167274`*^9, 
   3.751293011617013*^9}, {3.7512930454628286`*^9, 3.7512930604965954`*^9}, {
   3.7512933633627343`*^9, 3.751293392247506*^9}, {3.751293494028467*^9, 
   3.751293496774276*^9}, {3.75129384558178*^9, 3.751293855127629*^9}, {
   3.751293973004285*^9, 3.7512940427519665`*^9}, {3.751294074978858*^9, 
   3.7512940854372296`*^9}, {3.7512956349051423`*^9, 3.751295635157172*^9}, {
   3.751299209378405*^9, 3.7512992106235495`*^9}, {3.7518097921335583`*^9, 
   3.7518097928731327`*^9}, {3.751809827906107*^9, 3.751810030181779*^9}, {
   3.751812594259968*^9, 3.7518125989672604`*^9}, {3.751812693651807*^9, 
   3.751812721004077*^9}, {3.7518127780052967`*^9, 3.7518128116041813`*^9}, {
   3.751813371735674*^9, 3.751813387888392*^9}, {3.751929275022686*^9, 
   3.75192938843734*^9}, 3.7519297037486706`*^9, {3.751929858335792*^9, 
   3.7519299004595194`*^9}, {3.751929948078083*^9, 3.751930091406503*^9}, 
   3.751930162140749*^9, {3.7519302374193764`*^9, 3.7519302459684525`*^9}, {
   3.7519306184688315`*^9, 3.751930637754144*^9}, {3.7530306449920783`*^9, 
   3.7530306475715985`*^9}, {3.7530343192444324`*^9, 3.753034352681568*^9}, {
   3.753034713816129*^9, 3.7530347324122677`*^9}, {3.7530347800406075`*^9, 
   3.7530348455185623`*^9}, {3.7530355235652795`*^9, 3.753035523778154*^9}, {
   3.7541813354033904`*^9, 3.7541814378602853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"----------------------------------------startin'------------\
----------------------------\"\>"], "Print",
 CellChangeTimes->{
  3.753034994414562*^9, 3.7530355463148518`*^9, {3.7541814255084114`*^9, 
   3.7541814395243254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9535917845754601`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.86699112487693`", ",", 
     "0.015025569443867954`", ",", "3.3881450123682068`*^10", ",", 
     "3.3735660486273724`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.753034994414562*^9, 3.7530355463148518`*^9, {3.7541814255084114`*^9, 
   3.7541814451270943`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9840204267376792`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "117.84354786169051`", ",", 
     "0.015281888264443254`", ",", "3.387171882235863`*^10", ",", 
     "3.3706028316942036`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.753034994414562*^9, 3.7530355463148518`*^9, {3.7541814255084114`*^9, 
   3.754181451752273*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9881539624302974`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "118.88018857869389`", ",", "0.01541631927823292`",
      ",", "3.388233745378567`*^10", ",", "3.3719632593501503`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181458931131*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9795359881813654`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "117.43000964909439`", ",", 
     "0.015228260850192382`", ",", "3.3879809176013332`*^10", ",", 
     "3.371327642525988`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181466894537*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9871501358935891`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "114.55793028530613`", ",", 
     "0.014855811134272943`", ",", "3.3881089131815826`*^10", ",", 
     "3.3714512578370144`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181474383217*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8180555798115943`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "118.48884706251552`", ",", 
     "0.015365570319702796`", ",", "3.387602716830466`*^10", ",", 
     "3.3691064470763058`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181481863901*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9962360138970815`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "116.52245510928658`", ",", 
     "0.015110569662826664`", ",", "3.3880094384837715`*^10", ",", 
     "3.3724511482396057`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541814895960255`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9990839317519895`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "116.47205126839417`", ",", "0.01510403331969551`",
      ",", "3.387781072038559`*^10", ",", "3.371906606034499`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541814970148478`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9945406541659457`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.99307207804407`", ",", 
     "0.015041919554447074`", ",", "3.387681149257172`*^10", ",", 
     "3.3721960877887547`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815044843473`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9969980550104842`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.37276475914989`", ",", 
     "0.014961478433070765`", ",", "3.3888947023053772`*^10", ",", 
     "3.373283304036431`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815099019675`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9810959553250933`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "119.06579957245614`", ",", 
     "0.015440389212639988`", ",", "3.388350565921555`*^10", ",", 
     "3.373350900993329`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181511825082*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.996313080670436`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.68489760709363`", ",", 
     "0.015001955653864705`", ",", "3.3881693263665756`*^10", ",", 
     "3.371926168626093`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815161331987`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9882721634849785`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.14589579326824`", ",", "0.0146726992564959`", 
     ",", "3.3881935242185745`*^10", ",", "3.372820354118164`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815208346157`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9962768870236675`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "114.57946898962466`", ",", 
     "0.014858604261930156`", ",", "3.3882035795085728`*^10", ",", 
     "3.372606080426161`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181525078162*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9991411793702625`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "114.53213620284458`", ",", 
     "0.014852466171453903`", ",", "3.3885149016257706`*^10", ",", 
     "3.3724099313219864`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181529563609*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9959701343660711`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.53697674962359`", ",", 
     "0.014723414425767523`", ",", "3.38876763319677`*^10", ",", 
     "3.3723893228631763`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181534035849*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.992678795933304`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "116.45145592911648`", ",", 
     "0.015101362527112284`", ",", "3.3884764216595684`*^10", ",", 
     "3.3721569245833443`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815385828047`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9989890607228139`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.04746572449761`", ",", 
     "0.014919293828225688`", ",", "3.388271790046322`*^10", ",", 
     "3.3724937914654564`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181542991868*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9932711295769301`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.0273113703495`", ",", "0.014916680222358229`",
      ",", "3.3885619066414387`*^10", ",", "3.3731206478030937`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815471792336`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9989453614753279`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.5205010479076`", ",", "0.014980636795988085`",
      ",", "3.3882674714352913`*^10", ",", "3.372224788420343`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815518645687`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9966808271577641`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.4133123626721`", ",", "0.014966736624610828`",
      ",", "3.387522915267594`*^10", ",", "3.371234254584711`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815563954735`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9989091882734746`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.38290166003044`", ",", 
     "0.014962792980955781`", ",", "3.3885517555459316`*^10", ",", 
     "3.3727710416735012`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181560897607*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9987475337095313`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.40317546179155`", ",", 
     "0.014965422076725812`", ",", "3.38786586202704`*^10", ",", 
     "3.3717465169476414`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181565514757*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9993669517991687`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.38797011047072`", ",", "0.01496345025489829`",
      ",", "3.3883802821662086`*^10", ",", "3.372514910492036`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181570130612*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9989099436791911`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.19931060519595`", ",", "0.01493898499114861`",
      ",", "3.3882065515031387`*^10", ",", "3.372437831236646`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181575321721*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9993762747831347`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.44020343722968`", ",", 
     "0.014970223844778217`", ",", "3.3882522414522533`*^10", ",", 
     "3.3722780491244186`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815779082284`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9977414444293753`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.86871478497197`", ",", "0.01502579296718727`",
      ",", "3.388192458595074`*^10", ",", "3.3720609570210136`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815828834257`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9994732521525012`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.2527779896162`", ",", "0.014945918612966083`",
      ",", "3.38825195718351`*^10", ",", "3.3723855828543457`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815880815215`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9997758704627326`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.83449260168642`", ",", 
     "0.014761996122352737`", ",", "3.388918619175312`*^10", ",", 
     "3.3728876308618946`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815924608555`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9997458061225724`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "112.51571326833255`", ",", 
     "0.014590977523681348`", ",", "3.3894873927436886`*^10", ",", 
     "3.373378143275592`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541815967056894`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9988152895067236`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "115.42558586665693`", ",", "0.01496832824604376`",
      ",", "3.388386648362871`*^10", ",", "3.3726231553443615`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541816010522833`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9995339960430881`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "114.75549861879767`", ",", 
     "0.014881431690101367`", ",", "3.3884828383100456`*^10", ",", 
     "3.37246323732758`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181606389282*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9994831574047996`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "114.25351621319427`", ",", 
     "0.014816334880200913`", ",", "3.388572545894352`*^10", ",", 
     "3.3724923395920834`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541816089998593`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9998958705923419`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.6079392744176`", ",", "0.014732616808032334`",
      ",", "3.3888607388293568`*^10", ",", "3.372836346193533`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541816116589727`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999647576536559`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "112.69180719301156`", ",", 
     "0.014613813289659392`", ",", "3.389164987517908`*^10", ",", 
     "3.37311549472809`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181614312112*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9988972042456121`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "112.51487932372876`", ",", "0.01459086937819112`",
      ",", "3.3893175382652992`*^10", ",", "3.373093768400478`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181929577862*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9997594711390014`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "114.56830332314433`", ",", 
     "0.014857156304272343`", ",", "3.388518352453957`*^10", ",", 
     "3.372562629240879`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181934084222*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9998807229770997`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.67153465512573`", ",", 
     "0.014740863822992006`", ",", "3.3889698528342598`*^10", ",", 
     "3.3730221564871384`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181938845708*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999357133878162`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "112.62757026768635`", ",", "0.01460548307953687`",
      ",", "3.389303067680673`*^10", ",", "3.373330718331421`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541819437034235`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.999956130452339`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "111.84439903561068`", ",", "0.01450392185299816`",
      ",", "3.3896599111501194`*^10", ",", "3.373615370963393`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181948260521*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.99972811366762`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "111.58316297403073`", ",", 
     "0.014470044900240479`", ",", "3.3896302904161682`*^10", ",", 
     "3.3736542393931267`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181952490642*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999385578190005`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.2716601947725`", ",", "0.01468900831682467`", 
     ",", "3.3890965369855263`*^10", ",", "3.3730792829947025`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181956855914*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9998643867513898`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "111.54618369041482`", ",", 
     "0.014465249446517541`", ",", "3.3896423988328537`*^10", ",", 
     "3.373548277021665`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181961034505*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999632336550148`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "113.140196913948`", ",", "0.01467196022887339`", 
     ",", "3.389137989333908`*^10", ",", "3.37315368662077`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.754181965413647*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9998647963061085`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "112.84646140098502`", ",", 
     "0.014633868764640935`", ",", "3.389226644813058`*^10", ",", 
     "3.373151199322057`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541819696485643`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9999807692537146`", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0.2`", ",", "112.68229305101102`", ",", 
     "0.014612579500812886`", ",", "3.389283961963769`*^10", ",", 
     "3.37328583857908`*^10", ",", 
     FractionBox["1", "10000000"]}], "}"}]}], "}"}]], "Print",
 CellChangeTimes->{3.753034994414562*^9, 3.7530355463148518`*^9, 
  3.7541814255084114`*^9, 3.7541819739942565`*^9}]
}, Open  ]],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7530354445295177`*^9, 3.753036006137811*^9, 
  3.754181429386175*^9, 3.7541819770794783`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7530354445295177`*^9, 3.753036006137811*^9, 
  3.754181429386175*^9, 3.7541819779159946`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test X-gate", "Section",
 CellChangeTimes->{{3.7530306649515924`*^9, 3.7530306672712603`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Vt", " ", "=", " ", 
     RowBox[{
      RowBox[{"\[Gamma]e", "*", "B0"}], " ", "+", " ", 
      RowBox[{"\[Gamma]n", "*", "B0"}]}]}], ";", " ", 
    RowBox[{"(*", " ", "Hz", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]E", " ", "=", " ", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"\[CapitalDelta]\[Gamma]", " ", "=", " ", "0"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"HexactStatic", "[", 
       RowBox[{"[", 
        RowBox[{"6", ",", " ", "6"}], "]"}], "]"}], " ", "-", " ", 
      RowBox[{"HexactStatic", "[", 
       RowBox[{"[", 
        RowBox[{"3", ",", " ", "3"}], "]"}], "]"}]}], " ", "//", " ", 
     "FullSimplify"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setVariables", "[", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]E", " ", "=", " ", "0"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tmax", " ", "=", " ", 
     RowBox[{"100", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "9"}]]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"Eamp", ",", " ", "Bamp"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ea", " ", "=", "116.68"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]E", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", "\[Pi]", "*", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]0", " ", "-", " ", 
          RowBox[{"A", "/", "4"}], " ", "+", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"dState", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "2"], "/", "2"}]}]}], ")"}]}], 
       " ", "-", " ", 
       RowBox[{"2", "*", "\[Pi]", "*", "2.0548", "*", 
        SuperscriptBox["10", "8"]}]}], " ", "/.", " ", 
      RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Eamp", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"EaD", "*", 
      RowBox[{"cosWindow", "[", 
       RowBox[{"t", ",", " ", 
        RowBox[{"Tmax", "/", "3"}], ",", " ", "Tmax"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ba", " ", "=", " ", "0.015131"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Omega]B", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"2", "*", "\[Pi]", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B0", "*", "\[Gamma]e"}], " ", "-", " ", 
          RowBox[{"A", "*", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"dState", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "2"], "/", "2"}]}]}], ")"}]}], 
       " ", "-", " ", 
       RowBox[{"2", "*", "\[Pi]", "*", "1.9759", "*", 
        SuperscriptBox["10", "8"]}]}], " ", "/.", " ", 
      RowBox[{"\[CapitalDelta]E", "\[Rule]", "\[CapitalDelta]EMid"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Bamp", "[", "t_", "]"}], " ", ":=", " ", 
     RowBox[{"BaD", "*", 
      RowBox[{"cosWindow", "[", 
       RowBox[{"t", ",", " ", 
        RowBox[{"Tmax", "/", "3"}], ",", " ", "Tmax"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"U", " ", "=", " ", 
     RowBox[{"findEvolutionOperator2D", "[", 
      RowBox[{"Hcorrected", ",", " ", "Tmax"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UU", " ", "=", " ", 
     RowBox[{"U", " ", "/.", " ", 
      RowBox[{"t", "\[Rule]", "Tmax"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F", " ", "=", " ", 
     RowBox[{
      RowBox[{"fidelityXY", "[", "UU", "]"}], " ", "//", " ", "Chop"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "F", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Uuncut", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "2"], ",", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "8"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "  ", "Tmax"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "basisGE"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Probabilities by t, starting in |gdd>\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"Uuncut", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "2"], ",", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "8"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"%", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "7", "]"}], "]"}], ",", " ", 
       RowBox[{"%", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", "  ", "Tmax"}], "}"}], ",", " ", 
     RowBox[{"PlotLegends", "\[Rule]", "basisGE"}], ",", " ", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Probabilities by t, starting in |gdu>\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Fs", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]Es", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"e", " ", "+", " ", "\[CapitalDelta]E"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"e", ",", " ", 
          RowBox[{"-", "600"}], ",", " ", "600", ",", " ", "20"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[CapitalDelta]E", " ", "=", " ", "deltaE"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Uax", " ", "=", " ", 
           RowBox[{
            RowBox[{"ConjugateTranspose", "[", "Ubase", "]"}], ".", 
            RowBox[{"ConjugateTranspose", "[", "Urot", "]"}], ".", 
            RowBox[{"findEvolutionOperator", "[", "Hcorrected", "]"}]}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"U", " ", "=", " ", 
           RowBox[{"Uax", "/.", " ", 
            RowBox[{"t", "\[Rule]", "Tmax"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"F", " ", "=", " ", 
           RowBox[{
            RowBox[{"fidelity2D", "[", 
             RowBox[{"targetGate", ",", " ", 
              RowBox[{"U", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", " ", "2"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", " ", "2"}], "}"}]}], "]"}], "]"}]}], 
             "]"}], " ", "//", " ", "Chop"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Fs", ",", " ", 
            RowBox[{"{", 
             RowBox[{"\[CapitalDelta]E", ",", " ", "F"}], "}"}]}], "]"}], ";",
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Pause", "[", ".5", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"{", 
            RowBox[{"\[CapitalDelta]E", ",", " ", "F"}], "}"}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"deltaE", ",", " ", "\[CapitalDelta]Es"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"Fs", ",", " ", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[CapitalDelta]E\>\"", ",", " ", "\"\<F\>\""}], 
          "}"}]}]}], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"clearVariables", "[", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7488853096522427`*^9, 3.7488853843132267`*^9}, {
   3.748885417353154*^9, 3.7488854294811583`*^9}, {3.7488854742763357`*^9, 
   3.748885489059814*^9}, {3.7488855612591863`*^9, 3.7488855822530828`*^9}, {
   3.7488856162654743`*^9, 3.748885651000451*^9}, {3.7488856811770506`*^9, 
   3.748885689311391*^9}, {3.748885860213835*^9, 3.7488858768842244`*^9}, {
   3.7488859409083204`*^9, 3.74888595178605*^9}, {3.748895405063692*^9, 
   3.748895406761718*^9}, {3.7493052177837615`*^9, 3.7493052320955105`*^9}, {
   3.7493052839982886`*^9, 3.749305284989717*^9}, {3.7493053186872916`*^9, 
   3.7493053405716734`*^9}, {3.749316438068898*^9, 3.7493165292927055`*^9}, 
   3.749316669578927*^9, {3.7493169274993095`*^9, 3.7493169393827724`*^9}, {
   3.7505380461311555`*^9, 3.750538376425617*^9}, {3.7505384138350363`*^9, 
   3.75053843922939*^9}, {3.7505385278432727`*^9, 3.7505385973491745`*^9}, {
   3.7505387450259867`*^9, 3.7505387808473225`*^9}, {3.750540413516488*^9, 
   3.7505404286937323`*^9}, {3.750550277704084*^9, 3.7505502925475187`*^9}, {
   3.750636713952643*^9, 3.7506367285712104`*^9}, {3.7506367810129585`*^9, 
   3.7506367944661975`*^9}, {3.750636839238371*^9, 3.750636928725747*^9}, {
   3.750637131961508*^9, 3.7506371678448076`*^9}, {3.750637312430401*^9, 
   3.750637319618256*^9}, {3.7506374343180885`*^9, 3.75063743838774*^9}, {
   3.750637755345898*^9, 3.750637766872248*^9}, {3.7506379808408184`*^9, 
   3.7506379837241535`*^9}, {3.7506417433918753`*^9, 3.750641765349209*^9}, {
   3.7506418213968773`*^9, 3.7506418271965313`*^9}, 3.7506420340042305`*^9, 
   3.7506434795108786`*^9, 3.7506446396056614`*^9, {3.7506446955343957`*^9, 
   3.750644695874199*^9}, {3.750645435969263*^9, 3.7506454515492764`*^9}, {
   3.750688010843183*^9, 3.7506880334914827`*^9}, 3.750691994072916*^9, {
   3.7507722674395313`*^9, 3.7507723025050397`*^9}, {3.7507732467285523`*^9, 
   3.7507732492044735`*^9}, {3.750773325112462*^9, 3.750773332882262*^9}, {
   3.750776638213972*^9, 3.7507766589542427`*^9}, {3.751295354799609*^9, 
   3.75129540959721*^9}, {3.7512954475386724`*^9, 3.751295465580708*^9}, {
   3.7512955466048203`*^9, 3.7512955521082106`*^9}, {3.751297082070695*^9, 
   3.7512970866115155`*^9}, {3.7512971335765667`*^9, 
   3.7512971989580493`*^9}, {3.7512972996604424`*^9, 3.751297301408185*^9}, {
   3.7512986741563325`*^9, 3.75129867429158*^9}, {3.7512987376180773`*^9, 
   3.751298766564734*^9}, {3.751298820729862*^9, 3.7512988309885864`*^9}, {
   3.751298862753133*^9, 3.751298880846487*^9}, {3.7512989112969933`*^9, 
   3.7512989151275854`*^9}, 3.751300499492093*^9, {3.751300531373438*^9, 
   3.7513005762040167`*^9}, {3.751307337600334*^9, 3.7513073393674064`*^9}, {
   3.7513125441895523`*^9, 3.751312545734607*^9}, {3.751312591055764*^9, 
   3.7513125914754844`*^9}, {3.7518105960483513`*^9, 3.7518106145567064`*^9}, 
   3.751810763814869*^9, {3.751977887691564*^9, 3.7519778883701715`*^9}, {
   3.753030682517041*^9, 3.753030688887377*^9}, {3.7530307215461473`*^9, 
   3.753030729130784*^9}, {3.753031021758398*^9, 3.753031188441472*^9}, {
   3.7530312454286785`*^9, 3.7530312610347023`*^9}, {3.753031619101736*^9, 
   3.7530316974066744`*^9}, {3.7530317480975065`*^9, 
   3.7530317909063845`*^9}, {3.7530318242212133`*^9, 
   3.7530318819250107`*^9}, {3.7530319165910597`*^9, 3.753031917341626*^9}, {
   3.7530319927637415`*^9, 3.753031993494321*^9}, {3.753032065685779*^9, 
   3.753032067855538*^9}, {3.753032114005972*^9, 3.7530322464957304`*^9}, {
   3.7530322875031366`*^9, 3.753032288089797*^9}, {3.7530323289033127`*^9, 
   3.753032359580657*^9}, {3.7530334200676436`*^9, 3.753033438413086*^9}, {
   3.7530334797373066`*^9, 3.753033502804032*^9}, {3.7530335664973803`*^9, 
   3.75303369718519*^9}, {3.7530337337451363`*^9, 3.753033943052692*^9}, 
   3.753034293855198*^9, {3.7530348562837076`*^9, 3.7530348615766397`*^9}, {
   3.753034893450142*^9, 3.753034900454151*^9}, {3.753035472381369*^9, 
   3.753035503783269*^9}, {3.7530368840546727`*^9, 3.753036902681608*^9}, {
   3.7530369911372914`*^9, 3.7530370746988525`*^9}, {3.753037264889312*^9, 
   3.753037317892022*^9}, {3.753037357580143*^9, 3.753037388924554*^9}, {
   3.7530374284204917`*^9, 3.7530374315636206`*^9}, {3.753037511875041*^9, 
   3.7530375420313983`*^9}, {3.7530376248370433`*^9, 3.753037641543674*^9}, {
   3.753037698807423*^9, 3.753037699541931*^9}, {3.7530384199604483`*^9, 
   3.7530384237334824`*^9}, {3.75303860337033*^9, 3.7530386690739026`*^9}, 
   3.753125071688243*^9, {3.753125104492366*^9, 3.75312513057036*^9}, {
   3.754180919404713*^9, 3.754180940331639*^9}, {3.7541809776046777`*^9, 
   3.7541810959015512`*^9}, {3.7541811280849857`*^9, 3.7541811302257504`*^9}}],

Cell[BoxData["0.9966940553820748`"], "Print",
 CellChangeTimes->{
  3.75303740300622*^9, 3.7530374440331383`*^9, {3.7530375247291803`*^9, 
   3.753037548637617*^9}, 3.753037659167472*^9, 3.753037716984932*^9, 
   3.7530384403407946`*^9, 3.753038687158453*^9, 3.753125083107671*^9, 
   3.753125115862822*^9, 3.7541810415089293`*^9, {3.754181114286945*^9, 
   3.7541811372187166`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
HMLnma7gf/4/6niTZw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw8l3c81f/7/8859t57nGOESpLQwJWVpEJk773KPudQRkMlUSIlDaQhREnW
W7pIkdKQJBRKNqko2+/1+eP3/evc7rfX63U9r+txjed1FLzDbPwoJBIpj5VE
+t9vUFyzbZvXN31xu8f/PQzRwq6i3tCQ3mmD/89DdkGd/r0k+P88+9h8QX2M
/H/MKq4m/+cf5f9YlMFhXMPG+n+s1DnklyjCBmu+gqauphZq6b44s1OBHXoU
EnI+/9iExpdu3+fZyAHfs9bpknM3oae97+xlCy5IPte3oVB6E4ZVmki5O3KD
Uv+Nztu9mpggrmSg7M8DKcK6f6j5mni9cyDpwTE+0NORzW/X1MRDxRtTfHsF
QdXLc0D3jQZGu1Cv7fIRgtzRkW1JERoYxyNQum5MCDYaNH0ol9DA1JCp99P/
hGGThUot38ENWLT+vlS8iBj4Xdaz+6WpjuU919Z75oiB3ZNfQW7D67H2bKqB
iYI4DOdtCS3OXY8vx0O8uDZKgEVez5NLYutxpHjdvSwLKdhy8EdHjug6nHaR
/i/mvRT4vQsQXPi0Fv/xcLe5OEqDcnzCvdJra5H94Oi0gr8M/G7yL/2xdi2u
US/cWnpMDsL59O3MbdRwU6ewr08vDb6ctr1Q2a6CvwuydY6tUQAJMZHyhZsq
WBEhz5EbqgAGdOHHatEquJVvXVE3SREmZaJoKlIqCKZG0/vXKAHns8qUXwfX
IEm4uSEsVAkkpt/ebjNZgw19ezPTqpRA24Hzo7fMGjQ94qj7crcyqNS4Rtx6
rYwW5WFxhqFrQGMWEtm3KCPv0dl97lVrQDzYJHqdiDK27TtCjSOpwAUP1++D
P5XQevRUY1WGCtBJP1/yFyuhPe0G58YqVVA0krTsVlVC73OvL8qR1gHrtl6f
xq2KqOxq46+3ex0kjRk975VVxB9ru7Y4ZayDUyu/73mSFTHw+ffui8rrQS5S
KefaKwUMXVqg8e5Wh4JMS4f7vgp4JHjt/YULGrDpC+/8jbs01N9aliDZowFL
YSmN4RdouMKmY62rvBE0Vyyl0o/Q8Hi+4Z+Iyo3QrLT580NrGppOFF+LPqQJ
8Tz3rlYtUdFC6dm38QubgLlG2dv7tTx+8U/P5q/YBMKZV2L7iuQxvMjNclPn
Jpgv+t3ecEYeszbN1TCktSD1xCXnMnN57N+x4QK5QAuMrTrvrrbKIdP18g6J
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
kR9DJ+XcCOe0nUmdecMENo3JMFfC/w/8HOjW
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw8l3k8lO/3/80Y+75vYYylyFu2JOpUZEmSbNn37GSdkVTKkqRICYWKUoQK
hZIOkS2SJCFECypJ1kK/+/PH7/uXx/Nh7nOd5XWu6xw5z8NWh8hMTExiLExM
//vrH9ti3ekxtk3U9uGTB4Ga2F8yFBI4NLP9//MXW/8+nyEm+P88/9D0j+oU
6f+YIrpB5vci+f9YmM5mUMtC+T+W7/ty6IQQC7yGo8al6pqoqfPijJEcK8w4
zQU4fdFAg8u3yrg2sYHqFsFDadc00N3Oez7LjAP+up4Zs5TSwMOPDCVc7Tlh
S4pbvfMHdTwuKr9dwYcLXl2MKPh8Qx3z+j4m3D/JAxKhISPVGuoYfHdTivcQ
PySrJE2c71bDSCfZXBMvAVDnevGZHKmGsVx85SpTAvDtYtlZB0k1TA2cfj2z
KAiWR3dfZD/8H5ZsLJM4JiQCX9fVb76lrYoVg7kb3a+IwFCN/HrDbxvx8dnU
7YZyonB70uFoU+FGbPsW6MGxSQyYHmYMSEpuxIm7KsWZZhLQ84/vCJukCs44
ST6Jfi0BL/2KGm9+UMZFLs5OJ3tJ4KVfIOcUKCNr0OSMnI8UTF/eYGOjroyK
qnd0y09KQ2ypWvMbhw2o0Sfo7TVEBRAKSXw9pISzhdmbTyrKgdVF/1ZGmRJW
hcmwXQuRg51pLTs5TyihLo9KyQATDbSOpjx4p6CEsHvXzAFFedhVEOfgHqOI
TIItDYdD5IHL3Imz4oAiNoyYXzxXLQ/aOSWHnikr4u6j9jptexTA6quB9vKg
AppVHI7dGaII9dJanEGmCsgdN7/PtVoRDoQa0qQUFbBz31HZWCYlOCqzJdWL
rICWk0mN1RlKUPJKgLeiXh7tqPnsm6rXw9C3rfuntsuj5/mXl6SZVMB940Ll
ThsaKjhb+ejvUQHLZ6UuYltp+Fm5f4tDhgo8+cPod5ShoV/z+MAlhY0wOsPz
S3ZKDkNW/lC596iCea5ebGCSHKq3x80qZ6jCC42fEmEhcvgri7XJZFAVBt7Y
7eq1k8NILUHf+OD/4PVp54jSDXJ4NEC57M8FNRg7XWjK6KbiNt17x8UH1eCK
2fg7/SdUXGPZbKmjsAmmBm+6Hyii4qkbO3+HPdoE6zlcmvyPUXH397u5kcHq
0M7n46C8iYpm8s/Hvl3QgEmtUI/TO2Txg096Nm+VBug/avdVpspiaImLhUaf
BuzhW03aTJLFTI2lWrqkJjzr7IxNaJLB0R3/XSAVasK1alXxjv0yyHDO2iFW
pQVOrbJpYQxp5LzuPb+1TwskQgz3jLhIY+64xl3nJS2Yju/dcHW3NDYGvBQt
2KYNyVf2XlwQlEbeI6Rp1WZtMGjfvpu3ch3ezAzMNejbDN11+Res/0nhlve6
VoeWNsODMwemhyelsH0dK3uypA6MhGYy8nulcKbwekSnqw5kmuzurSyRQv2K
t2b2X3XgrIB+NLeDFPZ07VgOXtoCRo6r8vJPJfEfm7BdjqQexD4Q2rMxRwLv
nC65zr9NDwa9L2R0nZZAK7Zd30676MHt3JGoo3QJvMkaEke/rgfvfIKrp60l
0JSltcRaSR/+fn2pqsQngRnk2H88mtsgvb8pbX+SOCqsjt85tQfgJ1e7p2GU
GHbGxvxeDgBIb23I2ewthvQVfghLBdj5R1Va2VoMW/9uf+P2CmBf308dEQ0x
DP6TtbrNdgcIPbiQx/VDFAf/KhYfVd8J++9W93UdEkWF5ferm7ftAq2NFUza
riLo98j0obPFLsjfLTXaYy6CpRHVQfHuuyBrs3tAor4Iak9fGuxO2AWLOX3z
6yVEcPf4/trAzl1Qx7VHNuKtMHp3NkfecDWAXRf4hDKthPFOirZqa6gBFEe+
5blnIIzfTQrHp08ZQKutesgnTWGMbIyz2nbbAHIqfa8WCAljQrW++rufBqBl
sYUpsk8Ib9548I37pCEwlCgtGR5COOFKLdS6aAiBhXNCsdZCqLouzdHxliG8
6RgXizcSwqrLQW232wyB0qsvNqUshE1n1982ENwNOpfBSWJOED9F5XlGF+6G
m8wNmv3nBFHe7Mz78WYjMHmx26mxVwBx8zFGb58RPJONyL/TLoCucmEizV+N
wD4vdu0aCmD2kv2BIg5jsNZK8sVSAeS+vaHNb58xcJs9ufEkUQDnmFtrfvQa
wzZLDh1dPQFsesqavThuAmWdh5p1S/jxkEaCHRfZDP7EDbTeWc+H4VeusvoK
m8HWLJP6MWE+PM5c+ahRyQx8Kj5dkCHz4eW3H0Vj9prBdyPyobwhXmw9suPd
xCUz4Piul/f8Ai+qNv45+GL9XjDfeebXhlUenLMKczi5zxwSDxxxWRriRqa6
ZI4PbuZw7++s7fkObuRRvF6rG24OTG5HUvQec6PSYpfEzGVzaM+KMOnP4kb7
q6oDrqPmcFJv3Sk9G26sG//quC1iH2yDaIpIDxfGR7o6L2ZbwFyFkH/ZJ068
cnTAbrXEAvxO6OcqvuPEilN2B5ifWgD96ezeujZOHEu3MOb7aAFnQ/i9d9/j
xJ1loL5eeT/oh9r/rTnKiWufZSgHa/fDka9hylMSnFh396ftYJAlWDGCvRd9
OVBH+v6q3rkDsHHr0vIVJXacrlafLsg8AIaF7MOO0uxYZPVgmDP/ANS+WPwo
LsyOYskVzwbKD4D+G60P50nsuDRbdTKm+wAIRT819RhiwyettSyPhazg0cu5
U3cusOHOyOc8W69YgUNtXdaGFVZc4t29dr3ACjYkn735dZYV7xc3TbPftYJE
471zdydZUW6k+VX/EysIonzVN37HimSz1gvRH6ygzGj3ZFcFKzbLdorUUK0h
PrpjMjeQFc06+qS33LaGhInouT1fWfCxgn+WzX1rYBnX4vo2zIIqx//yh9da
w7xCZ8SNPhbk1KBSyjqs4euuHbT9L1iw/bL/FG3GGijyFnEVRSxo5rnyiHer
DYh1Si7dDCTsPTmvrmpgA1fOsakWeRP2RORK9uy1AVeT6Jd1LoS9VqO8BBcb
eKdRbapsSdj7Ly3+z0kbuGCz6/DCZhbcuyxn+aXdBtJGLRtZWFiwzqqqjbnX
Br7uOLak/o+CqqXGhnIfbMCa/jUzYJmC3G6BOs4/CXtB39JZpyn4sqlqXY+Q
LSyWt1e9ekdB83STyafOthA7v7hFsIzg9cGnMqdt4dBzMmXYgYITYgY/xRZt
wcu8z3PRhoKJ7GLOV/7Zwr46KxceSwrWT+Lma/x2//PHSM2YguqlwpN3NO3g
+x568A5NCopo1O2vo9tB3YnfH9I5KDisxyU9vmYHDxdit75/yIwxG0fPHGI7
SNw/sZrZ95lRbN3Dha98B2Et9iu7w11mtFx17f5OPQjjXGd3jF1nxsZnFfEL
Bgdh4b+u59RUZiza7TjFcfog3PcT50UvZjTYvOlgatpB+Dk/tdzvyowjipQm
3uyDUE+2qPnrwIzibOV5QsUHgaqYkuhuyYwpbaQD0h0HobsySatyOzMetiiu
VuezB13xjKJOSWYUPH9/T7KYPYgJXeF7IcqMVZ3VgyOy9iCkLfv1pSAzLpm/
+Hde3R5GHL6EsXIxY9zecZMfB+zBcK5DeuMKGWlnp97vdrQHjlinIzlLZGxq
/xWY62kPTZ1lt0XnychuxpS+N8IeXi1NG22fJuMFU+n+4kv2kLFfxUr3Ixm1
kxUCSHn28PzMlLPkMBn7Wjau2N+yB/HJZBHOQTJKmuhR2R/ZQ02PeLbAWzIW
GB3083lnD79vPq6uaSNjpcGFJZqkA1ytqFMTfUhGu1PZKTE0B3gb+U/8bgUZ
lxquretRcYDF+eU8k/tk3LarfOdJfQd4/UwvLvMu4e+OjuQRZwe4l37tCb2A
jG+3sUjkXnOAvczb6z6kk3FR58hWEUVHKJblzBIMJqPl5gwbmpojqHZxTZwK
IGOJ1t3Dm7Y4QnbvqOsPXzK6qn+4tWePI/zbEaN/35OML5R3CR4PdoSqkTfT
3w+S8dI6jm9fHjqCTLbuisMuMk5L0ljn6h3BbWR2YwSQ0VRCX47U6gjfB/RW
k/XJuCISfFBqwBE8IjZYlW4moxff6+f71xzBRn1z64gyGTXJObk1xk5Qm2CU
ES1IxlSmiurm/U5glc67J5ePjF/W2nt67J3gBN94YzM3Ga/8XWH/EeAEh4oF
bqmykZE07x4ll+YEvQbPPjiukNDx95F0tWwnoC/Ufn26TMKqXxl39W84wdKo
cMDGRRL6TTd9tK10AqVCfbYNsyTs/rrBIuWdE9x7tIWlaoKEKl92+WeNOsG+
Xwd/Mr6QMOGTY8LNSSew7vB7tOcTCbd8TH1c/9cJwoyK2MVHSZg+cuttB8UZ
jO3Z54WHSTj1oX6mn8cZYp1fP6AOkTB/YEbpt6wz6Fiqyx/qJ+FSP4cBk7Iz
sMR+/pXXR0KrdzQXHk1nqKx2+/m5l4SsvTYX1+92Bod5TvPC1yQM7qz55+Tn
DDXxD8a6O0g45ynM2xXqDGbfjK5dbidhzNLhdTuPOMNrHqfbfm0kTJJfv1Uh
xRnOlaoFqLeQkLv2lMnlDGdYT2ZkKL4g4UWLYVv2q86wcZ/UhGIzCa8fyQz/
ftcZBNPhrPFzEirx/YpzrSLY/42wTyMJS2+ap3XXOYN1b59FWgMJa18xl1Z1
EvFF3JxbeUbCHsXwz7E/nUGK2xx0n5LQ/knn7+lFZ2jLUdLKriPhiKUy2YPJ
BWwLerjXnpDw+9FRGSMBF8jn3KX1/jEJWXos7Hm0XEC3t96yvoaEusc3duTR
XYAjZ51TZxUJ64VOv+c74QLhGWEdewk2Kh77evK0C6gyjsy1VBL5682h+GS7
AFfn1brqChL2+88L9l93gSKl/pMqBLv+s5QzK3YBrQqr0JwHJAxUYQe1xy7g
cT0+KuA+CWefeZlfb3QBRRfZjx33SBht+8xRsMMF/v1lM9lAcEIcnbEw6AIP
FzfKvS4j6tn36X79qgvEbXmnOlxCQoWgnc/UWV1BVtzotCDBd0m5nQW8rpCZ
lzG0s5iENarWU0myrqD0JDDv7G0Svj7VIL9/lytsqAo8PFhIQsqm/MsjCa6g
9/ElXLhKQoN4LjW2866w/LVcx/0KCePeRTerZbmCWSf/RdUcEq6csJ47VuwK
Hx+6TD27TOihm91qXZcrnHcJWf54gYSaivRJw3euAE1bHcrSSRh6ZDwucNQV
pHMF9h9NI/IvV3/v8awrBF9gzZM7R8LP4RE8DmJuwKxjYXg3mYinZfRmHNUN
yvXQJ/80CT2lLLbdUXaDb8OuJTlJJBx+viFwUd8NeEe3N5ckkHCd+GWyrJEb
uDFPTDTEE/0XxHzF2MINDr1fzh8/RcI+4eHWTHc3eFrPnmt6koTC/nvdn/q7
gYPAOPu5OKJ+T2sWP4W7wdumKJ7hE0Q/CSilcce6wfuEuDV9grsOXVTSTnSD
keYNe28fJ/T8mKne6Tzhj3VlMJVgM94Q2/gsNyj5feH67WMkTPYc/F5y3Q2s
yxQlthP84pFpQk+xGzQFFK7/GEvkm+uR1J8KgldchC8RbOAmXylX5waPDm//
YktwXGW62Z5mN1h5TbmvRHA929rH0C43+Kz+LI+V4BWnwCPZ79zA1F7lyfxR
Eurd7+fHUTeoTbo9+pvgaIrxna+TbnCt6dwKE/H7avvKHXy/3QAvlQlIE7xQ
Sn2ns+IG9lPfvpkQfIXJZMs9sjvkMP/TO0lwbckq2ZDNHTbN3WhrJbjfpqqr
j8sdbllmBMkQ8SyuBVwJ4HeHYZvIqpMEixbL+awJu8Opg0VqswRvtu7XyJBw
B1OZksTDRH5sVs+vKsq4Q3fQB6dlgiNuG7XV0tzh6u8OwTQivxkHVi7tW+8O
+74Ir1Mn6tF9y181St0dzpbsNMgg6vVzP3WJfbM7jCbRBKyIevL+6Xueu9Ud
rGWmuiWJeptb7HZqMnAHTqXZriZCD4FLf5TsTdzhiXl1/M1EEqYUPJj9ttcd
+m9wB6YQ+mldkEkRsiX8SbNT8iH0tvvaco2nrzuIu/AfN0kl4ZfQPWIfA90h
2ol+egehz2SDnCi3UHeQjkwf2XKehB2fdTWdj7jDYOZshRKhbyvV6Lu2Z93h
xItEuamLRD+stnD0prlD4alfk68vkfDyKzE/q0vu4Kxdz/Ewk4QD4dUK+/OI
fHud/xeQRUKP2oU803vukBV/MeMM0W/ks8YrLyrdITz3wW8g+vGm82VHoxp3
+DnBm/ad4Il/m8UMGoj8fqww3JRHxPc6MQqb3eHmh2FaE8GqhW/fQLs7jHDf
LLLMJ/rPOCpd/407MCUmrre8RkJB8ebp2nfuMBcdYf2c4KpJ4X26Q+4wOVtq
onadhHZPvO8+GnUHnUle3gsEL6ZWcWz+TPj/QOPDN4KzXSl+lZPu8Gt7v9CO
G4T+1G1eaEy7g5Lwx58pBA+Rbircn3WHe3lBpa8IPv7m9ym1RXeQe/2rgqeA
hNRbhh9L/7pDw7+iVCOCG+kXd2xk8oAPlVaXGQR7m47nFVM8wPzJtO5Nglkl
tVbWc3hAZoM310uC73w75VjE4wGpwuTqnwSbPe2pURD0ABjPqeQj7rPv52li
haIeEKy/64Iqwefcw6PkpDyA5LiZ24RgNc3GN9dkPeAt9e2oG8HdzIKaMgoe
EP1zJZdBcPhbj/TcDR5AzUiYPk+w8O0H05L/eYD4f2KlRQQ/iibty9HwAJkr
JVnPCLY3O3BXTMcD+nk5LAYI/iN1g+OyngcM/1pJWyQ498eMr/AOD/CWC90l
fpOE8GzniwxDD9gw+2/ddoJH09MVBEw9QLavrNmH4FOeo6fSzD0g7nMZ82WC
5bXVP/Ic8AD57L21HQQ3scTtSLX1gCoem/Pst0jo8+5VHqejB7Q9dqTtI5i9
WHYl2dUDvm8N33qF4JKYw45sXh7QaOxxc4Zgc/NnNYm+HqA3LPLTsoiE09J8
YpQgDxjvb7j7hOD0n65Rp0KJ77nc0zSI90KzofwNU5QHGD1Q21NJcG/GmsaJ
Ix7AZ6dhuOsOCeneFumrxzzg7I+8pUGCa9mmzf8keUDWGauJrcR7NKsworDx
rAfsW5CHGYJVDLpXnNKI890kaZV3ifsntqL0aZYHiJrk/HMj3reenMKE6ase
cPmQio1ZOQk5qy85y173AOs4cXED4j2M+UXnPnnHAy7w4EtH4j2t4PX79KDU
A1xDqvqOEu/t1EaHurH7HqCYxFxYQrzPjj76QbtrPcDHfqFd4xGh18F/HWzt
HkBvYNo9TswD4UszhbpdHnBky8XHocT8UCIydtS/xwM+X/gyzEnMF5KWTRs7
Boj8FLTs9ibmkb9NyWfPf/OA/NIx9RvEvFNXLrBXhMcT3DaLHOp/T/R/B1ne
WMATjsv/LFwdJPpx8vcfuognuDQV+68n5rNc+b6SfmlPOBjy4VriGAljs69w
5qp5QoaRMLf9N6IfH54de6npCZ0vfval/iD03BP7eFXHE/aPOG3HnyR05nEL
cNvhCeyxn+7LzpFw+yn5dpqlJ6Rc5dxRRsyf9GvCBdY2npAqGG/cuEbC8jqW
mAR7T9DeRNLsZiKjzOJX5S/unqC3lTWwl0LGtcDSM8VhnsDvSgkOIeZbnTN5
HgNRntC32E7W5yVjSNH5rVwxnsB7Vyl4hZiHh0dDJ4NOeYJPPEnVWYiM9bab
96hf9ITn1xZIyRJktLK69/lJlieI9y6bCUgR87OF8imTXE9g5rF3PruOjLym
0k9cb3mC9yHP3gOyxD6yO+vgVLEnTDOdP5JPJc7fJTAXVe4JXYdOqw/JEfuA
Hst/56o94SKLAJeqAhlndU60idd5wh1pRjcokjFJa/nQTfSEIIPvfwyVyFiu
+iP/SZsnlPOGPli/gYwGyr76Jl2e8GxoEtiIeb9P8eO7nh5POCnaFTNI8KrM
W/6pQU94/9Su2XsjGdOl9pdFjXrCjX8qhlKqZFQQb9tD+uwJBnExx9oINhd4
ekp82hPazQQt+dXImMt8a86YyQskqBeKPdTJqM4ke6GH4gUXw0H+J8FNK9n/
uXJ4QTJuf3NUg4zf51N9ogS9YCY8jCtLk9inJiL7CxW8QEd76PEvbTJ2f5qO
3KTsBT7fC95mEvuK90c/gSf/eUHBjjGjXTrEfjLgbNaj4wWrnc1SFVvISH3X
98VF3wvSJ5c1j+iSseqNZfzkDi/4e/Cwzd6tZBx6ubuOaY8X3N+4sV2I2IdC
2+rtU/d5AWeMegHXNjJSXujOi1l5QWGO3yWB7WRUfaaqtsnJCxTkp//t2UFG
fFLU/tjNCyzDXJ8e20lGmxqqr7G3F1ywedHRQOxfRx8IX3cJ9gLnZqmY2N1E
fcvPb5sM84Lc3SpffhsR9S1hfx9JJ+L7+34x1oSM7YUrAqknvED9U8rfJjOi
vtfp5WIJXpCvfk0ywZyob+6MWWGyF6RVOBvZWhD76+VP8Y8veMHct0s1/1kR
9c1wpRpf9gIH+uE0bRuivmn9da+veEFxSMOouR0ZA5Jfzk8UekHEqtGt+45k
fBxT5Sv2yAsE/+je3uJNxk+Nr47ZPvaCN+pfkzJ8CH+5vl28WO8F2f5yfMt+
xH54VQ75WrygRggdvhD7KnfdeXH2fi+4l1YjuCmajC6rfm1Ly15A7fScajlH
xmSjhBGdNS/Q1avhiCf23Ypz1+Yjyd4geJh/ettFMrLK9Mn94vQGQ23Z6uJs
wn8wjJmU8ob3urqXLQrJyBQnvXFguzfsz+LhFKomo0qr7i5xA2/4zBSa6FBL
5Jvf5qCdsTfkdLJxXHxCxuLrKfE9Ft6ws+LVxg/PyNg7cSuH39obTMKYWH80
EP2s3nDP4qA3/KnsdZl+TvRjw+Jgu5s3xPSe2d3UQsZYDqFZdm9vcL75PDGb
2P+LDqixm/h5g9D653EuHWT8+9Fb+3moNxwgH9tb20XGm+Se1CcnvaE5SfnG
414ydpn9KFhO9AZ1iXVson1kXMpgr92S4g0+auXKXu/IuE9+x+fKDG/I934G
ve/JGB3o+PfXZW945LNMXR4g9FAZJaB+1Rvae9fFCQyRccGwdHtpoTdoKvls
kB0m9JzaYj112xvWDP8rExkho1nvmP+GUm840Tu6gTxKxnxvics3q7xBfEhE
CT+SsbVUu3SsxhsClS7IXBwj9DO3v5H61Bu2bc2luo2Tcd32wH7XBm+o+lcu
rviJjCaJSdO5zd6QUnS57zPB7T7pWW++HYL/Cgo1SkKZ8c3DTsrBmUPwvE94
lSmSGYcoXOEDc4dg8/GQzxYMZpwuSDT/uHoIBIrWnnUcY0aBkRjSTz4f0Iu2
fKuWwoySajUh4cI+cGij6Hb5c8xIOzY/OC/uA9E15Zls6cyoLRX6aEXOB5Yq
OWPyMpnR/uChQE5tH0B1vRMz15jRo6ig/5yuD3j0lC7bFjBjwPyIkcB2Hxi6
Y8l35yYzHr3oSBU39oHsbAE2wWJmTBjLOnfVzAdK4xtHle8yY6rG2z8y+32g
RcQ2Vq2MGfNf7X+raO8DcdzMLP/uM+NtmXMGxc4+4MxhfaKjghnvB7ffU/Xw
gcI8PfGkKmZs5DJK0QrwAXXbsLMt1cz42URvx65YH/h17N7EuadE/JcZpU1x
PsDReKhjqJ4ZFz5XSZgm+kDe09jzssiM7Amb5izO+4DovOmNhEZmVEWFYufr
PnDhDN3r2wtm3MznKTp60weagstIiy3MCK7X4r2KfeDBgIftv1Zm3L8i4RpQ
4QPPD1iYcXUwY7gun1B0kw983ZpzVfMVEf9p87i/rT5wVEx5yLibiL/vzI/j
nT5wfoTR5fGaGS9HUloT+3xArfWYwf03zHjt+a7NHIM+cCZFS+pLLzPeETxR
kDpC2E9M3ra+jxlr7y/HXpzwgWr+z1av+on4/+lMif7wgdkYhcO6A8zYbhF5
8MovH2DlJb+8P0jo4fu0xo0/PpDkRHndM8yMTMqfvpRz+4Lv+rqfvz7/77zG
zk/8vmBb1pnZ+vV/8d2okhTxhZsbmI0fTDJj7EXXU0nSvjDKNWz5+AczSqlt
96+T8wWegQDBwZ/M+LhVynJW0RfS7pZ95Z1lxuXVfmlXNV+wxzK/+wvMmJ1d
Tbmk6QslA9tYZJaZUVfr8rc2HV+wWT/+Mf8vM9L9rGs37/CFAemFifdMFJzt
6bThsfQFwxF7ZzVuCl4ILtU3tPGFhfd6bzfxUVCd/SztiL0vsBaa7TQQpGDI
dtOZT+6+sI/D60iWOAWnbjeerQvzhUDBcbFZRQqOx1Y3Bl70hTDDsy9rDCh4
Suxy8Y0sX1jlOFUeZkxBWkVk+rurvsCLLQfVzCjo/lXD1fCmLzym3F4oP0DB
oQOly5IPfWHxjpLTfXcKHv2eMmpZ6wtjQ7+LA7wpKHnavyXpqS/o3/gQTvWj
oH2dUuZssy/MKOwvjzlMwV6lG+rtfb6QaH/1fNcxCkY0nBBjGvSFbxr7pM1O
UlDQ2XVt84gvzHJsfFObQEHLC1Ivb3z1hU9h+U3hZynY+TfT98iSL0iJ+hlu
yaZg0OVIi3srvnC9Rmxw51UKcmtYb/7M5Ad7tc893ZpPQTMffuYDHH7A/Nmw
brGQgi+6U/I3SPrBu9qnuXnlFGwwm91TK+MHd/TnQiweULCuyWF+j7wf2F+T
np6spGBFzQbzQFU/WE5ytv1YQ8EyzfTFv+p+YKuaPLT9CQXvlC4WpG72Ay7H
q5SkpxTMv/5iuQz8YEd13abBBgrmSKrdAkM/oOcO+kw+p+ClS5mWr0z84ESj
R+LnZgqmJHvfnrH0A5HlHz0lbRSMCiXbann5gbPj6PNT3RQMnfJnavL1A88t
BscleigY4P36rk0Q8b2rE2fRG6I+9tfJ9Cg/GPnhZX2rj4LmO+F+zWk/YO2W
yXYfoqDJ41tOe1KJ+MXqNds+UNBAm4dtIN0Poq6YsWiOUFB3w5DL3xw/KDK9
XM8xRkEF/hguKPUDqvXd2cWvFJRN+fio6z7hT7DnnuRJor6UPZ5uD/1AM78r
XP4bBfmXxGrj6v3g1pVqlxPTFOQKP+Et8NyP2Of2HDCYoSDr9y98BS1+0Hxe
okN4loIrIw99nnf7QesXoaDv8xRcdJAWtHlL5Lff2/f3IqH3NwlPP733A0Ox
fW08fyg40WItzDruB5LDp9NOrBH6uferwXSeiO+TwxN/dhZ8pewQ/H7ZD1KO
B89Kc7EQ8wmKB6z5wcPp4aFJHhbErLTDZ9n8IUsytrJNiAVLT/wn3SXhDxYJ
ZLcSKgveXr7U6irjD/oHjs9LK7BgQcRKxE+aP2RK1NTdWc+C2b4d7fyq/pDH
u7ydvIkF4/f7R1uDP/CXxg1XAgsKi4TnXTbwB6WpuuspBixYNBDT+N7YH+6u
za+FGrNg66FUbvf9/tCjTBLwt2BB7th714Pc/aGK3dJv2pUFL9+Zb0085Q+J
1fITQSdZcH3I2o/WJH/I/XvJuz2RBWu02IS4z/rDG3FnifUpLDhYL+6ScdEf
sjNVRt9nsCD1rf6v/Jv+4Hd9z3GWmyxYQjolUfPCHz77j3ClNbGgfksK/G33
h4i6k+ZerSz4MvWiF7zyhw3Ri+fWv2TBn2K3ypre+cP+/3Rjjr1hQW211l2v
J/zhmpXtxQMfWbD5d7eP8A9/2KYYmp71iQXtat+fPfjLHz583mTe/pUFj+z+
9vbDMvG9pb3//A8WrHfkDZjiDADrRc1ir2UW3E8VS/uPLwBmhOxG+VZYcPSz
bFWoUAAk0l5UFK+xIHOYxtqCVABE1r3/fZuZFU1P22Qw/xcAcr8u7R3mZsX3
5i7VxhoBEMtyKJSVjxUDBH2GzmwOAC5BXTE5AVZMzWMo8UMA2Hw+kq0hworS
XnF7rQ0C4IlEgZayGCuWbzgTetk4AFgrLFZFJVhx5/SFzPdmAdBwRoZnRZIV
X1deebxufwCUdrC6vF9H8JJIYYpjIBitFz7j9In4ffNOWSG3QODPmdArmmTF
+xcCr171CoSLZ56s/ZpmxXSVhoulQYGgFJr0PWmZFS2dgxK6jgdCWM9T1jhe
NsQNWUwH4wNBeax1e6kQG6rPN8SOnA4EnQuNGV3ibMh3XixqJj0QkiY0f87Q
2LDrWeMhwcJAGCRruabqsCGk/vh45XYgsGu/WNmjz4bl9uKu8qWBIHXUz2N+
Bxue/xVsp/0wEGgK16wF97AR85uEiV1LIDQOt3DaOLJh3U/D58MdgbCt5xiE
uLKhal3IDt9u4rxiIe1wTzbktm3aEv0+EB6s/zyjE8CGL5MOb7jyLRCMdx+w
fxTNhtusr9ykzQSCYhDbdmosG5bKNlPvzgWCxTZtp6gTbJhaIylRtxoIrYKm
H8cT2XDvVDPHMF8Q9ESUx365wIbt+9Z9k9MOgl8ReUset9lQT9LEt0Q3CNqb
Jf59K2bDki9h45rbg0B7fv/68FI2TDnRMmhoHAQ5b9LSoh+w4Z4H4S8P2QfB
Y7E45ctP2LBVuK2sODYImqbKnS1eE/lSzSz8FBcEjFODeXy9bNi72yNHNjEI
mEmRKqN9bDgauZyQeS4ILBsKtCqG2HC5V9n5ZH4Q6JkkyG2aZEOmH/MH6gqC
QPJizZ4T39mQlaXRZLEoCHRiZkQ+/WRDwc2OWsH3gqDuCEP0xwIbqmSmcDpg
EOTCnxwWVnZUL7NjutQUBH4trKHMnOyo00xb6GoNgh3iUZfFeNnRYP7xx92v
CXsG40WnRNnRyfZbjfoYEa+E8E7XDeyYKmLuy04JhvUhfmUd+9kx4z9xF0P2
YJBmU+FhtWXHbKNPVse5g6HZv7zNwpEdb0bFwpxwMDz20LrLdogdn74tFRlV
DIY0po+H/8Sw43QmT1O1STDE+DNipm+z41zZ+9rZvcEQvD3hZ1oZO/5pvnXv
P8tgOL4wqKVWyY6sC9uvFtoHw4ilSrRzPTvK2oWEp/kHg8u2yO8evexoKfqK
6ns2GHJiu9101tixgkdhcCUtGF4eCTmfycyBwixHMjMuBYOiUaH8KDsH9v+m
cdbnBcOvAeWIzUIc6P6a/lv4fjCYqMxR3ipxYGNrR1lJVTDsWvNnSdjIgQpI
9dtZGwxtvEpm69Q5cKK8fSiwMRh6jpuycmzlwNBUmReNvcHwd+CD/4c9HNgT
HxFn/z4YLPRP7xjZx4HaR1v1pj8EQwgv/WfnAQ5c8g+/J/E1GPb0KIZFOXBg
nMmL7NBlgjn1ozn8ODCNHBIoIxMC4JJ82jGeA2eWGxWraCEwY5HfW5nEgVa/
xEb3rCdYzjyQN4UDRUcbbKLUQyA42s2oM50D85+KwEuDELCPP2eZm8+BTA8D
ljxMCN53LVW5gAM9S59VLO4Ngakep4fPb3Gg0lX/9fK2IXDWYZ2HQhkHlkc/
5Y/xDYEMD09SbR0H8ocKdvAFhUC1C0deN3JguK9v4q3QEDi0SAlZa+JAHTuB
P91HQqD82tjAtU4OrNc6NL4+NQRYng4Mc49yYNc096O390MgbhVwlIMTK3n+
ku0ehsDLnbSAaD5OzFad3N9XGwI+1CtDG0Q40SOgebKvMQSSHB1ceqicOPf5
mHR/bwgcGJxv197KiZIfphMGlkLAFd9kBwVz4r+/Q68dV0OAHro3Xj2SEz9J
dsgMkg5D9pbo4tUYTiyzv10zyHkYXnLUapYnc+LOXrfvQ+sOQ4nMx+WdNzlR
8fe+rS5yh0FrRv/e+rucyCm4LemD4mFY/FF5gLuCE9/sF6cOqx2Ggdvb1tqe
cWJNCGuwq9ZhCOzQU73+ghNzz83VDm85DCxuCgMhnZx4snSM1W3bYXg19Bm1
eznRp6PbemTnYdhpdPT0zADh7+1Lvya6D0PXhZsaJee40KOw2qwzJBRWllNf
1E1yo3mrIb9wWCh4V7ZFf/jFjbo/Xr11jAgF/pbQCvIfbuTdMuE+wQiFgvCk
WzacPFjXLs5gPhkKR1sOZ31T4UHx2SOFWy+GgjWJLnkzgAcpYqz+cZmhYM/P
I+MWzoM/9TPUWrJCwWJNQJYjhgdfJJbU2uSGwoUq6WGlMzwYKTH46vCtUBhU
7I+PKuLBVzu3rdyqDoU9G5tfCn7gwceHWhu+14bC/U1PmE6P82BRis1prbpQ
iD0zrvd1kgdje4MEGzAUZJdGnEIWeFDFL2/DUFso+Bsk7L7Hy4tJaWs2gkOh
sEVcZXJpGy+GV6VIOgyHwtREZvRtA150eS86em00FJjvpBnZmvKitvymwP8+
hwJJp/hplTUvjj1yO2k6HQr5ezQ/3w/gxe3DWHacKQy0KlzN167w4twd6fv5
5DAYzDqi+PM6L5ZExFTUU8KgSXfXr99FvCjOoV29xh4G1Epvxe2VvDirdRuP
C4SBcE3nh7GXvFh05tyb47QwGPuYqjFD4UNnm6m3+Qph0LiQ/dmPmw+FZE36
65XC4MR/W/lXhPgwrorpw5pKGPSs5CSHyvOh40jEl+NaYcA9GFZ92pAP+TY7
Lh/fTfjTtRA1dJoPX/x79DffOAxI5t6mtel8GNsutFZvGgb3TtpX3czhwym3
TvI/8zBw/BxaVXCXD5tSdnKfsA0D5tUuklg3H0aPKsme8AmDoLiS8n5ufvx4
9vfuE8lhsPopQNXVmh/tp3LTL6WEwfSO9PzAg/zYbWo8VJwaBkXpy4cPO/Ej
suRE9KaHQWnDtg8OXvx4/QQUKOcQ9kSfdteG86N7xJl/b4rD4G7+2M8Xafw4
6ij7eENHGOjc+XGF9IKwX9vKAp1hEMl1fty7jbAvFn7A+lUYZKfvjXr5krDf
2zRx7E0YpO+K3Hn3DWHfIkDszWAYOHhP3HrykbBv8DDy2PcwMKnM43nyjx/7
r7tixnQYbNR/IlTJLICW/9i478yEQcqr3o21bAK4s86xsGcuDHLtkqi/+ASQ
qsPUs341DIIXODkl5ARwRHnvph6ecPCTyXAMNRZAypLuB2H+cEhS7pJ8vVcA
VV4onT0oGA5Wlh/P7D4ggHRP8tch0XAIfTQs7uksgLxXa/O/yoaD8jGlTUER
AgjcG3hXNcLh2GNhWa2bApg7Tfmx3i4cUqyNHY5xCmJj3eyVAPtwYG7+G/6G
XxAnUkZNyxzDoeGpdRBNTBC119fd1HQLhzmqMNMdeUHscItw3u4XDrO/hkx3
bBPEP90fO6xiwkHq4uuH+oGCSL326khmbDhY6+ZfHAsVROPgp+v7j4fD9dui
87F0QczgyIl3iQ8H4UYGnDspiMoGlvp+qeFQc/iLk1KWIFrww2TJ+XB429Z/
KCJXECOHN2b9SA+HzL2xV6pvCCLGsP0OzwyHqJCokxtKBfGL6fz1h1nhMHS4
acjugSByi41bLOWEw7q69MITjwRR83P3il5uOFTkhb0sfCKI9pX1Jcfyw6Fy
XMm2CQUx556TY7RiBARtGRKSdRJG3YuutxvWR8DAu8uv7b2FsY/uMcepEgEN
VN+Ay8HCKAy+5/PUIuAnmwFZLE4Y01+GNzZuiYCX/Cll5FvCmDx5RoXHLAKc
RWyatv0Qxmj5mj83Qoj/ryiPsoWKoBjbE5NvoRFwK6bB9BhDBB9NPb2kHREB
xpECjcPHRXDuwXO1FkYEfDp0Qtr/nAiG7nzl+T0uAvL/RPhWF4ugr8uXdp2L
EXA0mlfFfVQEWXdNisVlRoC44siCwlcRvKnw3bstKwLSdGx/f/shgmPffq05
5UaA3UXB/tN/RdA1ZlXz5K0IoD8vCdooJop2WcJXO6ojIGz06r+6A6KI1AmF
6doI2CpRefuvvSiqlDwp56+LgM64O4027qK4VufZaIsRkKAtw+l0WBSLxu5P
jrRGwN3Vny1vz4sif1BCBLkjAsbyWKxZs0QxZv7gqkJnBJQkGpo6XBNFC/Z/
/AGvI4B9/y4T//uiuPjfPt259xEwW2BptatXFD2rqY2iQxHgFsrDyPwgii93
zu3dOhwB9VPjr/i+iuJ166tux8ciQNn5WzzjjyiaHplMYv8WAbRnJq8E5MUw
uynx7bqVCBCd4n5AOyqGZAsHtx1rBK+knapLEsOgd6qTHkyRwCmhNBqZIYY7
p96sFFEi4bzQuthtJWI4yUdT0OCJBO+YrOukQTHUc6oPN5KJhE0JB9+u7hDH
wV8LfCE7IyFj1Oa+KqcEsvKJjScaRELIxEczFlEJ1FTd8ihvdyQEPeZgfS4n
gck+DOdO00goZbUnT+hKoM7g4h3VA5EQ76F/vvKQBHouicXuto6EHKdPDumh
EnhORHe/s20kGDy5tmB6VAI/7Y+eP+sQCX8yHL6bpUtgRtPSrm8ekeCVGpye
VCOB9R/FRZi9I2FvzFjC5kYJnFzTnZD0iQT3/ecP1HdI4M6tR86bBUTC5WTt
VtdhCZwuWx4oDo+E7Up/qr6TJNEs60+EX3wkfD8m92yDoSTSqyRN4hKJePWa
jo2YSeKN13qS2acj4bHvD0q8lSQucR3FlrORoBpnZJbtIYlFcX+511+KBCfb
8OLNJySRHLBy6/PNSOBN3/Zb/rEkqp1ed2S1KBLKtDfM3mqQRIeb28xFiiPB
r8LJbkubJN4fjp3dXUbkX1BzPL1fEl2tV+Hmw0i45FG6wWFJEmu3rb3zfBEJ
D0/K753aLoUZbZ48d1ojQXaoK1HKVAqD7FoMfrRHgrH/gtpJKymUCU0vY7yK
BLbY7ugZXylMKKTFp/ZHgijfD8nkTCl0VT9d83ogEnYl/b2VdEMKtzz99kP0
QyRw/Wh2ayqTwqm+KvsbHyNBnenCV6YWKbTkNFF7NBUJfcazqukrUqiSddfr
7/dIuGsZI32Vcx0yK/Dn7PwZCWOVKvaT4uvw0fb3zB2/I+FqAy99v846lAoL
fD+yEgk3LLfJ60euwy/v0hI4+KKgKL+o9MffdYjec7UWAlEQIGjxbYJHGnN+
2f+8KBQFp2O8E8Wp0mjORXOUEY8CKXqZD7eRND6Aqk1aclHwL4+rgPmCNMbe
6h9w1oqCV/8yvl5Rk0E7ze38BZujiPlX6sgFAxnc9OyG0dctUXDB+ETzGTsZ
HOsPuB+2LQqcVo8ZhxyXQVPu1cQkoyjQVEv/kNQpg0IRchr3D0aBKUes7DNv
Way5ZVfY5RAF5lKuhqFRsujcf1bkh1MUPDJk+T6aKItF2xeWld2jwNnm+tiv
W7Koy97RWOgXBeNLjAPhY7I4pMe0uTEgCmY0WUPrZ2TxZPDm26NBURD8oh7u
r8lie8+1s9JhUcCZtpD4lJuKznmRNllHosCkq6NbX5GKTN3FLx4ejQIJetH5
IRUq3iKP6PYei4Iv9aSSPepUnPbdIy1wKgoYbg2UZD0qZlw5nrYpIQpUPxoY
Ouyg4pbOSpJFUhTIXj/7bMGQinGaMl9SUoh8FSneyjKnosIha/vi1Ch4TdWU
ybWkYltWcnvL+Sg4IxraHWJDRcHV2XLKxSjw0WsWPeVExUebNsjJZ0ZBl/b6
8iZXKjp5ulzclRUFdPFp1/ceVLzZ0sI4fpXwN6xg/pgvFU3/rEzm5kVBW+bR
Av4AKv5Q1XR+ci0KEgc4emKCCH/dfLve34iCwQQ+9voQKupk5O5cKowC4/tj
E4OhVBxoel0hWkTkO1SF2hdOxROLrIqb70QBmcXTqTySiq3OYRzhpUQ9z/8d
/MegYlBa0dH08iiIMdKtjz1CRYHGwR/l96Ngx+mrLcMxhP9z/O6dFVGQwBb2
cn0sFR3XG/d8q4oCX8fFOw7HqLjmcHQ3Z3UU6J6U1qYfp2Jh6v1HG2oJpm7e
ceIEFb//krx66GkUPHCcV3A9ScV0BUuehGdR8OTzRO6WU1TcfDDxREFDFAg8
ft5Giafi8bqfXiPNUXAsuV7vZAIV+U83qTp0EfpWqQnUOE3FqtrlfEZ3FBy/
t3zvHcEO39UELvdEAZPT9YfHk6lYcCBnvqcvCqZ5tjT3nqGiSUKX76/+KLBO
1c5JSiH8ecQ8wDcYBXKmac/hLHH+upB685EouG43I9+SSsXk+q8Z2R+jYJNT
1/e754h8unv4fhqPglDyMVL+eSqqMg/qq3+JAub/Ghrz0wh/b9nwx04Qem+z
T72XTsVuk65PLVNRoJJ85OHrC1SUnzKpFfoRBQ6zCgzWi0T+1fQ97/6Kgpuf
ugJKM6ko+bpKZ/F3FEztDPosm0XF4Ag1LsOFKHBPzPYpySb0VCNXNfAnCuSl
ySHsuVT0dryarLRK6GF4uedDHhWrV4Rdwv9FAR7y+tJ5jeiHXeysnBQ6uC1c
9iPdpGL5+MkBW1Y6sARW7zcuoiIp6W/5DXY6bG659uHOHSoWtU8f3MpDBy7N
gYK2MiouBfmpJvLRId4mey75PhX38o0xvRagQ+W3DXv8Kqk4Y/222E+UDh0q
e7jO1FLRYMHieJU4HXoZzw076qiYmd1qxSRFB1a8vncTUlHvw5O/WbJ0+Oyj
RXNtoWKCT8G+lg10sE07eNr1HRX72NfRhDbS4egqRax6kIrKdzMXXP+jQ7e+
urPWKBW7fiZfW9CgQ60cQyxrkoriRw7/UtSng0Z8/FmuNSoGSE02h22ng9rR
yDMnmeXw6VPPK0930OHh4p1KSQ459CTbGdrupsOzXbtSHgrL4d2z2zIT9tFh
V+Yu5fj/5HDtv0f+3fvpMOC+1syuLYeW3ZtgnRUdiq06uMv15HBOWP5rpR0d
9n3f12tjKoeQz7F13I0Oq2ummX+85bDnft/QrnA6xBlW3s4tkMMvX3L/nIqk
Q0n40dCoEjn8s85LvIlOh7a8hqmDFXJIO/PT2vgoHSJ/RDtrNMphmAd7h1kC
HfqVxmt+f5TDhKyuibNJRP0sbtj3T8phducl1s5kOmjvCUmp+CWHuFXOYP85
Opzf+vSoPomG/IJ6tdaX6TBbura6W5aGCqZM7y5l04FfbCI2VomGusdfzL29
QgdXzGRL+4+G7lNW6vbXiPO4/R/p6NMwkiphkXODDq+Zle807aJhst1I4EAh
Hebzg7fLmtLwXmPgbec7dLjwMfXXRhsaNi5pNOeV0KHPeVH3nQMN+9SWxoZL
6XCE57HVLjcaTnnXM1HvEf75qSz6eNNw7UqCjMcDOpRlyaka+dNQ8LXZtoJK
OvDejpR6H0xDJTYBx/GHdNhKdyFTw2mot/0dQ6GGDo5/P7uI0WloEZGXeegx
HX6sQ86nR2joWexVWVRHh7t/FXn4jtGQPqL8+ms9Hd6d+niJK46GKSIz0xsa
6HDblbHrwSka5u99xB3wnA6xQsYc/xJoWHEyVuVuMx3uiH0XmEui4YtqA9Pv
LXQw1Q/rSEum4cAPdp//2ukw9eyjcs8ZGv6QfxUf8pIObxMOeD9JoSGTY+aN
e110eORa82XvWRoKpzs9m+mmQ06w8ekEgje8kPug8YaI7/zZFB+Ct618/RP+
lg4vPDb6/ia+t9QsF696R4f66zYvVQn29ovUmX9PBye9bcPCxHnR+Xo2OkN0
aIqQpJSfpmFqL1M4Y5gO7h/2tfxJpOF1zpa0mlE6qF/9+nM1noZVO8+VLY/R
Qapb78bjkzRspVt36H2mg6VKvKT2CRoOlkpMHv1KB3m10PLgWBpOj42wPp2k
gwhL3XQAkU+yRJHC2jeiPvsMsjcR+VZJ1HSPm6HDOt4YVZnDNIQnS8caZung
t2Dybn8gDa1+1V8lz9Mh0czRw96XhjEue98lLNPhjLLIs1VXGrZt9rY4Q2bA
qXPnS9j20fCOwN87hRQGRNNM9MsJPSX9uMBcz8oAjldZqXt303D3rWc1s5wM
+O+f+WQUoUcUlpJ3FmJAb/OnlbfKNLw28+AYXYQBwRac1icUaXj8pWl/uhgD
Tpzg9tSWI/KbQD/XLMUAqecmme3iNKz5/XpRTYEBZgznoVF2Gma98rPao8QA
8t9kNRoLoZe7/0q9NjBgZnVm7DjRP9pe/3lmqzIgxSy2Mf2PHArtaKqrUGPA
/v3TI6aLcjgr6STWqc4A4ykeJ9qcHN7vSX5J2kz4m9uQDdNymFYuu37dFgbk
2Qa3xH+Tw5CURyd1tjLgMne14c8JOdzns2/IUp8Bb3+Xy576IoeqBp90Arcz
4OP7kYPbP8khl8zRC4k7GHAUia/H5HBqWeD7tV0MENKxeq8+Kodtb+8YPzZk
gOZj25WAYTm882DHjV4jBhRlTlFfD8nh6XN9f6dNGPBmZkLSe1AOffyD7TjM
GMB971C9woAcGhlRHsibM2DV36ZG6L0cKshd5QILBpgmJ5dr9Msh86qGj70l
A16n77Q68U6OmPdaMdyKAQINOdarfXLYUOUmdc6GARkvXmwtJfh6+kLUbTsG
GO3blppK8Imgc90N9gzoFJ8dzSfY1VRh45AjA9izFdrGCd6u8CRxwZkBGx53
lTkR9tcxWY3yuzHgZWvGGitx/t/BCb2NHgxwCX6l/4XggeoTmUZeDDj0onFw
mfC39qLojNshBvyeiNtkQMSXfbjMLMaXAYW7By8+I+Jn7N1965I/A9rELjPC
ifzYrR/8Vx7IgHf+b3WdiPxtZg53bAtmwDOz+yIxRH6FR9gfjh9mwPTtO06v
iPz/fnyNby2MAfQb2wKcvhL3+WWdAPFIBpxOjzwjMyWH6RbesvuiGdAucqHZ
bEYOD6v8PeIbQ+RHKDWi6rccWrBm9J6MZYCBVbeCHaEX7vpnZx7FMUDXrlXJ
4J8cfsux+9R9igGcP4W+pzLTsD3qB3xLYIBlo5YfP6HP5P+k5mTPEPU6pzDe
IEBDkSML933PMqDDXq/AU4yGBU2vg++dY0D8M7YMY2ka1jklf4UMBmQJXt7c
T/THntteN5MuMWChp0M0SZ24j2fBo+syA2wSXhowttDw55n5AZerDEgf/2Il
b0zD2LfdWbfyCD0fjeEZJvqTXa7U5sc1Bljd8rw+aEtDWo1nV+xNBmy6onMu
34eGdl9eNVwtYwCD+96NrcR9Nq5x9/j4PQZ0ydSwkjNpGHosSX9jBQPWfX3/
kuMacf8Kb3/4+BEDjtisOfdW0rDeoOTO+2cM8CIrxeuO0lDxWkKaWA8Dxsf+
0ccM5LFiys3crZcB14oku5f3yyPo6HPc7mPARqmFQ5ou8mjf+euUziCRL5c5
myWGPKb+daXbfiL6RYuL06VcHiVM9LTyvjAg0NxgI2udPBZliMx8mmDAgUpZ
l5I2eUTll/6RPxhgsfbMtv2TPM4d3OpycYEBrx6dPlMooYAnC4UlB5cYcFaL
Gu+ppIC8P3/20f4yIMEp+fhHTQXckFRkWfGPAYKbTARWzRTw4euTPH9I0cDu
sik72U4BDaRd2ndRooGx0F3/wEMBnaqEdr9mj4bjS6n9j+kKOPFvmkmCKxpS
HXJzU+IUMHJv+1N3nmj4ZsJ74N0ZBSRl3Yq5wxcNd9pCn+RkKOD5sbgtMwLR
UOAYbdNxRQGl1JzntghHw5u5l6uHChTwzpEtD06IRkNiuqSWd7ECbm4WDGkR
jwZmQ5HMhnsK2Mg/rcInFQ183DznYx4qoCT5ioK6dDRMcMsa6z9WwPDfRjIH
ZKPhKvfLa371Ctj+6ZdYuBzx/9lBfnKjAtL68gQuykdDu9HwXbZmBYxp2cNV
pRgNl17XSMW0KGBPzTzl7fpoGJF0W3RsU0CVkhtr88rRgC9otaXtCnjq6r4l
UdVoYAqVOhTe8f8qKvd4LtIvjtOmcim12aiNyHyZcQsRuRwSUUsSi0qL3Ekk
NM8olViRJEWSUpSicikJpU4kXSQluZVSKknKZbssbb/n9+f7NfOc58znfM5n
GOxM+T5kpMNDx62Uv0so68ee/uCuy8PGT29jAyknhzm9Ifo8nDvxZVUePf/K
60d3tgEPjz7tc99A65usLmy/uoiH601/2hfT+9OX/vn4mTEPNa/8YlNof/0G
4o0/THi438Dt/6WOwaVqF+qVzHkI3TLFbA4ymCO/5oaFBQ8GD+cEtV1jcHSK
RJXXEh5mZd3+w6qKwVMfPM7n2fAgEszFoYzB8WdTCupseRh6XTzz+XkGXZrK
c3uX81Bn2hu77CyDE8tkDqqt5IFZkj/70HEGPfIqU2xX8RDd4VaccITB8oO+
fweu5mH5so/E4xCDvtHXSJErD+MXrVc9pvO+ZbrRS8eTB5slM5K3RzI4V1th
raM3D+KHN4ovDqP+ULrlHO7DQ1bA74ETgxlkxOfaXgzg4WFiemaXJ4Pbhhss
W4J4iFJ5L/NpLYNPXm8xGQ3hYe2LuPsq1I/xt+9rLwqn/TWa/T5sz+CzK1vV
3SLoczh7NMOOQYNCVRU+kgeNBlNrX2sGe/fGyFXzVN9ZN6btM2PQbLv6tC6B
h/XRASUfjBk8tKll8vg26rd1prtjDRm0dtIcM9/FA4laHGG3gOpr1Tb6124e
fhxr7o/Tovou3D24I4H6cSw8/BvHoL1oQd+JRB6c6r4kFalTvWd19dxM4mHS
V9v0bBHVe3Ji16u9PEi9kLx4V5Xq/V2/9ZdUHr4bWM5ePJ/B8/3dTUwaDyUq
88T6lan+z5Lv2KTz0O5yKPj5PKr/g0W1/odovUQbUznK5ddfXU3M5OGqi3fg
fiUGZUpTL5/N4sHwv74RR8q+J01K7mbzoFUnm+9K+Vr627P9OTzEB8pqn6Is
F5+eJ53LA7+m128xrbcxCnK0TvJQWbJEU57eX+/fn+GQz4Nd6ysFUGGw+8Or
dp/TPFicG2gvoP1+C+/6XTjDw8roi6ZuDIMzvrT8lVbIw7yOjh+ONF80YhpP
Fpzj4cLlh8cOsFRPsfreaxd4cPjqe26uJoPrE2rUW0p4sHR2fzakzWC0VEXw
+zJ6v4HRmxl6DKbtL77w8xLVKy/FYrsBg0VyZz7/VsFDadnMHQZ0XnVHchdq
VdL9vePnbUzn+UwpK9qqmu6fxPqcJEsGv+SnVblf42Hy2zWlrA2D07mk8U3X
eWi4TCxm0XzjindZJCD1V0mNgrMj1bcyor7sFg8j2rVCDfVbtHnIlDu3eYjI
SXIc8GJwf63PH913KM9Z5xMaQPOn0eWR1APqp0DFjUFR9H4nBzmVhzz0HAzr
f7ONwX+e2rgZPeKhaekC2cp4mq89i577tPKQPDTY55VB89R/gbLQxsPhfW5k
Md2vdR/UfdI6eLA+o1AWcobm4z8K7689p/q6XHbroXk2Ijk2+ttbHkI8dB4t
fEvnvX/ESKuP7lNFuOLYEINqcgOCVT/1h2Reltp/DLorPRcLG+RBvnyZfam8
CCPyW5cmfKY8WDw8QyTCvWzT30eHqX+rneu79UV4Xf+GzJ0vPMxZnJp001GE
7VeuOHZ/o/s7U7mq6y8RDpmVpo/+y0P+eGZ+0CYRMrYnFVR+8qA/3qDQnyrC
5HW7GWEyATW18K/3WkV46mVMQJokASdLMf+mPhHW+EUWFUgTMEjLtV8/LsLP
YX66LbIEPjdM3aklUkPXeFszLQUCvdn+V6Vi1TBc0nKH1RwCtZn79vZkqGFS
qnGt+1wCc23OFQQVq+G1LM4uQZnAsfqPJQU9aqhyQdqlmyWgLKapkuukjn0n
7b6raBKoy4m8tyFCHUszE477aROIKZumu/SQOsLOn30DegRMwqZ/SO9Sx0lR
Zqm6BgR2Vc+sVRFn8UEQWRi5iHLPiy0yLIseziPbx0wIlDXXm1kLLKra6apa
mNPzd1tlak6z2G8WeifOgsC+cJm4949ZJGrvfpWyJrC08/Hje/ocZn7vPKPg
QCAhd6Cdk9HAvwblHTwcCRhF1GietdNA0WuX4VwnApq+RT/eJWpgeWOTmbor
1etNerGurCbG3JR+FexOYJquv7e/myZaVdglFq8l0GneOFSQp4mPcmsfGXoS
kPesTPNaooVZh35GE28CM/nfki4d1EKvJLO5NT4EIpqds6LeaqF6LLkp5k+g
5tmnRceMtHEwosLfOpDA2k9Xa7XjtbEiYER6TzCBwdoLfkp3tHG7h27Z/Y0E
pk54vuHIf9o0H0NdZcMIvNZcMfHBfB2UWVY0tnozgTkzTIsN9XTwicm7E5lb
CHA/vyxvY3Xw6AJmWWcUgeyRGSfypHVwA+P9QZEnsECPvVv5XBs1Zh9P8xYI
PMzq/2PqKW0cmtpleHobgaDadM7cRxsrJyh09cUSaNtiGvJNSRttBw6IwncT
6Eh+WH8rQwun9TTdu5RAgAxJjZxz1sKnrdLhXxMJ+Jc//mgsp4W+NxKqY1Po
93bLfbA/rola5bWetakELO+6lXwM0MSRsz8nTjpAoOKXkROJBpoYl04c92UQ
sI0bchM91cAViRWjzYcJhGR++dxdpIEzto0ckcsmkLlQZfaEOA084Rfae/Q4
gVIb3bjRRRoYsLYo6cUJAroDxyR3ymmgjuM7HdV8AusrtUSDIxzWGHuTojME
Ugbi9SZWchivfVxpsJCAQ69SCcnh0H5+V53eefr80UKb0DgOO6X/nFZVSiAr
5nzBjtUc5omlXxq/SP1QnddNzDgM+qfJ3fIyAWlN1d5CdQ6/ddvlN1QRuHpK
7/ZmcQ6TiWtC71UCDyZYp/86xKKinG+A+HUC/+Z4Sx3qYdFq+Q5N01rqtzUa
536rZ+n/NmWq+y0Cb8ODt0hUshgQm/0p8jYBpc2TKi+fYzHl0uVLxfcIDHsf
0TLLYFFpZV3G/UYC/GvnUom9LJb1NW/tayJwRdOpNnoXi9a7u9dIPKJ+lext
SuJZfKo4YDq/hUDYhjXbF4ezGFj5XdGilcBm8XpmVyCLY6sni3m0EXBTdUjz
8GYx9aPcK76DQOECfeWGtSwq75l/K6OL1rP8tO2aC4sX5+sWXHxO/d04YcDY
kUWbGvM9D18QyLeIHDNewWK72x/BAz0E2LOqlZU2LAYPu9tL9hLY+npPQvkS
FsdT/HXU3hKQen/7Tw5Y3K8eOX1pHwFzQxdDOVMW59fuGvbsJ7DzROu5zcYs
lnvsf7JtgEBPyfs8WMTisq85FUcGCQjSg3/zBix2HCjKqvhM4KxtTfHchSxu
1KoUWoapHyr9vqrrs/jf7XqPz6MENGQazhzWYzHNuwWmfiUQ4H57exBl1fGX
yhrfCTgrrRjOplyROTjBdozmh+TSORw9b6c33uvzg0CaiTiZQet33pds2PmT
+l1n7ZgTvT/UX77wmLgAnV+2zu0zZFFMXLS3+hcBYt0qpz8yYjH9qH5om4QA
S3wvbJMyYZFZZOk4OlkA6Ym+69PNWLzS7KA3Q0qAZ8ut5f0tWFwRsm6mjowA
+6yZ93FWLD6TCPpnxTQBdL3+3fWW6rnpRHRbwHQB9APGH6cuZ1HcNL4q/lcB
ElVbZxEHFtXCc7dfnyVAtYFF3RRXFiulLnh2KQhgYPn5WCGd5x+nq5d8myNA
7WP52XGeLIZ3tkrozxOgUT/zVVMQixOiXr9bqSKAYp7iKghjMUN26G6IqgC3
rrj4d0ayWG0tk3paXQBRXsRYyk4WJ5ZYzZqtK8ATtSjFvUdYPLy7RE1siQDL
nN9v1njI4vnRtZ/XLRVAzLxjIj5lEf0mVV+xEeBy9LFQh24W+2zXO4StEKAl
0OwyfGTRWEY6sttZgPMq+/R+SNL93F5hbuIqwA1nWa226Rx6DXpPznQXwC3x
AJsoz+Ge5spsh/UCmCdNOrOO4TBnia9voacAw+Mf5IgGh6UXZXUkNgjw91NP
FS9dDtsP+d+85i9AVdcvX3aYcjgg8etehSABMm1WlZdbcii2tcYlMkQAmVW3
vhfZcCjXF6jUHCrAFvOX771WcMiukevTDBfg1H6/ytaVHJrdu1GWGCHAbBe/
TElnDleZhsS8jhRAvEnh05grh0SxdtpRIoDV0I3UuX9xmJoa2v4lhr6/589R
e2+aLz8V8lbHCtC3ca0Z+HJYEX4rpHinAD9Nk/8Z8ufwXk+YodRuAZbKGO0O
DuKwe/XvP/0SBCicMc+pMITD4brbd24mChBV3mpcGsrhJMOIdMVkAYyU9XXj
wjicU6DoQVIEeLMzqEtlM4c68ndFrakCbHpRaH4ggkOrPZGfdA8IcKB7q3PL
Fg5dv8+rSjkoQMMZl9MfIjkMDr4f15chgGdCwZ5nURzGdkXbW2fRfjftqzgb
zWG6/fxZJ7IFqCsManbeymFBzYMXYzkCTMhc2PiS8lUdUuiWK4BCOfPVieew
OZfZcumkAJ83vowuotw7vdlM9pQAmw/LXvxI+duumEkhBQKMt5deUiQcyoyo
Nd8+K8DXsHtvzCgr+z4+Mv+cAGcUP25aSdmgdbtP7AUB4gw64lwo2y3jtDtL
aP1SzapVlD2uPPlieFGAV2lSYTaUw9mdeKBcgAeOppMMKccf0Uz+WCGA+6xc
QZlyllSb8/IqAXbY+OlJUj4fE6d4+qoAPmVGekO0PxzQfid2XQDrhWKeHZSf
rO8o9UABshU8RLWU+5rihcpaAVw0D5Wdp/zDQtdarp76paxtSjblX8u6poY3
CGAYk9mZRFltfmLb/bsCjOTvcN1G2eSg/kn1RgH48eIFEZRXTuwO3t0kQHtK
bV8w5Q1RSQYvmgWYbDQyyZ9y9FuD/0xaBGAkVhz0oZzs9rIhs5X2W3LvyAbK
x+/sPTDcJsDyCfcc/8//A6QHEY0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4wAmpg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
igMJtckki2ZNdCxeaNosSuC5f/KpJ8paWDN/gJknT+DNg/OdDx9podzMFBXt
XwmcO6iy5HmnFgYMmSlaLybQH1t1MeGLFi5tubAgTpnQ+vzy+1xpFoUPNooX
qxKwKAp1SlFj8Wnp8OwXagRWdvob5a9iMTR186i0JgHp+2J7JOxZbDs99sWA
JTDceSl7rTeLukey++20CXiO55XcCmIx6oD1O4EugRTbv3W9w1jscp3sTFlB
QIyzdDM7R/tZm7xX5foEesPzk0wvsBi7fvvTjlUEeN4hhjtzWexbMePx5BpC
+/0y74ibLK5fVnBP0ZiuVz5WiOUspsnYV61dS8BqrDdwZi3t50R/KHNdR0BU
z6jW8hGLlt9v3Dy2nkD+LZPkS80sZvU7XbtsRsCwvixd5CWLEx2iV+6a03jd
YiL821nkNxan92wkkGgU5fG9k8VrVa7JP1gSuKy0uiHzLYuziyTilm0h8L1v
KpXrZtHpculp860EFBvTdY71sFgc537C24ZAd+Ui+wbKEuHzj0byCXQmJcbs
oeweVCG4akvgCj556UbHV3h5/+eRHYGFf1g9r6fzS9pL7vvoQCBitu7Rgjcs
+m5Cz592Esjq+KVG7jWLtYa+rqwLgdd7f+YrtbGooCXrYLWLwOo3E3VNLSwG
KtZu83MjUCK5wGzFMxZVZiiY3/QioG9Tb7id5iPs/iMtfT8CM9TtKy1vs9hx
i1PbEUAg9aIfzi5hcUWeshIJJFAR1Pv9cRGLPaeCJW8TAvsOlCpez2PR6LDa
z+1CAgW1mkteZLMYv//Z3IlDBMoLnPLVL7Noaq0xbnyMQFtyWohPKvVj8vKb
83ECYZueyronUT96xwdCwgnUPdnJpiVQP6q83ksnCeg9PHtEJo76kW5/Wx1J
55Nz1GqNoX7mnmzvOkVAfiyuovsM9TOm+2LWGQK3KkLjVkdTP32djSox9Hyo
Xp75+hT10xFVZxZLxwf6VjVFUT8N+jWe8QSC01ylF1IuruwqP5lIwOdDmmNu
JPVz48yfuUn0+YPqthjK7hlrCh+m0Phy1M0bKFfEvs/tSyMw8KZpiTMdLxkW
e1k8nUCAk99sU7qe70FI08wgIGczGB5ymsV7nn0JmzMJhLsdL5hP4+3s73rl
lk19TLpKfTrL4qhfu7wwh4C6jfJX+VgWF4w8c47J+399ijlciGeRCX6ccSWf
wG/ny775naf5FLnXU1FA598kRhJTWNwZfkftWSEBowbRuz9dZDHox5K9H4oI
aHyHyy0ZLMacvV4w9QcBx5GuqEHq56pkzqBUCYEVqvbijldZvJucrqdZSsBF
IbpdqpDFkcyYMrsKAoFRz24Iy1icvzxyYn8lgb8Kfc4rV7G4/PqxteFIz6uc
xKjcPZrP0oB7RbV0/TxbgyFaT0HGPqJ19wk4hLb+8/QVi2dr3Cw66wh8Shtx
maLnt+Yxv/nHBgILSmZLG32m5816s6RSE60HryKhxd8sDreY7TBoJpArHdyU
PcWi+lv9124vaP0al99fvYCHJp68JcKXBDzEc0sD5Hjo2K/mFtNKn38e2zms
zMMzw7IfKl4TmDAbrW8x4OGQ2Pg3qff0Pny3MGWOGw8lzg4ZaPbS/Wtm/xy5
n4fLJD8KTfoILA2Tu8kX8tBO8bXIgQECLTWcQl0sDyt1qyTqRghE7ei9r/aA
h69u3bLqHCWQeWT/hvHnPPxidCP223cCe8miYbluHqqYZ8gqTRE4pCl2Y4mI
NkY5HlcRzhUAv39BxZLF2pj1V7BXjJgAMuTG9X5Xo9+7HoFXr4gLaP8j5Z7A
08bBAx7az+YJoDZZfcsfv2mjbZi5kaasAL4O6zAzPLRRqUCc36kuoP1t8t3M
Em3szdgwpqQhAMURw7elNdp4IzH8ooeWAMY35grnN2kjHJ3q/agjgECZtt3R
vdrotG3o8PgaAazRqFYZVNTBxLG2HNnNAjhtddt4YaoOOg/IbHayEsCyI41E
95oOqnbzv6ZbC8AudHBP8R0dLH7caKRmK4DmMwUz+97qYHC1eNdeOwEMFo49
zPimgyYlG05edxBAfO7yntq5uticXtO80kUAKztO3OXzdDEpfipIsEsAjZ2a
S2vX66JrpJHCHTcBfPzslZ5lp4tqRwTVIp6Cf/9PNhBQ4mnqPc2HnbSLHvlO
s8TvV8dt/Kc5NFZgFZ0wzaOdGzIflE3zBp2JHrfJaT5/vHCZyDrhvyx35Vcn
welpvlh36tzXl9P8Pxa7gPg=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -19.341714781149985`}, PlotRange -> NCache[{{0, 
         Rational[1, 10000000]}, {-19.341714781149985`, 
        0.9210340371976184}}, {{0, 1.*^-7}, {-19.341714781149985`, 
        0.9210340371976184}}], DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.040816326530612*^-15, 
        9.999999795918367*^-8}, {-18.420680743952367`, 0.}}, {{
        2.040816326530612*^-15, 9.999999795918367*^-8}, {-18.420680743952367`,
         0.}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Probabilities by t, starting in |gdd>\"", TraditionalForm], 
     PlotRange -> NCache[{{0, 
         Rational[1, 10000000]}, {-18.420680743952367`, 0.}}, {{
        0, 1.*^-7}, {-18.420680743952367`, 0.}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|g\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7530337045279493`*^9, 3.7530337422382507`*^9, {3.753033773325361*^9, 
   3.753033887035925*^9}, 3.7530339533247805`*^9, 3.753034872791766*^9, 
   3.7530349110787992`*^9, 3.75303550531141*^9, {3.753036892330864*^9, 
   3.75303690335522*^9}, {3.753036993758783*^9, 3.753037076237381*^9}, 
   3.7530373189364166`*^9, {3.7530373786907825`*^9, 3.7530373900419397`*^9}, 
   3.753037433114729*^9, {3.753037521837414*^9, 3.753037543035815*^9}, 
   3.7530376428489203`*^9, 3.7530377032713346`*^9, 3.7530384259362135`*^9, 
   3.753038672784766*^9, 3.753125077168089*^9, 3.753125110154107*^9, 
   3.754181048512888*^9, {3.754181111420598*^9, 3.754181140206993*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
aD+TOTdAwvHqe2n/+v8AaADdrw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
nkn9
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
QeSPdQLn2VcaaPEtQzUsngm+tWv0jxP5uXqkve3eKSb8F9t8bbpVA3t7+MP+
JDHB53Xv1tHnGpjbZimx5QwTnj7lq3cj2PfJqYcxqUwYFWIJuBOsXd3o2XiO
CR9e7Jr9j+CfJSskrgwi/3mZUfPEfg9zTcqszjNhR835/ovEeSczmXvPXmRC
gQJ37RPCHuukmrnOy0z4LGwnQyfsFTn284p4NhNWbSmsf0T40x+mv80phwku
PDt6M3o18JpfyNjVPCbwuX1t+zOggYdcyk4PXWNC1Z5go+9DGqi794su+QYT
jLc1TTP+08DfOyjd/kVEfa/ku16aJOp7oxez7CYTlPxcsixnNTBBJ09hupQJ
/Ek6O9L/aqCNyuAzgwomOJS4Jh5ZpYliUtKB0beZ8F2Zb2WMVxMH+A+urqti
gmGx4oU5UU0sYMu8t3SXCZ+KhrbkyWli4K92p+33mZBQ9PHyqJomzn+0vPG8
jgkyvSymxVZNPMN0ODVWT9j7SLPjvKUmyov7HlrVwAT91fukQ4h6NLOKXbul
kQmcyzn9L0M0ifs7VdCpiQma33uW9h/VxEMx2d+jWpjQlqhlEXpaE1Pv3b93
u40JfSYeeX43NVHB9tnFl6+YEJLVSTF/oIl3xjvp4+1MiF7jH/D4uSb2yn/b
ovKWqG//LVVJE5qolKzSdHGQCdfKixoeb9DCuyr6xXc/EP1RX1Dljo0W7ny8
NbljiKj/S35W+7218PCskw3vGKHPz7f7b6dpYbVbWvexb0wozdDskfmphbv+
5NRcmWZCblSpTb/gWnyXUZZVM0PU98FX5p6aa/FfS7PbzBwTwmvi1Lq816Kl
wdKYzzLRn1Qn1a8PrcWBl7zP41aYcKjj24dZNm0M8ZcqzV3Fgn0vuv4qkrUx
86phSB8nC8rOXDvIc1gb33MG/rJezYLmcOfGslU6eOQare+QMAui4LZYiKYO
rtqSUJcgyoK0CBJH+z4dVAvLP94gyYLy11+WSIU6GDbQw2moyIL3z7aXjFvp
Inv06BdbZRa0yQ8POkbo4kWhHy+CyCxivg7f9/CKLmqU/StPVmXBhHSzUdkT
XXxoLnCuSJ0Fp56ek60b1UWbIZmwRk0WbNAq5A3n1MMhprr90FoWRCuXZjlQ
9DBC3Gj9kg4L/D6y3/qxTQ9JlWaSMvos8LQM2trjqIeXrOzmjQxZ8LCcwlEY
pIeaY+4D9utZoDFQbSt5VA8fxQQ9CjUmzl9yqeJI1ENbGWZe6kbCX7U7oodS
9XD4XmJc6WYWFMxTHF3PEefZXvBuMWHBmamtf6WJddLX6+ajwAI9mdwPc6f0
8HJ8pRqbKQvmpA75OR/Tw4o5lxnXHSyYivDvkTiih+jH9fDBThZsHGDtfuCm
h929d+LFLFmwPSx8ZMxSD8ct3PeEWrOgTtj1+pZ1erhUyyP10oYFF+u/fDKX
00Nhrephtb0s0IwOtWKR9HCjAH/Ux/0saDeS+Ln4ltDreM3WzQ4seLvg7DBS
r4vUaS/uS04ssBdlNusW6mJyZ232HncW6DerfC+m6WKOqa9vqScLrt7KS+X1
0sWqu0K6nN6Ef7uDL9jY6GL/Bf+nj/xZ8CX4/OBVVV38ximaIh3IAnnpNT/v
iekiG/3xgaggFpxIr4huZtdF8fEAhc4QFuyuDI99PauDGs7i42vDiPhdv0h9
MaqDJm1P7iRFsOD82+LMmh4dtNsSdHQ0ivBHq+3quVYdZMo3rr7KJPLH9J7H
WJUOnjsX0v/7KAsqTzTWHSzWwYIV6QL7GBYob+tXvpijgzVhTUG341iQ67Fp
Ivu8DraNhBrxxbNAS8U0lJqigx/t16z4nWLBsSBHuffxOjj7rKX1aRILxHtk
WknHdZDLKCJT/gwLbJT8zd7SdFC2WN6NmcoCEcNbBtvCdVBX6oVqzzkW3OtV
SIJgHTRLjvqun8GCaxcFlV4c0kGHv4p1qedZ8MN8oq/PRwcPH355cvwiCxro
1j1Uqg7GDNJszLNYQHd/J+PqroOZNiqS17JZMOhz/+YTFx0sfvx6aDGHyMd1
NTqJTjpYr8ssdcxngeVhd9UiBx3szKdE3rvOAu2Q7QoSB3VwTLjTRKiQBWr5
SfEd+3Vw/sRRrqBiFiQ/U93+0l4HBX6qdbaUsCB88OlJNoKVfLuuqJSzgLeI
91wgUa/re477xNxiQQT/5LoVOx203KWpM1BJ1Kft49w6gt0edP82ukvE06Hf
6jzBYRpxmFHNgvV8XkeTCE64svbMVA2hb7H6zjSCs/j69lvVscAl7P6RIoIr
jp6UL6pnQWEx148WgvGbzhe2BkKPZxTT7wR3u7+rckOifzDNHsoQ9oy3J7Bq
G4l62VBtbk7w8jZ9c/FmYp103yeEYNE7g4Jhz4n6yCqtzvjffqOS1PfyBZEP
wmX9lQRvPm94Xf0VC5z/8Ee1Emz7P2O5l9V8Dpje+I513wLyk0o7Te5fqLIL
m72Y5xmQX/bM5J/V5Sq7N/9rLr8B8rvCHxyfdrXKrnqbd957IH/eie6Jn65X
2WUr+bSA+ABRDXen
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF13k8lN/3AHAz9iX7nn0fJEQLOpYoJCplz1Z2wjPDmEnKUknJFiXtyhJa
VJaSThLSghKilAitSj5li9/z+eP3+f4z83q/Xve5z5l77pxzr2pg9NYgKgcH
x2by49/vsMRW12cBHyykt9++eyPCGKMqlmfseiMK/2+jHvFdO9+o/GdH9Ycf
vuQY/edL+RGnbXpM//Mir6RbobzZf86lJi4uMbb4zxp/h8tSHOA/R82e+Gux
3fI/D8xplu8xtPrPBnNbIZz+P++f3ffSo+Z/prGllTp7/+cXM5WhG2b+55I1
00s4Baz/8x7WupuN8tYQGue8+UqQMW6uP+bB1rOGueGhjl+eZHwzr/+aWlhD
gt+GBVtnYwytsb/t42wNutlnes5bG2MlvTYy1d8aYlmWpVymxmjy/fhAZ5o1
FCyavBxaaoy2wy71Ec+sQUvF7fzwJyPc9ewR44KvDVS3FsWdO2iEly7c+CKU
vA5i7yWFiD4wxHFfleIVeetgHxejqOGWIeorZHl5XV4HRNXIx7AyQ7xVEPm4
9PE6uG1zfX9bliE2H9EutRG3BfOpVSKnfQ1xJO5MYEKxLTSfbPS4NbMc1R0P
vx5+ZAeyv0dHJ/YYIJruZXb32ME+u/W9q4IN0Fc1VurRmB0sn3kQkLvZAE9O
e2wp4V8Ph4V7vuzXNEChUp3HoZvWA6+Iyrxz5zKc4myr+9a9Hiwf6o/O0pZh
8z2ek3+GN4B/5MEC1Qk9DCifNR2f2gBqGxZ+2b3Rw4Xj31/2cdtDCqzUTX2s
h6sje0TuaNvDxy16sxsu6WGlfMmhxAh7+LLrT/yMlx4eZ9oxKb/sYf0juw8f
n+pikFGamyDVET7cYri3PKAhcaqIJ0TSEfT/BA3GXKdhEufNmiYt0j15Qcbn
aFjwakiavdEROGhd+jOJNGxjWfaOH3eEmyGcD4+uoaF+06x7i/ZGOHGr925a
jQ5ObY31TN7kBC+TKFUn7mljKsPX589JZ7Br5E1I+qWJp/b0u/294gyPrtY4
q41qYnWK2xbOe85A36ZI6ezTxA/ZzutFhpzBTM34g32jJlpVgaE2zQVkkzhm
rx3WxIWPSlzu9S4g2q4jsVlNExsqJrYPRG6GtQW/ZZu9NHCl4vW/ZplboO9G
s53FmBp+rzX8fjF/CywX3bL26xs1LNl6Y1Dg7BYIWNHtX/xCDWXSq+/3X90C
dTGR0tqNajg9eSuZ3bkFHO93fUjNV8O7bfXcdyS2AmcE82OOnRpaMR4uWXNq
K/iWihvLVqjitLDtwvmLW+HxxOuV1y+o4vXy5u98FVthNC5iweWkKqq+e9TR
d3craN03ESw9oIpUx7achLdbwaM/q+2Wvyo+Un4mVafiCkP3bMV9ZFXR8UmP
4qpSV1juvrJg7TEVvKMRdmLbdVfQXbK20/SACuomzYkS9a5gXrUwtTpRBQWM
VLiqnrhCRrc7h3+4CrYXhH1W++EKi484hI02qKBj4HyN8JptsFSyyqOPqoIb
Z1Q3j7ZvAxGz0gknTmV00o5Kyf++Hdy7fi4ntBVxXMZmQubPdngv3/N3Xk4R
D/DJ+Jxa3A5/7SVuZwgpYuMnND0n6gY2Ymh09acCGlZKfiozdoO9OWZ64g0K
KGXU4NIQ7wa9sg5CNlsUcNBMUHF4wQ2CJtZ49O5dimy994eDeN3h1pLvO9pi
lqKMwu3fYyLuEDKwZ/D+zqW4+a9v51cVd3gaxCp76LAUm+5Xp/62cYcvOx1u
60gvxRJbr8/8h9wheFhK+d51eYx2Lq81FPGAFW9PZmVNyKH4sesO6TIesL89
23PNiBzeelY78E7ZA3h7fZR/9cnhtFPL4jFDD+AwdZE+0SSH+zcOb/i2xQNE
FpgyxQVymGOv2Fd+3APyGvK/PLeWw5s2OdNq8p4wKWTpnl8si39WstZIaXqB
uhLH8FiyDG42zd2mZuAFx1zMIiwSZPDKioro5au8QMlwN0fWbhn0NXx72cHB
Cyzs7+9c5i2DLTRr8aQoLzB6LE5zNJHB4wr8X0Zve0F95UP76Y/SaEwtPF23
3ht4z0Xp0O2l8ShHde0jF2/42VpaXQHSOLrQ/uKFhzec333K/JOJNJ6am+f7
Fu4Nza9LUuJUpZHyj3+capY3uJ8c8P4wK4WdYzrOGb3esDsk2PTANSmMela3
6B3qAwe+mUl+VpPCqUBJ4ecxPiAeteKh8VIpZE9HK1ixfGBY60PGYQkpPKiu
vUYjwwc8OqvkA7ik8Dwrn/ha4QNZ7h+Tbo9K4gtN4mPihA+Ev1e41F4liauT
9J6cid8BAy9esHavk0Su5WcL3qX5Qu/gP3tXx0ugTaqgAe8xXzjwu3RBKVoC
9/cmPDI44QucOr6B1FAJnN/nOrW33BeCVO5XoacETnXybVV47gsV+7/5qa2V
wI8EfYmnjB8olIJlG6cEttTYp70o9wO+qKwuzBNHLsGapbPVfnBOrrpg8ag4
2vip31Rt8AMRw2KwPyiOjbwLQzHP/UDzMvXQdII41nrctBT55Qe1gu3yb33F
cdvfY381lfxhneBAxnt9cbQ9N1MXGOIPN5x4n7Z0ieFojIPMUIQ/zBazHx94
KobpNoVxfjH+YFQ+/c2pVQyffFxt7MPyh9jDBsaTDWK4VT+hYvsRf7g1ggOZ
ZWIYUP/7jP01f7ju7P64er8YJr38lWLwxx/8MuSWWhqLYT3vd6fZgwHwMq84
sCJPFCc13mnoHQkA12dP/6pmiaKuTee8d1YA7FZ563A6QxRPJVZX3jsRAFIb
3GZPJ4si+2e8UHJZAOxKz+bojhZFs4HFJ7ztAaDdVNBvuUkUG66KbZRaEghH
XrxZ1SYkio3bTR0M8wJhcYmiw/aVIniHfStEpmYnvLrguvDZbwluOHDw++lH
u2BH0l6ne0OC2B6cfeLllyC4usuq5zRdADloI6NXhUJgaJ2YVYQJP5572PRs
RDQEjgV9jPUx5EfwvXBLXioEzCf7xJz1+TExzzfloGIImD4tu2mkwY8zf/sU
fQ1CYNLXT2VSgh8nXzzbtmRzCMS8Tnij/IsPhxNrmyLyQuBHtYGH+DU+TJEp
KL9wIgSY3mW91Vf4UK2akd1bFAKnaOuFN5fwof+Yke+6SyHwa0f8xuQzfPhm
S+WM/O0QiJz+SGk+wofdWhcM23tCQPdpaPtcCB+2dGac1ZEPhZO+85Ymqnz4
wHHSoV4pFFxjp6YOK/BhQ7PnPw7qoVB4UYJ/VIYPq+t0nCL0Q8EQKrZXC/Ph
2fMtM1UQCofcm9UvzfNiXAx1+4qdoXBs8eiCfD8vaoiyBaEyFLjGO/rSingx
1SUswRXC4DDTKi1bhxclpYgzBTZhoNe9/JCgJi+W9LObXq8Pg4SSPbeTVXmx
LeiokL9LGNikLGj6yfOiUOK185H+YUCEXBgcFOTFgrJ/2g6khMGBaT5J6nce
vEJJkatrCYO/0q5Zltd50Lw1A+bawyDIjveHfyUPPj2atxM6wmBlta1iWhkP
TshcrmruDYPNN15xdZ3nQRODNuuu8TCof/n9/LEcHmz0Eg7/LBAOn/80/Rqk
82DXzVN3FFzCYVvObbrvWh78eN6CcHQNh6B73qW2Zjw4kzlIS3APhzPb73YZ
reJB1VC1wpd+4XCVJlKhYsSDsQpXmBkx4eAwXi/upMmDYgfqTaZzwmFjqYvl
VWEe3OLWd/Vldzj0j9t01A5zY9e0VHGGVwTsdlb8tSOdG60eWSlL+EWAyW3V
cOoBbryeE1FUtDMCZrzmfYqTuTFb90FeZWQEpFm8ZQ6wuXGzT2Ta86QI2ORC
7NaP4sbn95uCxIsj4INZyOrjW7jx6cFonVNfIkDOfodR81JutHA9dUntRwTc
ezC1/KgsN1YqP1KpmIoApuSRL55S3Hi0Tl6u4W8EXLjKcYxXhBs3fn7EPygS
CRpyImevUrmxfZPCF1WTSMAwSrbZFy5sk3xcVZ4YCQKnhr3akAuf6+cXj+yP
hDVpXb6xjVzYbRtQqHwgEsRuPplUaODC94yZtPzMSNhAsI6za7lwppvmk3w2
Eq6xR+McrnKhbn6GgCdGQr2+mTD1NBcelXIK4eOKgjiazI/D8Vy4WbpDJeRI
FPiyvjtOa5Dv+y5U8+r6bth+rST9XjonLpYe/zneGQ2LvoWq+YtUDCiudXy2
OwYsfjfSBXOo6NS2TlQyNgbc0h05YrKouPpbxysvegzI5PgsdGdSUXjVuP84
Mwak+rlazmVQsaFdlsmZHAPm0ckmJmlUlJ1kFa/Ji4Ho956K5kwqdlhZzF+u
jYHh+HYRCR8q3glqe/C1PgaMZPGBixcVSzK2HVrREAPnZM2OZnhQMbE7UvwB
xoClyOLJ2W1U1A09o/PmcQy83qNt1LqJigezFraJv4kBNZ/XZrqWVFw7iFVJ
HLGwVvDcE201Kk6VKV4/S40FL84arTQVKl6hs6sbuWKh6Ijmhw9KZHz8JrUL
fLHw9i6ncdlSKk6uKMUksVjYWfmSY7sUGc/hzJdJarFgYrSuzpmfij7bPr86
qxELAkbtSYO8VJRQ3tDXqBULwTctlhM8VNx/i+Ptgm4sTFrt1L3MSUWvd/TR
pBWx0Ha394DZAgVFTL1mkmxjgevkGk+lKQq2LNbMnV0fCzGL9XpfJimY2C6x
0GgfC+GCNIe7Pyn42e8ZddEpFuyGZIyDJijYnGEltG97LGQ84no18JmCCe+1
lPcFx4Lo43ebjD9QcOjIL9t96bEwd+zzeosuCnp8Pp19PCMWTit2+NI6Kdhp
v/5N+dFY6JbTjJXsoCByF9K7s2Phd5aVxMhTCp7fBxdphbFw7++H6OA2CvrT
Dy++LI8Fzv4n+qONFHzvpXxH50ksjEiseNJVTs5f38YNz2Ihe1JdY3cZOb8M
scW1IxZ051cZ8peS83c3j+99GQudF8rbzS+R8zuHy7wcIN8PK4JPniXnt7nN
2PuVXF8Z+zteeRTsO++Lud9jQcjx3dCfHApuXuQVKvsRCxH5z18XZFPQqsGr
+MVULFwZpugNZFJQZSXHC+2/5PodlBJIS6fgO9rG5S+WEJD82EkxM4mCXNOr
30qKEiAp4LnguJeCui1aR9zFCXCc3J4skkjB+EDq2BtpAqTe8ztUsSh42vDH
cWU5ArgYGTKHEijYtPDWJnApAT+2iUaFMikoXFR/dkyZABUbrjKbOAqahJU6
6aoRsFXM6J05g4Jeq/JnIzUI2PK3fPdaOgVLXsa4TeoQkHX9woxnLAWfXvDl
MtUj4HIhA+JiKDgZ7VTNXEbA0YHDloXRFAQhHeG/RgSMBP7zcS6Kgrv6pRos
TQgYuKyTbkY6o4wzPGUlAeevWSukRFKwx/bdI15zAgZ/OP3Vi6DgvPgzuuNa
AvS7DLSPhVNQbeiOaqYlQdaTLqWZMApG7S3YK25LQJ9oR9N4KAVzN6bpbV9P
gFVgnmMU6To54vUJewKE65P5ZkMoODjmd6jfkYBL4Untx0hz1WwyVdxEgO2F
oyw90rpp5sN+LgS0POzq7Agm87WVlnNxCwHprZT0PaTjVWQsP7oSMBu8NcGA
9OnvXN+03QhQnE/3GQ8i17dh8lS4B5kvoYrXZaTHM97bV3kREGD4pDaatLDn
898TPgRoKH6/aUHaRLvhkrEfAd/eVwSJkPb6p3xrXAABEXrxaWO7KLj/4QmO
up0EeDe972gmXZJz4OpsEAHv27/0lZB+4kf3WRtKQPWuQvtM0j+WBQjsDydg
v6raOyZp6XnnuqZIArS7ZZcHk7ZotwjmjiaggrWqx5104EldSftYAgw+/Mh1
Ip0eLNuUQSfguyYfxZb0VROemGdxBHimP6tZS7qbOqUomkCQ95FP0WtIz3YO
PdnKJkD5x5aelaRVznWw8hMJWNX/e68p6fVR97T7kggYnedX+deR5hWv5JMJ
KDq3GP+vc/kLU3ekEhCYmSj/7/N1vQeNzh8g4G5qbdO/HrzMePfhEBnfjfVm
q0hzMQIzNTMImB+gq/9rms1m89CjZD693qz6d7yzKHy6coyAqgtHXExIMwb1
TnzLJuCTd7uSEelTlXJ2hnkE7L0mvVOfNLJ5fxH5BIiH2C9qkh61/+f87RME
8PNy3VckLSQz7DxdSK7fn/xgCdLGHzvnzU4TsNJwbIiHtMfNxit7zxLgGxko
Pb2Tgg7ae/MLzxNg851bZJy0WZH5/tsXCXhmvq7nFWk9kdnwrksE3JZSjn5A
WiG1bvu3EjKf1zobrpBe8ifeir+cgDLD1bdySC+Em+ppVhBwxjo3OJ70+63V
HDuuESB3X/PratJdLTFfEm4Q8Jvn+GNp0k1my3uO3yT3W4ndwclACl5Sq6x4
WkuAiat/VTHp/ILwgvF6Mh4iyJNF+qAALZmrgQAZrSCzTaRDJy+7WSABoUEr
+X4EUNAzeJe1RxMBQdYrPO+TduxX02c0E5D4+Fh0Jmn9pnOUyjYC1kb+eKBF
+kdOYeXSLnK/7lSYdvUn6ze3x4lVLwnIEetiKZN+wZJOcX1FQMaE09EvfhS8
FZDnfuQ1AVMnZM4cJH351Rab0gECfsZZibmRLnAQXfbwLfl/Fgw01yadYJRJ
nRsioHDDwtMOXwqGXd74TXqEjPdK7f1S0l5yAn3Go2T9GzlelEJ6Y2Zbk/M4
ATc+Cpz2J21BOVQV/pmsV08389mQXhZnd/LgV3J9/TNBm7TSJ87Ui98JaA/j
TxclLbKjKarxB1kPzFpVFnZQkKNrv0f/JAHWXT4+P0j/tLVc93uKAAWhdblj
pD/U/V0m/ocAzbPj08OkX+o3yBrMEPBr4Vn3R9LN59mcjnNkfsOf7P1G+rbk
mu9BfwlI4cs3nCNdkv6nL3mRzE+hl6oI+f4T87cfnqHQIeJu8Ska6fQYxtV6
Tjpklh4ediTNGjEufMVNh30cH9XppMM9fqb+5KVD+nla3kXS3k+v7V4iQIdZ
A9mE16SdrHZ70oTooBoUNiNDrufaW/q2dsJ0qDyvZ+ZL2kDni0GAKB12jpkT
laSVT5fL7RWnQ/yakedUMn+ioqFchZJ0GCnIDwggTUnTmrglTYdbvOFObaQn
/4y87pSlQ2LnzoZV5H4Yjihu/ipPh1aNvLvXSHe/C7jGp0iHlBH97Ybkfnvk
qnJKQ5kOon1ppfWka1oH06xU6fDl3dz9jeR+Lrzm7ZWgSYf5s34GGeT/bXWe
b+kDbTqkfexPsiPrZU98wJSALhlfZaK4IFmPJSHk2BkDOrR8NXhxi6znN1XD
B0YN6fBPrdHrk2Q/2ModpWO4gg6xQ2taDpL9I/sp0dS0ig5itX0T+8h+s/x6
nIiQGR0cWt9iBtmPnucl+Gy3oINXvlPvWbJfCXkn/R6zooNW5t0PQ2R/S/90
WHeJIxlPh5nCU7Jfaj87ynRzosNGvrp3cvHkeeh6VvM5ZzpYPv9Uspvst1wJ
+b7GrnQI/bZmWo9N1neeC7nuPnT4gEmtX/aR+1u9bvbCbnI9JZZcWXaUgjK8
dzd8iaFD9ulW7gfk+aDm873jJnQ6OIUKlG/PouDUjYcGrUwy3wpnc5NzKRhj
1RH4dT8diJzBkwMnKRiyY7R9ZR4dtshpXAy8TEG3E5JFT2rJfJxqPSFwj6x/
KuMa3+vpQEuzcvAnz0O6V+5eFW2gg+w94sjt+2T9aQhs2o50eDq2usyvidyf
H65/etdGBy6ji0frWin4Z9mm1VOv6fDjnvCOmhdkP6lVaZJ+QwedQ4vFat3k
+cBqauOaQTKenYo3cl+R5yXXIr+kD3Qon+hbvq+PgvasTwf5vtBhVOewbO4g
BU82H3ilME8H6wcZAm+/UJDq7OlnuUCHqYzvbSXfyP7Rq/8pgIMBrbO5rATy
/Gj1+eV8CRcDXn7YxjD5RcFPImoaRksYEKz6N0RijoLbCv+pchVhQKaKYqzq
Xwo2qj1eFS/GgPIRavHqRbL/mMZsvCvFgM2WTx+nkOdbM+9Gwk6JASuOuHOm
C1Hx0kjOfIgKA7YKb+MZEibvB7uDDmaoMeC7a9b+dWJU/LBf6FSHFgOmTLVf
aUhTMaPE64HncgaU9Fp5u5Pn84Gfv0V2WzHgTWbat10rqcgjIjN8wIYBp8LO
/bRYQ0Vj/VU1Z2wZ8GKeWK9gQSX7L9PnmT0DVH6+EPthTcWVA3/K9LcwAM0z
joyS94Pc5mnrLwEM6EvySX0bTEXHE7P00FQGzAmFrQoromL8LfkN+w+Q80nE
jD04S8ULXWbyJw8x4Fvf7rylF6k4LbgHW4+Q40Ou0LvKyPvA/jkh7eMMKPgn
aci2horU8PnLHy8x4IKd22arLirWWyz0BrYwQM5ft/khLyfmPg5cUtbGAJlA
l6w0QU6MdGu1+dbOgD9rrbfai3CiUkx2FbODAfnF72peS3NiWrFa6tE+Bsy3
7OPS0+LEzQIbDGo+M0BZQkXsoR0n6p6o2Dn3lQHRs+j/woETOTVEC60mGBB5
22Z4fBMn1qx9zfnkFwOetgkd1HfjxKWxEa/fzTPg8zLmLqkQThztzUrjF4kD
T6WgsfMZnIi7puqdxeJAKXvXZcssTiz86TGRJxEHNfR3HJ/yONFJUM1LSTYO
NjLyVHzOcOINuLV8hWoc+KU6yLRe58TEy339PiviYDGb/avxNSdK0FWNrrvH
wV3+7UpSJlxYd9mt+LlnHBx0WHeucg0X+vQdkfrmHQd5GXN7nCy5sGTt7xma
fxzEPbp675IjF67me9JUHBoHgz+jiZsB5PgzjG0nWHGg17QpgpbDhZdaW5lJ
RXHQGZysmT7Fhfaz859On4mDlA01N8dnufCbvrHP3XNxoB0y/XQThRtX5p62
mi6Og1OlSyI1hbmxzSeWn6iMg9qWxz78Otz49ad8UdC9OBh+sN7kgg83mirs
bnR6FwcaD49HbH7MjemNY7knh+JAVN5GfbCTG/v9A0JGhuOAf2F0jOjjxqTL
20QTx+Og5/DKTdVj5PwG5oEVP+NgiojMyOThQR9rPh4BrngQdrfSHrLjwbTg
i5tadeKB92XI4ZCnPNjDp6AmoRcPIm1vJ1a+4kFaRf5v32Xx8J55Yp/EIA8+
n0g/99soHq72RtVOTfCgLCv6p6Z5PBwLtvDzluTFiiMW+Wmb4sFNXWvihR8v
vrje88aaiAf/vZ4zPRQ+HB09PZvCiAeHTOcX64T4cFZhp2xzfDxc8A941ijN
h2qHJ1zX7yGf1/o2NajHh7EBfE8c0+JhmVyvRYsbH4qKm9W7FsSD3Pa1n5Wv
8aEz/Ux+0B1y/EeXxaAwfgws33mzpCEe3rZcGY+J48f4d7SuscZ4OLA/K+ZQ
Mj+e3VgjFP4wHk71r9HsLeTHb+odqbufxkOayuO7i+38eLSbg2AOkushMLlm
93IBfGy6y/kwlQl/9zbPPeEQxDKxubJiLib8zg85uGOJIB78lsPZyMMESqJH
/YycINpevl83KcCEumgBxtYVgoiSS9V9JJggqMlUSQ8WxLpfXX8MNJhw9/Gp
bUod5Hw3LC902zHBmtcie7JcCA9l9sx938CERtPYfbJ1QhgcFuXG78gEefNt
xZtahFBDtUgQnJlgoOlsNvpBCM9n/44rdWPC4uea8FcKS/BkdJUjO4QJzztm
bbrylmD6sqVTyofJ5//skHDJEkYp1u/rIUeYEMUxYyl4QRgvNndFXctkQvf4
ttLBamFs8E4fg1wm8Iom5D7pEcaJw//07yhigsvRYyxUFkG30Y4HRVVMeLDD
YFqzRgQ1z6VlybxggvfI5LNUtihWf/Zz8utmQuLJR/Xv00QRVprzl/Yw4eHb
lL0OWaLo8exnysoBJiiZ8EXBJVE8Oucbv32ECbNnKHO3novilPuaHXm/SVfK
TT/VFMMm0e+6IksTwMhz7ebYN2IoTz2lYaiYAKqiNjtjx8SQ+GWntEU5ASpa
GtX2TIqhWs8ZsTz1BNj5J7Smgk8cU4o2TUvrJ0CqWfz1ZFNxXKdV9UhpbQIc
XtlE4csRx2bzSH8DvwRQ8LW/+NlFAhWWyXq5BCQAHlvBu9pHAhlKza4xOxPA
YlWuW06oBGpQFDZUhyRA5P0nNqHJEpjW8mTZyhjSdapxFTcl0HaL3tza5AR4
qT50uUJeEh8Ff87fVJwAr81XbB3+JYmDXz707bycAO3X1jreo0jhdMzAUnZp
Amiv6DpaJiKFunueXiipSICh3u4nN/WkMDvratXizQTgNG1UK94lhT51xKMb
zQkgGSwyLtkvhb/456akRhOA4NjBqu2WRqGsX6v0xxPA3ObrL9WP0qgl+ZVt
8zkB5PkatS79I40eSm85or8ngJPHmO8PaRlsNL4v1PY7AaJ325VXeslghneq
BpuXBXHtG4/3jMqgapXgtkEdFmjtXUfpEZfD8Qv2M6p6LFhhyVCi6cjh9YID
Z4OWsSBKTqvz9Fo5hP2L41+NWFBo8cNnNFQOfVx/7Z0zYwFz/8qvXA/ksGCm
v1R2EwtyXmp+OcCUR6H1V+a2xrJAKE5dbcfCUuw2GztfQGfB+41e4TMyCli0
XGN9fxwLVr0NibtjpIC6cmezA9gsOJ4/1VcRpIAbvuZoxqSywHmuP8S1QwFT
clkumfksuMS8YclxRRGnB+2LW+tZoB9mf8JsvzJmsNwOjNxlgaxnos+yM8qo
KLkrhNLIAkbf0wKXO8po47BPz7yJBQ9UxBo1/1HGozdv37zazoIb2UrPT65U
QZV0teb8ARboHVl8+OKmClarGZZUv2VBu9N7CUqzCtrdW5ve8Y4F4xxakS7d
Khg+6eHEP8KClpMunc7/qOAtn6zuxK9k/AecT3xZrYr2RvMjO/+ygCIhEWbb
qor9T/hb9y+yICGHuqb9tSpGBcuUn6GwYe0774jEr6qYW2Qc1cvNhl8BPqfC
xNXwDXfYP47CbAhhX6lO9lfDmP5X3MbKbMjNztqUzqOO1LjhMWdVNmyRfZDm
oKCO+SI/H0eos+GRRZ/1BmN1vGMrdOyyNhuSBw3y533VkeuajbScIRuWlp7x
jLyrjidSr2lxWLMh3mSi3zxZAyunvH54r2NDNluJ2HBWAzGI506tHRu+jhlN
X7urgeMbdmyKdmTDEkd9s8I/GrhaSJAx6MoGjeYU8Va6JvYdD37QEMwG5YaD
ezkTtfArt/gR2TA2PPPXDF51Vgs5mPe2MSLYMPDq1f181EIdT8lxvRg2LJt1
OXeZWxtZik3CRSxyPi7m4QNZ2njsWFTf7z1smPadtTp8QxsvLspe3JrEhvfd
6t0rXmpj+1C0qUAqG/58dXGUl9JB+RJFH9ZRNnn/WlNEy9ZBA5nHmq+OseF1
8/MAolIHbdIZE4Y5bFB0DeBOa9VBtxnl+qN5bHi8oiXYdkgHw8OfpIzns+Gq
nExT0YwOJg3EO9meZAOhf+x4nCgNc53UpM+fItf793OfB5o0LLn37N3caTZw
l9YsEGtoeNeAVe5+jg1tLtVGqRtp2HlOg37zAhvUo8qmJ7xpOCLaaSFyify9
VgulDeE0nE7ewxNRwoa4kyuyfjJpKPRLq7OljA1PbgWOFqXSUGXXi0K1Cjas
uFce8iyThiav9u5MqmLDGYGi+KICGtqvpy3rv8aGhLfqTKWzNPSp7f5tWs2G
psku69hLNIzR2Y85t9hwfoW53fVyGqYV6mV8q2HDyNLuY9NVNDwp0OvqUE/m
Kxf9Qm7QsHJPiuLlu2xw+bHllNwtGuLXZWMcjWyImF0+qVtDw+4dr6/7IBuG
mffzbtfScPx5GruuiQ2XH3yb66qj4V9LQ1vJR2zo2HYts6CehuI3BpbEtJL7
b2BIX+YODbXUDvU+ecyGhkXXXUGkzfKML2g/ZQP2VW7OJu3MNRie+pwNnhXG
Gy+RDow7bPKukw3t6TTJCtLxoyYLZi/ZMA5to/86w/19a8ErNuyo9LD412fb
juRM9pLxmqYtXCH9fy3nPUs=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
ZO7sOyYc8WkuUp7RxP8HkTdlXw==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFmnk8Vd/3/5EMpXvda57HzMM1JFMrJFNRmUPGzMS9ZpmKEA3GUgiJFElF
hqSVlCEUlUQpaUYlktnvfv/4fd7/3PN4Ph7n7LNer73WXnufx5XwDLH2ZmJg
YBil//zf1T+u06bP46M+r13DvVuB6hhcrZpx+C0n/H9WGyIf9nor/j/2PNOb
J8Kg8D+2kHr0cTJb7X/8YadyNmO5+v84yuX8Tr56jf9xe0Av72V9zf8xIYbx
p9Lj/1iToeggjX3b//hgmtbjRsv/eKpnw9GRkP84gTBAWc3+j0nWl76I1W+D
dqm47+wB6nglP7DIaGgbHN+VJb7rkDpuf6Nt7b2wDbKD3czq9qtjjzALW7qg
FrB/LiYdMFbH3+WlYX2uWnAuw8VcSUkd9W6/snD8qgUnShPZDNfUsP/vZYaj
7NvhzWnWaaNZNXTXCb1brLgd7N7ZyEV+U8NU3CQ5EbIdbDfduR3yQg0H+3cu
Bi9sh5cS3MeqqtXQm7zlZpagNhydjixWuayGC3Yjh+/oawM/u6jepwI1FHkX
/nwhSRuMmyr3v0tVQ7/Ja1eT2XVgcHzUltFbDZdVog5VKupAf9PA/jUXNTxD
M+bqttSBFc8P5vJ2ali/OJZAyNGBgO+HG9hM1HCdldv+gqAunLzby/FNXg2r
0q6Xcurrghxz6FyolBpasxpOph3ShWu8vbXSImp4heVIUmSpLtxNVhXmIKmh
ZSrz0+mHuuB/xtJ652Y1nN9YyOM9oQuO+2PzizaqodnGrus2Mnog0fP58ssl
Cs6kuP7tMdUDS6n44dq/FLzI/Henkb8elPE0KN3+TcHpDZKvKDV6cFY31E7j
KwVzmOLWt6jrQ7pOOwfvEAX1jpMtTtjow9Vb4tWUQQp+YryWtxKuDzrnXAuo
/RTUYhySn2zUh79jSXmHOyn4Piko3PONPuzj9PDi6aBgOsOGB2+W9OHhfgvT
H0jB0XVV264dOyDqEFP9agsFUxKfXNrptgO4d3w5pdtEQZV1l+93k3aA/eI/
94IGCiatnUyoeLQD9ujd23mnjoLyCeLdwp93gArfR4YjtRQcXL3LlccCMHw4
MXh3DQWlVyeqjpsD6DY5se+uomBfXOzsYgDAVu04yYBKCkaucAL1FEDETcPF
iisU7Fre8cLtGUDIraIqpzIKBi+dX9W32wmlo9uPxBVSkDdWxaw+cifcK41V
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
n+ADO2/UggPBbH+b7MW9PjBdscb1OsE1PFNWfw/7wD31X3reRL38kB+UVz3q
A3b97R8eEaxi1L7gdtwHLjyT0papIvZfUnnpo3wfuCh59/4PgjvPFKZOnfOB
vFm7p75EffLfP+W+poBggzidboITv7MFD97wgQ3ueuteEfVdvjJ45G6pD/D5
H8i2qSHhhKpL7Yc7PkD65cz7hmDXwM3hxjU+EOlxg/7lAVGfff9aeJp9YN2a
lHQzYn9Fz04X6rUS8Tnr1TFO8E3qhz0hnT5wzcjq1NE6EtLsGlRbegk9ej0+
7x+TcL4h/eixL0Q+ud5p3yD2d+0t8naqkC9oqZhOtRDnyUwLJ92U7AuSaxQV
zxPnj9rnn3/ZVF9wIXWXRBDn03l6182eVb5QcZebQSPOs6TTZ/nPq/tCPM/3
grQ2Em5JpjfL2fmC3ZDMyQLiPK3bpWOhedIXVLdvfdU7Qux/+9ujD/N94dzg
VvWmUeL8sFFONjvvC4qbd2ZWEOf9SvNVDz2v+YJ/kV1jyicSem5avjbrvi+I
ZRSf4iHuj8XVb0kTfb6A/bwPM38Q+ZayLWMN+YL4xHtfO+K+kZd4YbFs1Bdq
FFxVyTNEvZAfJUtM+YJFxFq+jF+E/1zXZkw5/MCaT4vhStxf+p9iewrl/cCz
x0o6eZHYTyNTsRrKfrBYZXxm1RKxn4eDyQ/X+kHg3ziX+wRn9rpbdur6geB3
3m1j/0jY/9K4lsPCD4punt2nw0nGPXdFCzx2+wH/cY39dSvIuPLWMf3PTD8o
y9wjs4OHjFdu8r6LZftBUrxk+QjBzYUL5Mz9fiCkJX9UmI+MtLyRlAcniPFV
g8cSBMj4ILEySLzKD0rn0pjNJDKO1Lft3fXADxghvB5xZMK+wJeTJ+v8gCP2
9wNFCtEfnZNF4ed+UP9QTPGkCBkFa49J8Pb4EffnlU/5xH2uy31T3bTfDzTC
vdT8xMnobfXMOHXID7purT+lLUHGyv75KI7PfpBLLeAfkCSjx2Lwi9k5PziQ
sTcxeBUZ001SB3WX/CBT4FvvrtVkLM+69CuW0x8upr5LMFtDxhWru2S/8/tD
9mX58A2yZLwF2xI/S/nD3QuRyuZEf8FxYJVq7xZ/KDsilk9VJ/qrJj1DCSN/
uL/35VF9DTLuJO10cjT1hyRay0gA0a8UF2SkdNr4g/JkxJs6op+xf/Knr9mL
WI/PuzxlAxmvcnZmPjzoD1WF9isZhmRstZy8MnfIH6hSwlWORmSczeGt2ZDh
D4e/tv85vI2M1nSD0Yocf/j+5Y3XBxMy/t5WuqW00B+6L1f47rMko9mhw1Pn
n/nDlbmbT6UdCHulKi90mv1BhmcHbf1Owr83rYWtrf5A21a21XQXET+6uAtH
jz+8K8o46OpExvgn15/6TfiDSCxr21Y3Mi592n5xYcoftnVrH1d1J/pH0nR8
7k/i+4vJ9WQPMmZ76ak/X/AHodroqy2eZLyx2HRaRTgAVgkcGfnnQ0Z1xu6Y
pyIB8CTTyhx9ifxYkW3cJQKgUJU2vcePjHjOheuYbADU5nuIjfmTsWfjxO7v
6wKgu9Lvb2YQGXnZAtuqnQMgUs/VJYroL49duL1qh0cAyNQP+vPvJqPoM4fZ
zz4BsGz4/fZrBMuIni+TCguAQy9+sgeJ/lSvXE1i/94AmGsqP8BkEv3lu/Yf
4skBcFravWR1NBmNl7Fe3TkcAAFvg1a3E2xn9yj5w/EAuLNN6KBhLBlDpqwn
Ta4EQPhbKY7gODJOU388HygKgKcvrlwxjCcje0velbiSAHjxvcNYLoGMyZkD
TsWVAXAjf3HnXCLRr6tE1gs+DwA6pUuXez/hn73IhWstAbDRp5VX6gAZixLu
x0F7AOje3cO56SBRj03/1KLeEfa4VIqyU4j9FZid//oLEc8IEddL6WR8fe8V
t9N0AHwLSg2dPkLGfm6B6N6ZAHjWfbjD/CjxHrlyyGp4MQCOcCyrX3mMjOTB
xGXfhANBrvSAwaeTZHR2CgjjXx8IBYPue9ILyOhTdKUnSy8QhpsfUlSvkDH0
16AJeUsggJ1yYFshcR6cdJWRMA2EuWHtw1LXif66zfYtwzkQNor0C1US741R
s00GhkmBUJqrKrX3AbF+Xlxpw4FAkGey3nPVEvU5WilpfigQvn5asf7QIyKf
qRozNscCwdoubQObeM+ooXyxe0EgFLavDOcj3j86wr5iQ1cDoZXm4+z+nIzg
eSnFrzgQqjbJ3rveREbbBUnP0PJACGM4OCm2kDFaT1gkviEQlpqezj9vI/xN
szow3xQIX+pO+vW3E/XadWRy3ytCn/qA4OcOMubFcjcd6gqEfNcLh7+8JmPN
nbmkk58C4XO88Ymz3WSs/6c7ITYZCN3Tk5OsHiL+NrFOZ78HglSjhdP2d0S8
v05pXf4bCKeSHzaP9hL6N6tdkv8XCOsW+m+W9BH6M0IEb3AFgWf4uOrufjL+
eVeUoMobBAMx1Bcq74nzQ3lk7JZgEFgL/eQaJbixPeOiEi0Y/ITTqrqVKPjE
8odFzepgiJnrDqon3p+1DS6/LOjBsC31U1+JGgXLq5WswtSCwcD/c0e8JgUv
FjTOlUEwHCs8rTK5gYJnaOrXYFswnI0bKn68kXivnsq1azMLhqFvkcuzNlMw
I93/+rRdMEhL1A6LGVCQFcW5a51fMFAHMf29CQWjJkI4GoKCoY3z7P69ZhQM
9e8o2RkeDIm8LX+pFhT0di7gZLOC4e9E5WsNKwpabYU71WnB4Hz4cT+3PQXl
SYkCUBoMHyZOiRm6U3BNxnBV651gKJU9NB/iQUEat4Wv1z1C760eoSxPCpJm
xWsO1AXD1Xyh4KfeFFwYvBf4tD0Y3jPxxYI/Bd/c/v7E/FcwvJ7THSXtpmCb
ssvud3PB8OTku+eiERTi/kGJ0KVg8Doze5cWSUHMPx55lCcEko8131VnUrB0
/9pVrZIhMPNpVVUqi4IptiHxDhACNfLQZ7ifgqLU6At5RiEw11KzLPkABYt6
E+vfmYbAklv4QNNBCjYFZAp624ZAo5LEt9BUCgom3S4I9w4B4y1V48syKJh3
41fToeQQWL0gdSkqj4KKEUuTTYdD4KarCzftNAWr1/GICB4NgZI28e6mMxTs
q5PwyDkZAmS7kyM6Fygo83bz94tXQyDuTHShyVUK3lyWLFndGALvGnRGZsop
2FFx9oG0bSj0ikq+NJwgeJZamOEaBspHzgUY2opgk+iLsuKkcLDlNTPrbxJB
O7E2maCju2EX7aHWkK0otk4JVr29EwGuU93pT+dEsUJontPxXgTo7GzwXb4o
iqfVPtt21UQAxNW66XNQ0Sf02eeu+ghARsmlwyuoODO6d1XPmwio0wmfiKdQ
8R13eKjzuwjw0ptwsqNSsY7uer/nfQTEvSkTkpCgYpqP7o53YxGwJCX/i72K
irT3U6m9sxEQbiG1IUKRiv/m+ztcFyNgXKM+t16ZiiO0ltV9yyJhrLS1YIUa
Fcucr1f38UfCuhbLUU9NKm594/W1XzoSVvcKO7vrUZHx03qjh2wknDbcVr1x
ExX5KfqH3zMi4UmR1wi/PhVf20rIDKhHAsnqw4pMAyoGtrQ7DG6NhM1MUVW6
KRW3T9QVeJlEgmGVck61GRU1+comBy0i4W/Bu2sWFlScMz2SNmQfCX/Ebln4
WVExs97w4bB/JHwesvmVa09F5rAGr29IJIRpv8tS3klFR47Vuz7sjgT3t5m2
9buouAb+Tn1gR8IuLTEpXhcqlteUy42kR8I+RVfN5d5UzO8piPTPigQJo717
P/hQMenPsdqRE5GgsG5N9ys/KprohDmOno0Ek/M2+Z1BVFTZ6VIYcCkScmvp
ZZMhVFwZYzY9WhgJv1+kuNPCqdhzh54xVhoJyhLLAkuiqPiojdwdeDcSShVu
LyPHUPHK1D/6+L1I0JqtfJ3BomK4Wv+j8bpI2H4uqL42kcjH9VPfP7VHguuG
HXNyh6mYSJGvlnpLjKdafFhMp+LvpIp9Nu8iYW6s7/2Xo1T8uqNToHKYmM/x
uoAjh1h/Xlhh/49IYHu9EOS5RPB1kzJ+/ih4IVgfJFdLRTGPLJK8YBT8nuD2
4UQqOlDexmxZGQVW9+6umHxKxdYk/01RlCjQX8soGGihYsOOlOdvaVHw5gLj
N7Wfipw8LSrfpKNARWQnp8YQFQ1qKcd410SBm56XveUIFR8oXNm5mR4Fqgd7
xFO+UnG27/P9nYwouFkjtv7iNBV1TmhJRShGwTrbV7+rZqgYbZqwL02ZsL/v
j+bLWSremcfhAtUomLkvcr9/gaj/wvuWryKi4DDP3RIHXzHcMoBl+ziYQOPp
4inTEseZG6vuXORkAosSUXpOVxxvxiSW13EzoSyQzTyyWRwl+NbfX+JlgveZ
66oeJuL4Y9113EdmgthYx7InzuJ4Y4nr6UURJpwu0bqe6iGOXi+8n9VRmXDl
lTd7i684vvSkNS9JMuHXt3LNjDBxLDqS9XqfHBPeBzz/GrtXHN13Try9KM8E
hVOvzBsPiqPIGrOeOgUmFDZaVy8/LI4HKjneL6kwweqH536rY+LoOhgztm8d
E872SnVPXRBHYR3XuX3GTBjL9xqJrRHHxn9V8xdNmVAwdjsgu1Yck5pFlurM
ifFzz4vPPhbHCa9XnP+smJDzID5j3zNxbMjYKrh/FxPops/enGsXx/ghhTX7
A5mQa69/U3JUHNVLUmQvBTPhzynVhbxxcRxlDdEfhzLBg0xLEp0QR3uBs0r/
Ipjw4ZCPMPWbOKrpCmnvj2PCwPBBJbs5cRw++tN4fzoTDk6ot98XlkDnifPZ
pzKYoGH5wKOaIoHt5qb9xZlMWPW1ltpMlUBcfibmTTYT0k1sXtKlJbBgP1xR
PsOEt5k7fVFZAiUGxifhHBPCH0nfc10rgdn6JzbuvMCEvV+LJfi1JPDA3Mf2
fZeZ4PnZ5e8NPQn0jjny73UxE6iHXfZ8MpfAng7t7Z9LmHCmuCp/rbUE2mn2
5y2VMcFQ9euxtB0SuHVSXV25nJg/At3xrhIoE/TGfd8DJlyYnQ/dtlsCh1zX
PFBqYYJF18DscC6hp6ZpObxiQt4oLq09R+gRj97h0MYE6NcwSCkg9Lxp+LT3
NRMSXwKHSQmhxyZU/HUfkX8D8TcrnhD+Gd2L3fuVCQmNjtKZXyVwUHm7RqdQ
NBzxPbdp9xZJ5J7Vey9KiobsB2P98UaSqNKocNSJEg3KPL/02GaSyPblHO8X
iwaW8oU/ZjskceW5movja6Lh4zkzVVd/SQRBpZWLWtHgxy+7R+CIJPr3UmsN
1keDvVizcm6WJGbc4ApN1o0GT6dmW5kcSewyHnzGszkaxm5Ibdp6ThJ3783b
SzGOhofjei3NZZJ4fop7UtExGgxENH/R3kpife2Ps6HO0eBj6+Rv2yuJnzKG
zMtcoyHJ8JJb/qAkrlesvartFQ0N7T8f+U9IYotXjPuWYML+uOHG5cto+Ld9
uMU+MRriZxVnLmnTUOZSW0JuUjRoCCoOb95IQ9PdjxR79kWDiPH9tVMGNMzh
O5PikRINHKq5cyetaahsZLc5ODMa0r5tCe0MoaFzRd3NvRejYY3ETmXnazS0
UNybe6YgGo690r+eUErDTec2H7h3JRqCbnt0Xa6goXRK9a7JomjI21BizVlP
wyH7cg6P20Q8SY9WjQ/QMPjHNUd9jAbNCw9cwiWkMF4ri3N+OBpmvYs1VA9L
Yci17ZNiI9Fge+lha32mFLpK8vdoj0UDVzrn3Z0npVB/WVpZ6EQ0NLtxyoYW
SCFHxwHn3h/R8CCvoirmgRSmR8XequGKgfcXyhkjU1KYMKJ95u3yGGi3j0vM
/iWFoc7fU77zxEDLYUtLswUpoj+LcFEWjAG5T3oDPXzSSCIFc58RjYH4IKm5
GwxpPHPbzTWeEQNrT/YbP/eWRr2TntefKMZA6Tpdkk6INHaxfWb4VWJgfZyX
ax1TGkUh6NgFdcL+K76v8inSmP0yur5+QwwsPid/ML0ujemfj6gIWcbAFney
7u0ZaYynV/+9HBEDp0Vu3bx4YRU65ouea7lP2Gux1//5ejX2ff8tHLE1FiIj
hm8kPpHBFcLiHw8ZEVzqEHG3SQa11TZUXTCOBaN8Rc2xNhlMD4xzf2UeCyqi
B5dtG5BB3b4/N9R2xMJGT5ews39l0HdWPMnYIRYKKOMfTiyTxSyqnq37rlho
WsXRlcAriyO28b+OusSC2XGJs6JispjTMGv4xScWwne9FbXUlMW6YQkql38s
uGZuuHVGVxY/L+l9ogXGgv3vxNlX+rK4dWPCMcvQWGBqlAkMmcviVNlcb3E0
sb7f+pBsL1mktUjeehIbC6mr7y5N+MuiyaeNB9+xY8GkvJcqHyqL5+USFfn2
xEK7KpVHK1YWLfP/xgSnxILAvrah6sOyyK6kmR04FAvL65Zt5zsqi5c7NtFO
p8XC5zRfv03HZXFWYA8+P0rY1+G0McqXxaID84KKp2KBo7Gxia9IFjsvSA1B
Xiw8nfrour9YFhcfbK5wPB0LYc73ZgdLZXHnrz0uh8/HgqPtkcCQClnkDF24
Nno1Fnz53j/reCyL6mnSCYtFBMuMjryul0WXq/pW1OJY2P8nO6X9mSzeGUj6
YVwWC7YCq44+aZFFT4dFuHovFpxO15+r7ZbFjKhVlNr7sTCRtyfyZa8s3sva
Mvq6JhaeB7rxjr+XRcGmvUe56mJhSMaBZDwiizX6S92+jUR8FlMT2r4T+Xjh
K3SjKRYe/k4prvoli+GOz40mm2OhdVD06oM5WVwdlV0W1xYLF3rx9xpOOZxd
mPlQ2xELW3ta0lJXyGHHERcJzjexsO+ysYWggBymFsqlZPbEgn4G9/kMUTn0
1Eyr7uiNhdGG87tTJOVww6Mvk2LvY6H+st5i4Wo5nOiqdL48TOhZ9eCSl7Ic
2vGbqVdNEP4WjP1u2yqHKvklfvNfiXjvaP0hZiaHXPKkM1u/xcLfBoPGdGs5
rNryjqvlZyxM+sPoF1c5lGKGvRtciAX+JN/Ry3FyONZ9PJVPmAXdayh64/fl
EP1namzILLhyoJmbjXJ45rvzt5MiLDjxwqdN6oUcWgnIua6WYMF7xo3DV3rl
8C5UaqyTZcH2DFe63ZIcZrRIBMTTWTAhxZ+1nYeO/s57zz5isCCOtemnKYmO
YtGmy81VWKAe0kPSlKNj0rWeXvd1xHq8HcLBJnR01N5CuqLDguw+Sh6HDR01
Hl82Gd/AAsuyLrMkRzp+6Am9w9RnwW7SpZyVQXSsDWgbrQIWOPL3jq2KpGPu
j3VSC1tZsF6db25ZHB3NBRcPHTZhgdJnkflNh+kod8bnYYsZC45u35FwJIuO
84zGaZIlC5YK/nEUnKLjLYPjbudsWLCMp4NFu0LHtJc/s4fsWHCtsSAt4QYd
vV2cGxkOLFhp6CqRf4uOIjGyWnecWNBn+2pxxQM6Vl9zLGx1YYHEs3K9pTo6
uvccpU66sYCPUfPr/lM6LhN4kibgyQKdipH6dU10LNrye07ZmwVCwqeDmS/p
aBmlGm7uywKZIA5uZjsdv13xHgj0Z8GNk6++ab+hox5vS31hMAtqcovUOfro
2L+JQ6c+lAUfd6cFCw3Q8eBunetD4SyQ1tWuHhqio0JBqOS/CGJ8fc65PR/p
2Nx56egqJgsCcqkvBkfpGLH87eLmGBacRi894U+EHj3+KFcWC7zv+PMKThB6
Qg0+xMexQLDZNrHnC6HnQuzO/AQWPH+bsMCepCNHe3HjvT0scLjsqzwxRcdr
nIN6b/ayQJf7V/n6aUKPjmjJj/0syFoM93L5TsepIItV5GQWGG3ZRnH7Qcec
s/uOa6SywPlmcoP+TzpueFWxzOYwC6Y/eMctmyH0/fsUE57Ogi4L1C4l+ID2
6rGMDBZ8H7rPt/UXHeUDHJyLM4l6VJYhI8Ev8tObnx9jwQ7DbBeN34S+5kf6
Y9lE/FZUT2UTTFn8cYv7JAtShqrejhNcpaEkS89lQWHJKp4Nf+jo5utx0jCf
BeLhpREHCb76/HncvnMsmKxNNRSZJerp78Ln8xdYEDo6qOhN8KSatvvDSyy4
47rMoILgHK+g1neXWfB38JiI8BwddXPOb50tZEGj+jMSm+Deho5ysSIWjK9s
ypggeP+fFQydGyygvcmrj/hL6FHRz3e4yYLe6db33PN0bHJn8kWXsmBj2JHe
WwSHHy/ak32LBRsOPS6IWKAjub5v8tYdFmy2urLcdJHQM0PyflXOgrqGNY90
l+joqmja+aWSBblclfZG/+i45LLHmP8+C2YDDkAohzwWZt6pUqoh8qf7Zez2
Mnk0fzyqZPaQBQ9bx4+Kcsnj1++0cwGPCP/CjMzPcMtjtrydUOpjFiiknlMw
WCGPOk6H9l95wgI3i1QZHl557D3y4Ds+ZQHnReflP/jkcV/tN7/BZywQboFD
HILyKPdNvmvxOQv8zcaM1q2Ux+eyrubSzUT9hhxvyyDJIymtQc2llQU+D6ze
FFPlsbJm7mJcOwvinXb0MSXk0eWrOjmvkwX9AvlvvKTk8cqOM786u1jg1TF1
sUxWHs1SW4O+97CA+kXUUohB+F/F1Svcx4K71iWnc5QIf6Uj6qwGCX3P+58L
aspjet14zulhIn8b3qk5rSf89/YJGvnIgvS2R80teoT/13aSkj6xwCLxR4Cm
kTw2qW/2LfnOguJ/cSEtjvJI66jU/fOTBQ33Ve2s3OVxd4y6wLbfRP6j6rKm
fOSRUi1b2fuXBcfol+ezd8ujuyHvCn5uNli2cXGsOSyPtz4e7N21gg0242G5
SZnyuOzw/K3LvGxY+agkZzJHHouap5w2CrGh/qLXjWUF8jjt8LY4WIwN8gEX
n91/II+pgVesnyuxwa5tOipuWh67eKXlRFTZ4PVvzTahP/KoXJL723MtG2hK
K8+cWpTH1m/pl35rseGFAFpH8TNQIiHyO2MzG27+Iemr0BkYKvX5GXMLGyp+
vy+kKTPw0SPfs48M2ODxZ579TZ2BvpyO23YZs8Fkxv2W4SYGlhzVz021ZkO6
85lzEbYM4hFRFdJuywaDo6eagnYy0K5dA6Tt2XCUHuBr4MLAGVH6eIUjG6wj
fC2P+DLQ9P75h/+c2dDOU/p4PpCBZ1zEsre7scE7J6TbKoyBcJFv40cvNjTr
kLMyYxiYvTVFSMOXDbainV5JcQz8+GFhONGfDdwq0zLWexiYrjidQQlhQ+v5
CnJuMgM773T1G0az4XHn56H3xxk4Nnb+b3IsG3LtPCxHcxj4V9pPooHNBmdH
HsmeXAbKHfnmYLqHDdd2zU8cOsdApg9vi2UqG059MQ5UL2IgibKpxiGPDaUf
3OvlHzBQ3pyj+9RpNjS4v9xWWMtAvX2NM2/PskHDoWxB4TEDvSfsNZ0vsSEu
m2OlcQMDb9eHXXe/wQZf0X85860MrJ/VenbhJhEfnjlKSwcDu9RnPwyUsqHl
xiX3m2+IeJ5NXe1zlw04lHzsfC8DbWIu5AY8YEOU4Lm/weNEPor9Kopq2XCO
dpyjY4KB7EHljvE6Nhw2nk61nWLgxe1VgqFP2XAgKoc75xcDJ+ltKREv2cCV
t4G1YbkCcrjmXr7dStQL+9cuTz4FFM12ezzdzoZ3T2eELwopoP7C+N/ot2y4
9HHDVJCYAma+4YiOG2ADv5D3mKyyAhbwPz9ePcQGneFOS0F1BazcmlU294EN
Hz23/RRap4B9pZKf94wT8bl3bdeuLQqockjb+8A0Gzj76nnG7BXwhY6/zRHO
OEj1TwtLOaiAN8jzNwq542DVOq3JdWkKeHjyBFfdijgwOZQw9y1TAY2vPa7+
wR8HXn9c/NJPKyCKStHdReIg4Qx/kuodBaz+2fFHXT4O/tVJi3QOEfbuGlx+
YxIHU6nzrAkTRUzL6pqfMouDa6MvaUFWihgYstuRzzIOLraUiE/YK6K87DkB
sImD4ae+6dzeiliQ/Zt13TEOHEbu8OclKuLpyDLLxKA4aNAw/5l5VxHT10rN
rDkSB2fJ178vKCshNeH3naCjxPiyj/VN2kp4paFj9+2sOGixDK0u2ayEtW7p
45ATB5oy/zKqrZXw25FfvR7n4sCgjOz9J1oJHcfanpwriwOerdFlpvVKyLiU
ely8Mw7S7QTNBVnKWD7hZeX1Jg7WashpSB5URtDdzHe9Kw4mc/wGIEsZnV99
T9btiwP7lDWZndeUMXPek71rJA6apzb+5OtRxhmnjR4nfxPrTd9p/2OggvWk
KRVhqXhYNM7/RRVVRRrnWXnNVfEwreA4oSqjitE/TVbvWBMPUkq5BhpqqijX
dYF8kh4PeU+KlGa3qWLyOetZMbV4OLfxvmdYtCpuUyh7tnpLPPGeTWr/+kIV
GzaHe6t7xYNH0uR5Lj81lF4r4WrrEw8NDO6lD2FqGLu6wSHKLx4MObO1q2PV
UH6ZtFl5UDwsuAkMWx1Ww9TGlrW6UcT67uoVnsVqaLxDdX7LwXj4WZF7Te67
Gp436p7xTIkHoa8HhXb/VcOZdSlT+w/Fw2R6VXQ711q8KtY3/ORIPDinreWa
EFuL3P0ZTSY58TD4opJ9Gtbis8CJXOvCeLDa+lFVPXctDnz50ON3LR7Sy65z
Hi1Yi7NRfVKJ1+NBqTOEk1q6FlX2vLxcVELER9zwZMXTtZh9/FbZv4p4sFj+
VErt11p0r45+drchHm74O8mxfNSRvSWMt6kxHj44HdUejVTH4/V+2wea4kHN
RZh1ZJ861r/c2cH/Kh5Iy2f9Is+ro9Kw7nu/t/HwIK0gv6pXHX/yzc9Qx+LB
vOlWRoCPBgoe/7lB7VM8FHkLCq+P0UAF0a+JRhPxoNEYLbT5kAY6r37PETkV
D59HjYJnijWwTvuxYNPveLCVCByh/9bADLcU+USeBKhYx7Lht9bEq0N7grL5
EmDbdfKjfidNfBQQe7NIIAFseU2udfhq4nRkgOZr4QTwlTu7gZGgiY6pZvpq
EgkQ8NHkZup1TZQtE9g5oJQARlaHNB8IaOGny+ZzsqoJkG0tt12epoV38g5d
DFibAGu226Q+VdJCOPDv01etBKg1Nk67aqqF7g4/985vSgC/8FD+5Ye0kG6u
STfYkgDR2foOarlaOKG/uynZIAF+e3c/zrqmhQkK4xR+4wSgVX99969RC/Pm
eq9LWBPzh/vLLwpqo+eUuLW7bQJMHmfa5a7WRsbHnT8u7UiA3bTNTk81tfFr
94n8jw4JcF/yt5XiNm2sfNmqr+iYACKvPRIe79LGPU8EPoQ6J4DT2hc/jwRr
o1GVedot14T//V+Cv+SQ2g/3/7jjUn2Hjtd/PBVdFWgc/B8Lmt6ct2f+x8k5
CbZZuf/x7IB54fOa/9hca2HEb/E/zk+5rcBhmPg/phWtck/I/I8vNh098aP7
P/5/xMSXgw==
         "]]}}}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0, -19.341714781149985`}, PlotRange -> NCache[{{0, 
         Rational[1, 10000000]}, {-19.341714781149985`, 
        0.9210340371976168}}, {{0, 1.*^-7}, {-19.341714781149985`, 
        0.9210340371976168}}], DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{2.040816326530612*^-15, 
        9.999999795918367*^-8}, {-18.420680743952367`, \
-3.264055692398013*^-14}}, {{2.040816326530612*^-15, 
        9.999999795918367*^-8}, {-18.420680743952367`, \
-3.264055692398013*^-14}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Probabilities by t, starting in |gdu>\"", TraditionalForm], 
     PlotRange -> NCache[{{0, 
         Rational[1, 10000000]}, {-18.420680743952367`, 0.}}, {{
        0, 1.*^-7}, {-18.420680743952367`, 0.}}], PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|g\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|g\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[DownArrow]\[DoubleUpArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleDownArrow]\[RightAngleBracket]\"", 
       "\"|e\[UpArrow]\[DoubleUpArrow]\[RightAngleBracket]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7530337045279493`*^9, 3.7530337422382507`*^9, {3.753033773325361*^9, 
   3.753033887035925*^9}, 3.7530339533247805`*^9, 3.753034872791766*^9, 
   3.7530349110787992`*^9, 3.75303550531141*^9, {3.753036892330864*^9, 
   3.75303690335522*^9}, {3.753036993758783*^9, 3.753037076237381*^9}, 
   3.7530373189364166`*^9, {3.7530373786907825`*^9, 3.7530373900419397`*^9}, 
   3.753037433114729*^9, {3.753037521837414*^9, 3.753037543035815*^9}, 
   3.7530376428489203`*^9, 3.7530377032713346`*^9, 3.7530384259362135`*^9, 
   3.753038672784766*^9, 3.753125077168089*^9, 3.753125110154107*^9, 
   3.754181048512888*^9, 3.754181111420598*^9, 3.754181143035368*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.753038456242923*^9, 3.753038458463973*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.751300551985358*^9, 3.7513005536516433`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FsX", " ", "=", " ", "Fs"}], ";"}]], "Input",
 CellChangeTimes->{{3.750643492663292*^9, 3.750643494684126*^9}, {
   3.7506453379368153`*^9, 3.7506453394809246`*^9}, 3.7506453722720084`*^9, 
   3.7506906409205055`*^9, 3.7513043345089893`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FsY2", " ", "=", " ", "Fs"}], ";"}]], "Input",
 CellChangeTimes->{{3.7506434553258314`*^9, 3.7506434633482027`*^9}, {
   3.750773139994686*^9, 3.7507731437637076`*^9}, 3.7507733072321825`*^9, 
   3.7507771620778675`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "FgivenSD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FgivenSD", "[", 
    RowBox[{"\[Sigma]_", ",", " ", "\[Mu]_", ",", " ", "Fint_"}], "]"}], " ", 
   ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{"Mean", "[", 
     RowBox[{"Fint", "[", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"\[Mu]", ",", " ", "\[Sigma]"}], "]"}], ",", " ", "10000"}], 
       "]"}], "]"}], "]"}], "\[IndentingNewLine]", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fidelityData", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "FsX", ",", " ", "0", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(E\), \(0\)]\) = 0\>\""}], "}"}], "}"}], " ",
      "//", " ", "Transpose"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fidelityPoints", " ", "=", " ", 
   RowBox[{"fidelityData", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"means", " ", "=", " ", 
   RowBox[{"fidelityData", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"names", " ", "=", " ", 
    RowBox[{"fidelityData", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Fints", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{"Interpolation", ",", " ", "fidelityPoints"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"FgivenSD", "[", 
        RowBox[{"\[Sigma]", ",", " ", 
         RowBox[{"means", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"Fints", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "names", "]"}]}], "}"}]}], "]"}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Sigma]", ",", " ", ".0001", ",", " ", "300"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Sigma]", "\[Delta]E"], ",", " ", "\"\<1 - F\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "names"}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Error by noise \[Sigma]\>\""}], ",", 
   " ", 
   RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", " ", 
   RowBox[{"MaxRecursion", "\[Rule]", "5"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7506387677388825`*^9, 3.7506389780835476`*^9}, {
   3.7506390266595335`*^9, 3.7506390603560934`*^9}, {3.7506393454646244`*^9, 
   3.750639355809657*^9}, {3.750639440953539*^9, 3.750639488148314*^9}, {
   3.7506395229072623`*^9, 3.750639581875247*^9}, {3.7506396364987345`*^9, 
   3.7506396511153045`*^9}, {3.750639681571734*^9, 3.750639752066068*^9}, {
   3.750639924171789*^9, 3.7506399269511833`*^9}, {3.7506431884647737`*^9, 
   3.750643190654513*^9}, 3.750643467810629*^9, {3.7506442349910727`*^9, 
   3.7506442982625685`*^9}, {3.750644370999611*^9, 3.750644379669609*^9}, {
   3.750645342808004*^9, 3.750645408128324*^9}, {3.750690648776973*^9, 
   3.750690853756732*^9}, 3.7506909453828716`*^9, {3.750773153604254*^9, 
   3.750773224922087*^9}, {3.750773257310037*^9, 3.7507733005555325`*^9}, {
   3.750777196273508*^9, 3.750777198734568*^9}, {3.7513360757330694`*^9, 
   3.7513360956212516`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RandomVariate", "::", "posprm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Parameter \[NoBreak]\\!\\(\\*RowBox[{\\\"\[Sigma]\\\"}]\\)\
\[NoBreak] at position \[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"NormalDistribution\\\", \\\"[\\\", \
RowBox[{\\\"0\\\", \\\",\\\", \\\"\[Sigma]\\\"}], \\\"]\\\"}]\\)\[NoBreak] is \
expected to be positive. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/RandomVariate\\\", ButtonNote -> \
\\\"RandomVariate::posprm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7506443028639235`*^9, {3.75064437694318*^9, 3.7506443855052423`*^9}, {
   3.7506453515029893`*^9, 3.7506454124348407`*^9}, 3.750690768744769*^9, 
   3.750690819277617*^9, 3.7506908545612636`*^9, 3.7506909460734725`*^9, 
   3.75077317069761*^9, {3.750773205489518*^9, 3.750773232901292*^9}, 
   3.7507755378175154`*^9, 3.7507771793967857`*^9, {3.751336089538311*^9, 
   3.7513360965330534`*^9}, 3.753039921125946*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {}}, {Ticks -> {Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     AxesOrigin -> {0.0001, -9.930187039027768}, 
     PlotRange -> {{0.0001, 300}, {-9.930187039027768, -1.5333599544912506`}},
      DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{0.00013333332222222223`, 
        299.9999666666778}, {-9.548513080639744, -1.9150339128792742`}}, {{
        0.00013333332222222223`, 
        299.9999666666778}, {-9.548513080639744, -1.9150339128792742`}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        SubscriptBox["\[Sigma]", "\[Delta]E"], TraditionalForm], 
       FormBox["\"1 - F\"", TraditionalForm]}, 
     AxesOrigin -> {0, -9.600000000000001}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Error by noise \[Sigma]\"", TraditionalForm], 
     PlotRange -> {{0.0001, 300}, {-9.548513080639744, -1.9150339128792742`}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\) = 0\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.750638826168182*^9, 3.750638830352768*^9}, {
   3.7506389415086455`*^9, 3.750638954567113*^9}, {3.7506394717907505`*^9, 
   3.750639479501302*^9}, {3.7506395401733017`*^9, 3.750639562149625*^9}, 
   3.7506395932097073`*^9, 3.7506398332162557`*^9, 3.75064000239666*^9, 
   3.7506435486110177`*^9, {3.750644283120304*^9, 3.7506443026720247`*^9}, {
   3.7506443767512913`*^9, 3.7506443852753744`*^9}, {3.750645351219154*^9, 
   3.7506454121709914`*^9}, 3.7506907685089035`*^9, 3.7506908193515744`*^9, 
   3.7506908546332216`*^9, 3.750690946142432*^9, 3.750773171877412*^9, {
   3.750773205979106*^9, 3.750773232447641*^9}, 3.7507755375555034`*^9, 
   3.7507771790673995`*^9, {3.751336092613582*^9, 3.751336120274824*^9}, 
   3.753039941025738*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7506387574318275`*^9, 3.7506387595056314`*^9}}]
}, Open  ]]
},
WindowSize->{752, 676},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 104, 1, 70, "Section"],
Cell[687, 25, 15559, 315, 1052, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16283, 345, 105, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[16413, 350, 14009, 269, 1079, "Input"],
Cell[CellGroupData[{
Cell[30447, 623, 247, 4, 23, "Print"],
Cell[30697, 629, 445, 11, 49, "Print"],
Cell[31145, 642, 442, 11, 49, "Print"],
Cell[31590, 655, 429, 9, 49, "Print"],
Cell[32022, 666, 436, 10, 49, "Print"],
Cell[32461, 678, 437, 10, 49, "Print"],
Cell[32901, 690, 436, 10, 49, "Print"],
Cell[33340, 702, 439, 10, 49, "Print"],
Cell[33782, 714, 430, 9, 49, "Print"],
Cell[34215, 725, 438, 10, 49, "Print"],
Cell[34656, 737, 438, 10, 49, "Print"],
Cell[35097, 749, 435, 10, 49, "Print"],
Cell[35535, 761, 437, 10, 49, "Print"],
Cell[35975, 773, 430, 9, 49, "Print"],
Cell[36408, 784, 436, 10, 49, "Print"],
Cell[36847, 796, 437, 10, 49, "Print"],
Cell[37287, 808, 435, 10, 49, "Print"],
Cell[37725, 820, 438, 10, 49, "Print"],
Cell[38166, 832, 436, 10, 49, "Print"],
Cell[38605, 844, 432, 9, 49, "Print"],
Cell[39040, 855, 431, 9, 49, "Print"],
Cell[39474, 866, 430, 9, 49, "Print"],
Cell[39907, 877, 437, 10, 49, "Print"],
Cell[40347, 889, 435, 10, 49, "Print"],
Cell[40785, 901, 429, 9, 49, "Print"],
Cell[41217, 912, 429, 9, 49, "Print"],
Cell[41649, 923, 439, 10, 49, "Print"],
Cell[42091, 935, 431, 9, 49, "Print"],
Cell[42525, 946, 430, 9, 49, "Print"],
Cell[42958, 957, 438, 10, 49, "Print"],
Cell[43399, 969, 438, 10, 49, "Print"],
Cell[43840, 981, 431, 9, 49, "Print"],
Cell[44274, 992, 435, 10, 49, "Print"],
Cell[44712, 1004, 438, 10, 49, "Print"],
Cell[45153, 1016, 431, 9, 49, "Print"],
Cell[45587, 1027, 434, 10, 49, "Print"],
Cell[46024, 1039, 429, 9, 49, "Print"],
Cell[46456, 1050, 435, 10, 49, "Print"],
Cell[46894, 1062, 437, 10, 49, "Print"],
Cell[47334, 1074, 430, 9, 49, "Print"],
Cell[47767, 1085, 428, 9, 49, "Print"],
Cell[48198, 1096, 435, 10, 49, "Print"],
Cell[48636, 1108, 429, 9, 49, "Print"],
Cell[49068, 1119, 436, 10, 49, "Print"],
Cell[49507, 1131, 425, 9, 49, "Print"],
Cell[49935, 1142, 437, 10, 49, "Print"],
Cell[50375, 1154, 436, 10, 49, "Print"]
}, Open  ]],
Cell[50826, 1167, 150, 2, 31, "Output"],
Cell[50979, 1171, 150, 2, 31, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51178, 1179, 100, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[51303, 1184, 14813, 325, 1188, "Input"],
Cell[66119, 1511, 383, 6, 23, "Print"],
Cell[66505, 1519, 182393, 3142, 242, "Output"],
Cell[248901, 4663, 160749, 2788, 242, "Output"]
}, Open  ]],
Cell[409665, 7454, 92, 1, 31, "Input"],
Cell[409760, 7457, 94, 1, 31, "Input"],
Cell[409857, 7460, 276, 5, 31, "Input"],
Cell[410136, 7467, 255, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[410416, 7476, 3658, 87, 332, "Input"],
Cell[414077, 7565, 1100, 19, 23, "Message"],
Cell[415180, 7586, 14379, 276, 249, "Output"]
}, Open  ]],
Cell[429574, 7865, 96, 1, 31, "Input"]
}, Open  ]]
}
]
*)


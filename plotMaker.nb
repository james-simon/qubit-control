(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    719477,      14521]
NotebookOptionsPosition[    717586,      14459]
NotebookOutlinePosition[    717930,      14474]
CellTagsIndexPosition[    717887,      14471]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"fDatasets", " ", "=", " ", 
   RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fDatasetsNoEcho", " ", "=", " ", 
   RowBox[{"Association", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fDatasetsNaive", " ", "=", " ", 
   RowBox[{"Association", "[", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7686416230123987`*^9, 3.7686416636389756`*^9}, 
   3.769238725321396*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sweepMax", " ", "=", " ", "1200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sweepStep", " ", "=", " ", "30"}], ";"}]}], "Input",
 CellChangeTimes->{{3.769186269624183*^9, 3.769186305309611*^9}, {
  3.769186347137499*^9, 3.769186347934037*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xTarget", " ", "=", " ", 
    RowBox[{"\[Pi]", "/", "4"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]s", " ", "=", " ", 
   RowBox[{"find\[Kappa]s", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]sNoEcho", " ", "=", " ", 
   RowBox[{"find\[Kappa]sNoEcho", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]sNaive", " ", "=", " ", 
    RowBox[{"find\[Kappa]sNaive", "[", "\[Phi]xTarget", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGate", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]s"}], 
         "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNoEcho", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNoEcho", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", 
          "\[Kappa]sNoEcho"}], "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNaive", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNaive", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]sNaive"}],
          "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.768393346603628*^9, 3.768393388375575*^9}, {
   3.768393459221733*^9, 3.7683936402294817`*^9}, {3.7683936751849213`*^9, 
   3.7683936847327414`*^9}, {3.76842035878948*^9, 3.7684204516529455`*^9}, {
   3.768425822268099*^9, 3.768425846421177*^9}, {3.768461954869193*^9, 
   3.7684619999771876`*^9}, 3.768478582279481*^9, 3.768478620191625*^9, {
   3.768594806753945*^9, 3.768594806927845*^9}, {3.768754116704633*^9, 
   3.7687541169854717`*^9}, {3.769186213642458*^9, 3.769186232694474*^9}, {
   3.7691863053855677`*^9, 3.7691863054225445`*^9}, {3.769186353268962*^9, 
   3.7691863572216883`*^9}, 3.769371587375347*^9, 3.769397628994018*^9, {
   3.7694462592850323`*^9, 3.769446270152767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.247382246115628`", ",", "0.791962132809341`", ",", "6.283185285983492`", 
   ",", "5.329227237687122`", ",", "0.9999947545970702`"}], "}"}]], "Print",
 CellChangeTimes->{3.769274709466128*^9, 3.7693717637156796`*^9, 
  3.7693977834149904`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.03060424046639021`", ",", "0.7856398822909636`", ",", 
   "6.283177184564338`", ",", "1.4094346647230385`", ",", 
   "1.0000016716644655`"}], "}"}]], "Print",
 CellChangeTimes->{3.769274709466128*^9, 3.7693717637156796`*^9, 
  3.7693978578001065`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.077375728218965`", ",", "0.7853067255944676`", ",", "6.283184996086968`",
    ",", "5.3724471512080525`", ",", "1.0000015187639235`"}], "}"}]], "Print",
 CellChangeTimes->{3.769274709466128*^9, 3.7693717637156796`*^9, 
  3.7693979124346085`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1200"}], ",", "0.6917839857215071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1170"}], ",", "0.6391392631438251`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1140"}], ",", "0.584324087767115`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1110"}], ",", "0.5293754132793299`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1080"}], ",", "0.47660853716983154`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1050"}], ",", "0.42854007840276254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1020"}], ",", "0.38777792711696624`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "990"}], ",", "0.3568810446756294`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "960"}], ",", "0.33818837114539885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "930"}], ",", "0.33362515968578604`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "900"}], ",", "0.3444978632219249`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "870"}], ",", "0.3712898946787708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "840"}], ",", "0.4134817924962696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "810"}], ",", "0.46941656624074846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "780"}], ",", "0.5362369864524441`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "750"}], ",", "0.6099204125254886`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "720"}], ",", "0.685431633888249`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "690"}], ",", "0.7570075650519446`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "660"}], ",", "0.8185763950778226`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "630"}], ",", "0.8642902307614586`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "600"}], ",", "0.8891432919543247`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "570"}], ",", "0.8896083457750112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "540"}], ",", "0.8642283290082032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "510"}], ",", "0.8140590584074108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "480"}], ",", "0.7428871802177541`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "450"}], ",", "0.6571326236760512`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "420"}], ",", "0.5653932381339519`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "390"}], ",", "0.477625592260453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "360"}], ",", "0.40402456456041924`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "330"}], ",", "0.3537278154037805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "300"}], ",", "0.333535012232801`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "270"}], ",", "0.3468650623983006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "240"}], ",", "0.39316212863627864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "210"}], ",", "0.46789602306897404`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "180"}], ",", "0.5631767435259242`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "150"}], ",", "0.6688589709938522`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "120"}], ",", "0.7738872575655101`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "90"}], ",", "0.8676023885450486`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "60"}], ",", "0.9407838658533771`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "30"}], ",", "0.9863537818138323`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.9997979143154734`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.9794532735592159`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "0.9267577554071127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "0.8464118849324842`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "0.7463044300884887`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", "0.6369724983480576`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "0.5304881312801191`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "0.43887208033246794`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"240", ",", "0.3723301064570378`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"270", ",", "0.33770807513630957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "0.3375304121190258`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"330", ",", "0.3698007698303739`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"360", ",", "0.4285500834638495`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390", ",", "0.5049503834102774`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420", ",", "0.5887288227716887`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"450", ",", "0.669609771801902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"480", ",", "0.7385644603266576`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"510", ",", "0.7887229459342278`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"540", ",", "0.8158873172563563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"570", ",", "0.8186522809062465`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"600", ",", "0.7981935944363677`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"630", ",", "0.7578084231536085`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"660", ",", "0.7023114665080371`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"690", ",", "0.6373769175031453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"720", ",", "0.5689098586336311`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"750", ",", "0.5025018542110655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"780", ",", "0.4430108332521713`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"810", ",", "0.3942781606263339`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"840", ",", "0.3589821586846032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"870", ",", "0.3386114003268219`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"900", ",", "0.3335368383489732`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"930", ",", "0.3431540477550281`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"960", ",", "0.366070144560801`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"990", ",", "0.4003109540836436`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1020", ",", "0.4435276898047145`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1050", ",", "0.49318909411161954`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1080", ",", "0.5467480889165498`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1110", ",", "0.6017767700429864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1140", ",", "0.656069590126936`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1170", ",", "0.7077126673395459`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1200", ",", "0.7551261333019401`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7691928043522415`*^9, 3.7693031226485643`*^9, 
  3.769371880480363*^9, 3.7694028849339*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1200"}], ",", "0.608438139368806`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1170"}], ",", "0.6805043370586097`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1140"}], ",", "0.7525452973904004`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1110"}], ",", "0.8200350881470717`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1080"}], ",", "0.8789617365503953`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1050"}], ",", "0.9267107041686637`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1020"}], ",", "0.9619305218580007`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "990"}], ",", "0.9846756587160161`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "960"}], ",", "0.9960791855473407`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "930"}], ",", "0.9980399373763162`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "900"}], ",", "0.9928558685325959`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "870"}], ",", "0.9829082895936851`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "840"}], ",", "0.9704388322932402`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "810"}], ",", "0.9573573665323605`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "780"}], ",", "0.945177667665948`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "750"}], ",", "0.9349995139284624`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "720"}], ",", "0.927525086414788`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "690"}], ",", "0.9231012934610631`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "660"}], ",", "0.9217749400699602`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "630"}], ",", "0.9233514538687194`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "600"}], ",", "0.9274511665836466`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.9335652135067344`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.9411163143150114`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.9495052135107227`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.9581518802591846`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.966548375153514`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.9742857350217663`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.9810682773572703`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.9867257718114129`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.9912043344879777`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.9945532627471734`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.9968968935195357`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.9984132290781602`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.9992985312465721`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.9997486147297145`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.9999299434523476`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9999761536400742`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9999695146224294`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9999452966431411`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.999894235966651`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9997739652226088`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9995233516133633`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9990783460923385`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9983888636709886`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9974343058796509`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.996233514083949`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.994857101935697`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.9934028844462267`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.9920049291740405`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.9908127807806012`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.9899548982886186`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.9895200335298691`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.9895334011939254`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.9899187420626372`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.9905115562020753`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.9910195378129132`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.9910493534651323`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.9901219745435507`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.9877021458480889`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.9832347862821124`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"600", ",", "0.976205085008673`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"630", ",", "0.9662011495386498`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"660", ",", "0.9529510348355276`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"690", ",", "0.9363931177979216`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"720", ",", "0.9167004822007885`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"750", ",", "0.8943099174861162`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"780", ",", "0.869911554384022`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"810", ",", "0.844423213350681`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"840", ",", "0.8189409619283451`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"870", ",", "0.7946684443753719`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"900", ",", "0.772841651462792`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"930", ",", "0.7546407185882862`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"960", ",", "0.7411342001068026`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"990", ",", "0.733195715768782`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1020", ",", "0.7314959276759114`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1050", ",", "0.7363769529625683`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1080", ",", "0.7478391847497132`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1110", ",", "0.7655234067276189`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1140", ",", "0.78842995600332`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1170", ",", "0.8152167874859862`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "0.8436111841828982`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasets", ",", " ", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], "\[Rule]", "%"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1200"}], ",", "0.5784780664605167`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1170"}], ",", "0.6285115068264739`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1140"}], ",", "0.6777914035444754`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1110"}], ",", "0.7245752339304588`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1080"}], ",", "0.7671236972714388`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1050"}], ",", "0.8038118557982107`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1020"}], ",", "0.8332023759360887`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "990"}], ",", "0.8541063476668308`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "960"}], ",", "0.8656071297751701`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "930"}], ",", "0.8671070897022375`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "900"}], ",", "0.8583765891021031`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "870"}], ",", "0.8395835395418729`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "840"}], ",", "0.8112975162287249`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "810"}], ",", "0.7744833894397081`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "780"}], ",", "0.7304780196791392`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "750"}], ",", "0.6809516719976832`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "720"}], ",", "0.6278491354086851`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "690"}], ",", "0.5733192001726156`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "660"}], ",", "0.519628911978766`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "630"}], ",", "0.46907278885115256`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "600"}], ",", "0.42387449849251474`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.3860889874203748`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.3575095291115594`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.33958195724788365`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.3333342408136073`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.33932190017888614`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.35759300953361506`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.38767643055455603`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.42859149659923346`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.47888317038872624`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.5366761433247476`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.5997510504698591`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.6656373814666312`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.731715390907697`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.7953295047358823`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.8539029250768546`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.905049981166815`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9466799882295338`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.977089383080422`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9950359046764495`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9997941850755849`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9911867452120756`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9695902337416294`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9359186871259124`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.8915795876291517`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.8384115119174751`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.7786054926517798`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.71459063188337`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.6489412128178009`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.5842599300684076`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.5230550534749768`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.46763768709530706`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.42002313712684514`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.3818457461422772`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.3542956019861006`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.33807503549944085`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.33337880411865906`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.33989633743216285`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.3568427999996829`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.38300019500113025`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"600", ",", "0.41678861669526884`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"630", ",", "0.4563472848578888`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"660", ",", "0.49961833847857207`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"690", ",", "0.5444519780493349`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"720", ",", "0.5886994893225244`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"750", ",", "0.6303085306372704`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"780", ",", "0.6674094706522871`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"810", ",", "0.698390613782181`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"840", ",", "0.7219585521065263`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"870", ",", "0.7371832737184634`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"900", ",", "0.7435241399624021`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"930", ",", "0.7408395907336669`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"960", ",", "0.7293757754877785`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"990", ",", "0.709747539978788`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1020", ",", "0.6828999192998572`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1050", ",", "0.6500583229264845`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1080", ",", "0.6126607511306679`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1110", ",", "0.572298540322236`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1140", ",", "0.5306585672531603`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1170", ",", "0.48946484444471594`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "0.45038829540270975`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasetsNoEcho", ",", " ", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], "\[Rule]", "%"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1200"}], ",", "0.6917839857215071`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1170"}], ",", "0.6391392631438251`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1140"}], ",", "0.584324087767115`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1110"}], ",", "0.5293754132793299`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1080"}], ",", "0.47660853716983154`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1050"}], ",", "0.42854007840276254`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1020"}], ",", "0.38777792711696624`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "990"}], ",", "0.3568810446756294`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "960"}], ",", "0.33818837114539885`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "930"}], ",", "0.33362515968578604`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "900"}], ",", "0.3444978632219249`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "870"}], ",", "0.3712898946787708`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "840"}], ",", "0.4134817924962696`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "810"}], ",", "0.46941656624074846`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "780"}], ",", "0.5362369864524441`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "750"}], ",", "0.6099204125254886`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "720"}], ",", "0.685431633888249`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "690"}], ",", "0.7570075650519446`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "660"}], ",", "0.8185763950778226`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "630"}], ",", "0.8642902307614586`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "600"}], ",", "0.8891432919543247`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.8896083457750112`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.8642283290082032`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.8140590584074108`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.7428871802177541`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.6571326236760512`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.5653932381339519`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.477625592260453`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.40402456456041924`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.3537278154037805`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.333535012232801`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.3468650623983006`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.39316212863627864`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.46789602306897404`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.5631767435259242`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.6688589709938522`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.7738872575655101`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.8676023885450486`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9407838658533771`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9863537818138323`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9997979143154734`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9794532735592159`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9267577554071127`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.8464118849324842`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.7463044300884887`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.6369724983480576`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.5304881312801191`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.43887208033246794`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.3723301064570378`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.33770807513630957`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.3375304121190258`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.3698007698303739`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.4285500834638495`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.5049503834102774`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.5887288227716887`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.669609771801902`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.7385644603266576`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.7887229459342278`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.8158873172563563`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.8186522809062465`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"600", ",", "0.7981935944363677`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"630", ",", "0.7578084231536085`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"660", ",", "0.7023114665080371`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"690", ",", "0.6373769175031453`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"720", ",", "0.5689098586336311`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"750", ",", "0.5025018542110655`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"780", ",", "0.4430108332521713`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"810", ",", "0.3942781606263339`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"840", ",", "0.3589821586846032`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"870", ",", "0.3386114003268219`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"900", ",", "0.3335368383489732`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"930", ",", "0.3431540477550281`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"960", ",", "0.366070144560801`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"990", ",", "0.4003109540836436`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1020", ",", "0.4435276898047145`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1050", ",", "0.49318909411161954`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1080", ",", "0.5467480889165498`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1110", ",", "0.6017767700429864`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1140", ",", "0.656069590126936`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1170", ",", "0.7077126673395459`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "0.7551261333019401`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasetsNaive", ",", " ", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "4"}], "\[Rule]", "%"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.768641852201786*^9, 3.768641861722294*^9}, {
  3.768641963069866*^9, 3.768641979019671*^9}, {3.7691862983376293`*^9, 
  3.7691862983716087`*^9}, {3.769348126576907*^9, 3.769348128752653*^9}, {
  3.7693481641082697`*^9, 3.769348193358405*^9}, {3.7694462786228857`*^9, 
  3.769446289491619*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xTarget", " ", "=", " ", 
    RowBox[{"\[Pi]", "/", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]s", " ", "=", " ", 
   RowBox[{"find\[Kappa]s", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]sNoEcho", " ", "=", " ", 
   RowBox[{"find\[Kappa]sNoEcho", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]sNaive", " ", "=", " ", 
    RowBox[{"find\[Kappa]sNaive", "[", "\[Phi]xTarget", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGate", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]s"}], 
         "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNoEcho", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNoEcho", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", 
          "\[Kappa]sNoEcho"}], "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNaive", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNaive", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]sNaive"}],
          "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.768393346603628*^9, 3.768393388375575*^9}, {
   3.768393459221733*^9, 3.7683936402294817`*^9}, {3.7683936751849213`*^9, 
   3.7683936847327414`*^9}, {3.76842035878948*^9, 3.7684204516529455`*^9}, {
   3.768425822268099*^9, 3.768425846421177*^9}, {3.768461954869193*^9, 
   3.7684619999771876`*^9}, 3.768478582279481*^9, 3.768478620191625*^9, {
   3.7691862983896036`*^9, 3.769186298410606*^9}, {3.7691863700582876`*^9, 
   3.7691863731565003`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}]}], "}"}]}], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}],
                 "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], ",", "1"}], "}"}]}], 
                    "}"}]}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
           TemplateBox[{"79"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               ")"}]}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 535, 29827638074986792450, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 535, 29827638074986792450, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 535, 29827638074986792450, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[535]]], "Output",
 CellChangeTimes->{3.769192808742711*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}]}], "}"}]}], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}],
                 "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    "}"}], ".", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], ",", "1"}], "}"}]}], 
                    "}"}]}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
           TemplateBox[{"79"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 536, 29827638074986792450, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 536, 29827638074986792450, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 536, 29827638074986792450, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[536]]], "Output",
 CellChangeTimes->{3.769192809127488*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}]}], "}"}]}], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}]}],
                 "+", 
                RowBox[{"0.25`", " ", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}],
                 "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ".", 
                   TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                   ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox["\[Pi]", "2"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox["\[Pi]", "2"], "]"}]}], "]"}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\[ImaginaryI]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], ",", "1"}], "}"}]}], 
                    "}"}]}], "]"}]}]}], ")"}]}]}], "}"}], ",", 
           TemplateBox[{"79"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 537, 29827638074986792450, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 537, 29827638074986792450, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 537, 29827638074986792450, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[537]]], "Output",
 CellChangeTimes->{3.7691928096102114`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "sweepMax"}], ",", "0.9945851438272016`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.9958896857619883`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.9961805929688978`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.9958089549344411`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.9950891407049518`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.9942809445023524`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.9935783460712073`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.9931147134420143`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.9929596418154448`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.9931331276019068`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.9936055866398098`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.9943208304546594`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.9951981368086391`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.9961506381827991`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.9970887027456198`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.9979350939595012`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9986398353923811`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9991582642739891`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9994794363629592`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9996128996229507`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9995888273992646`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9994427751634679`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9992242706364826`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9989726150112483`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9987194744437621`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.9984768114963579`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.9982273247125237`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.9979300886890733`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.9975094307923178`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.9968624650628929`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.9958709822827856`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.9944043762443702`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.992336286889578`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.9895510953538742`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.9859708431364398`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.9815603943433061`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.9763333296882535`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.970363240673247`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.9637819733557706`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.956777008627463`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sweepMax", ",", "0.9495864331884252`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasets", ",", " ", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "2"}], "\[Rule]", "%"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "sweepMax"}], ",", "0.37623604517413545`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.3983662568652854`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.4249295005629192`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.4556470337467521`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.4901320523179652`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.5278936708943659`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.5683459407341904`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.6108204995512045`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.6545801167250143`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.6988372135576012`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.7427706095611395`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.7855459468917713`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.8263371578190976`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.8643445116260569`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.8988167336037569`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.9290679777878866`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9544970372681771`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9746011410402785`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9889889668862663`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9973912233470538`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.999666691201156`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9958011298854221`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9859211897308119`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9702694823498099`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9492161915810349`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.9232382550255358`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.8929076931555353`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.858876651475386`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.8218581923139345`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.782604490360993`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.741890554329606`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.7004877096102732`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.6591457801479292`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.6185733391557868`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.579420566387233`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.5422638283845975`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.5075919359322065`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.47580048748469306`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.44718327750922005`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.4219311618822438`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sweepMax", ",", "0.4001349140680597`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasetsNoEcho", ",", " ", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "2"}], "\[Rule]", "%"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "sweepMax"}], ",", "0.5961365531261922`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.5638331487132869`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.5224086843644703`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.4755359533931736`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.42795771308769615`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.3850924314902928`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.3524805534694899`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.33511712364151536`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.3367636361511004`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.35935558076553825`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.4026322523590196`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.4640933978769779`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.5393224944134739`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.6226246785772447`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.7078405566719279`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.7891276037887917`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.8615271519208538`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9212021551233778`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9653651248997398`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9920340077294935`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9997691928871079`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9875741477810053`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9550643905821914`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9028695843315577`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.8331481361545694`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.7499712183738035`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.6593044727548714`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.568508528529821`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.48533880969401744`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.4167057309461398`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.3675436911354867`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.3400692649746303`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.33360756560183524`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.3449594413765629`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.36915621928139003`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.4003893303109108`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.4329102745147811`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.46175953401692993`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.48324740581115183`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.4951758576083438`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sweepMax", ",", "0.49683255102733026`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasetsNaive", ",", " ", 
    RowBox[{
     RowBox[{"\[Pi]", "/", "2"}], "\[Rule]", "%"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.768641340186449*^9, 3.7686413519906425`*^9}, {
  3.768641400067926*^9, 3.7686414058485928`*^9}, {3.7686416112092037`*^9, 
  3.7686416116129684`*^9}, {3.768641675178321*^9, 3.7686417962170606`*^9}, {
  3.769186298814355*^9, 3.7691862988393393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xTarget", " ", "=", " ", 
    RowBox[{"3", 
     RowBox[{"\[Pi]", "/", "4"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]s", " ", "=", " ", 
   RowBox[{"find\[Kappa]s", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]sNoEcho", " ", "=", " ", 
   RowBox[{"find\[Kappa]sNoEcho", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]sNaive", " ", "=", " ", 
    RowBox[{"find\[Kappa]sNaive", "[", "\[Phi]xTarget", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGate", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]s"}], 
         "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNoEcho", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNoEcho", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", 
          "\[Kappa]sNoEcho"}], "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNaive", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNaive", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]sNaive"}],
          "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", 
      "sweepStep"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.768393346603628*^9, 3.768393388375575*^9}, {
   3.768393459221733*^9, 3.7683936402294817`*^9}, {3.7683936751849213`*^9, 
   3.7683936847327414`*^9}, {3.76842035878948*^9, 3.7684204516529455`*^9}, {
   3.768425822268099*^9, 3.768425846421177*^9}, {3.768461954869193*^9, 
   3.7684619999771876`*^9}, 3.768478582279481*^9, 3.768478620191625*^9, {
   3.7686220377749124`*^9, 3.76862205198572*^9}, {3.769186298855334*^9, 
   3.7691862988763227`*^9}, {3.7691863786493387`*^9, 3.7691863827709537`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGate", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]s", "[", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}]}], "]"}], "]"}], 
                   ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "-", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}], 
                    ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "-", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}], 
                    ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    "}"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}],
                 "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}]}], ")"}]}]}], "}"}], ",", 
           TemplateBox[{"79"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 542, 29827638074986792450, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 542, 29827638074986792450, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 542, 29827638074986792450, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[542]]], "Output",
 CellChangeTimes->{3.769192816059493*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNoEcho", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNoEcho", "[", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}]}], "]"}], "]"}], 
                   ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "-", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}], 
                    ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "-", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}], 
                    ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    "}"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}],
                 "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}]}], ")"}]}]}], "}"}], ",", 
           TemplateBox[{"79"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 543, 29827638074986792450, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 543, 29827638074986792450, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 543, 29827638074986792450, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[543]]], "Output",
 CellChangeTimes->{3.769192818208254*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", 
             RowBox[{
              FractionBox["1", "6"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  RowBox[{
                   RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}]}], "]"}], ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2"}], "}"}]}], "}"}], ".", 
                   RowBox[{"ConjugateTranspose", "[", 
                    RowBox[{"RxGateNaive", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], ",", 
                    RowBox[{"-", "1200"}], ",", 
                    RowBox[{"find\[Kappa]sNaive", "[", 
                    FractionBox[
                    RowBox[{"3", " ", "\[Pi]"}], "4"], "]"}]}], "]"}], "]"}], 
                   ".", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "-", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}], 
                    ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "-", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}], 
                    ",", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"3", "/", "8"}]]}], "-", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], 
                    RowBox[{"5", "/", "8"}]]}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "\[ImaginaryI]"}], " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{"Cos", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], "+", 
                    RowBox[{"Sin", "[", 
                    FractionBox["\[Pi]", "8"], "]"}]}], ")"}]}]}], ")"}]}]}], 
                    "}"}]}], "}"}]}], "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}],
                 "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}], "+", 
                RowBox[{"0.25`", " ", 
                 RowBox[{"Tr", "[", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton",
                   DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                  "]"}]}]}], ")"}]}]}], "}"}], ",", 
           TemplateBox[{"79"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"1200", ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 544, 29827638074986792450, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 544, 29827638074986792450, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 544, 29827638074986792450, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[544]]], "Output",
 CellChangeTimes->{3.7691928198613005`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "sweepMax"}], ",", "0.9274029448226366`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.9329324064978284`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.9387892085781808`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.9448515414015671`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.9509907232527972`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.9570764693695673`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.9629866771000244`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.9686082033159407`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.9738478812810653`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.9786314256568605`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.9829059013578709`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.9866436564079335`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.9898360117008608`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.9924976378471555`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.9946541773369375`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.9963458859889698`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9976314095723009`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9985572632492021`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9991812642195139`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9995520176937341`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9997159404435526`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.999703637225646`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9995337816926977`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.999215118970801`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9987380241702463`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.9980829877252095`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.9972188566931752`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.9961089464246167`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.9947087032727162`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.9929770379010506`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.990877978172356`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.9883858352388046`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.9854897362060827`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.9821865639946845`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.9784995743276772`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.9744704042249728`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.9701529783712087`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.9656174722046311`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.9609470762284898`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.9562301525016578`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sweepMax", ",", "0.9515594577972941`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"fDatasets", ",", " ", 
     RowBox[{
      RowBox[{"3", 
       RowBox[{"\[Pi]", "/", "4"}]}], "\[Rule]", "%"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "sweepMax"}], ",", "0.715222883743079`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.7377846126868948`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.7601414464449757`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.7821717402183213`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.8037512333753192`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.8247548444457232`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.845060958879854`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.864547467945462`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.8830997037196312`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.9006037613930058`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.9169556087232054`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.932054737315225`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.9458107887598306`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.9581416951006211`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.9689746599182414`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.9782470266334755`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9859076073783497`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9919168448878782`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.9962482167839709`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9988850395642188`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9998269312317235`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9990842197379379`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.9966829409907657`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9926615602846028`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9870706032245937`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.9799743983516331`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.9714504154180779`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.9615846838386681`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.950473847538136`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.9382243384009441`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.9249485970291642`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.9107643400169572`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.8957935703787753`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.8801580480438798`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.8639811062298228`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.8473853893098999`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.8304871514273295`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.8134000824481007`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.7962319710992001`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.7790814705599921`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sweepMax", ",", "0.7620405056581153`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"fDatasetsNoEcho", ",", " ", 
     RowBox[{
      RowBox[{"3", 
       RowBox[{"\[Pi]", "/", "4"}]}], "\[Rule]", "%"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "sweepMax"}], ",", "0.3437875573103304`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "570"}], ",", "0.3365317342075137`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "540"}], ",", "0.33335264946200516`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "510"}], ",", "0.336237809833742`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "480"}], ",", "0.34706877393071833`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "450"}], ",", "0.3673798569493837`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "420"}], ",", "0.39810536022388715`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "390"}], ",", "0.4393544050324578`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "360"}], ",", "0.49026593821656506`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "330"}], ",", "0.5489924135664763`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "300"}], ",", "0.6128477380811955`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "270"}], ",", "0.6786146634350543`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "240"}], ",", "0.7429673711080286`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "210"}], ",", "0.802915562506328`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "180"}], ",", "0.8561621983279153`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "150"}], ",", "0.9012835076378881`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "120"}], ",", "0.9377027279764216`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "90"}], ",", "0.9654699296731042`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "60"}], ",", "0.984926498319123`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "30"}], ",", "0.9963634069948231`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.9997612578454588`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "0.9946644368390283`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"60", ",", "0.980230733395205`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"90", ",", "0.9554728341557587`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "0.9196366934994917`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"150", ",", "0.8726551561265975`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"180", ",", "0.8155240010928457`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"210", ",", "0.7505030624706897`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"240", ",", "0.6809713575577536`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"270", ",", "0.6109958455736242`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"300", ",", "0.5447013650136219`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"330", ",", "0.48561720785413975`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"360", ",", "0.4361831606529652`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"390", ",", "0.39752318604861436`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"420", ",", "0.3694935626522591`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"450", ",", "0.35094425106273675`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"480", ",", "0.34008882709425614`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"510", ",", "0.3348854800388287`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"540", ",", "0.33335652952615946`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"570", ",", "0.3338118474706576`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"sweepMax", ",", "0.3349702612075641`"}], "}"}]}], "}"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"fDatasetsNaive", ",", " ", 
    RowBox[{
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], "\[Rule]", "%"}]}], "]"}], ";"}]}], \
"Input",
 CellChangeTimes->{{3.7686420268920727`*^9, 3.7686420549868736`*^9}, {
  3.7691862994529867`*^9, 3.7691862994909644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]xTarget", " ", "=", " ", "\[Pi]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]s", " ", "=", " ", 
   RowBox[{"find\[Kappa]s", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Kappa]sNoEcho", " ", "=", " ", 
   RowBox[{"find\[Kappa]sNoEcho", "[", "\[Phi]xTarget", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]sNaive", " ", "=", " ", 
    RowBox[{"find\[Kappa]sNaive", "[", "\[Phi]xTarget", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityData", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGate", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]s"}], 
         "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", "30"}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNoEcho", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNoEcho", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", 
          "\[Kappa]sNoEcho"}], "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", "30"}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"fidelityDataNaive", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"fidelity2D", "[", 
       RowBox[{
        RowBox[{"RxGateNaive", "[", 
         RowBox[{
         "\[Phi]xTarget", ",", " ", "\[Delta]E", ",", " ", "\[Kappa]sNaive"}],
          "]"}], ",", " ", 
        RowBox[{"MatrixExp", "[", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "*", "\[Phi]xTarget", "*", 
          RowBox[{"\[Sigma]X", "/", "2"}]}], "]"}]}], "]"}]}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"\[Delta]E", ",", " ", 
      RowBox[{"-", "sweepMax"}], ",", " ", "sweepMax", ",", " ", "30"}], 
     "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.768676524487834*^9, 3.7686765270103803`*^9}, {
  3.7691862995119514`*^9, 3.7691862995389376`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.248632583143096`", ",", "3.1114349606913962`", ",", "6.283180500307007`",
    ",", "5.798979053657788`", ",", "0.9998118986146436`"}], "}"}]], "Print",
 CellChangeTimes->{3.768680551984765*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.09887492745954507`", ",", "3.1315151037967475`", ",", 
   "6.28307407112231`", ",", "6.150799682208349`", ",", 
   "0.9999388259203579`"}], "}"}]], "Print",
 CellChangeTimes->{3.7686806333928328`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.828577303107499`", ",", "3.1341242547952683`", ",", "6.283099108042395`",
    ",", "5.731741243006977`", ",", "0.9999938786791136`"}], "}"}]], "Print",
 CellChangeTimes->{3.768680698197471*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]Plot", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"fidelityComparisonPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fDatasetsNaive", "[", "\[Phi]Plot", "]"}], ",", " ", 
     RowBox[{"fDatasetsNoEcho", "[", "\[Phi]Plot", "]"}], ",", " ", 
     RowBox[{"fDatasets", "[", "\[Phi]Plot", "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Naive\>\"", ",", " ", "\"\<Sweep\>\"", ",", " ", 
     "\"\<Sweep & Echo\>\""}], "}"}], ",", " ", "1000"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Phi]Plot", " ", "=", " ", 
     RowBox[{"\[Pi]", "/", "2"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"fidelityComparisonPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"fDatasetsNaive", "[", "\[Phi]Plot", "]"}], ",", " ", 
          RowBox[{"fDatasetsNoEcho", "[", "\[Phi]Plot", "]"}], ",", " ", 
          RowBox[{"fDatasets", "[", "\[Phi]Plot", "]"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Naive\>\"", ",", " ", "\"\<Sweep\>\"", ",", " ", 
          "\"\<Sweep & Echo\>\""}], "}"}], ",", " ", "1000"}], "]"}], 
      "\[IndentingNewLine]", "\[Phi]Plot"}], " ", "=", " ", 
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"fidelityComparisonPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fDatasetsNaive", "[", "\[Phi]Plot", "]"}], ",", " ", 
        RowBox[{"fDatasetsNoEcho", "[", "\[Phi]Plot", "]"}], ",", " ", 
        RowBox[{"fDatasets", "[", "\[Phi]Plot", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Naive\>\"", ",", " ", "\"\<Sweep\>\"", ",", " ", 
        "\"\<Sweep & Echo\>\""}], "}"}], ",", " ", "1000"}], "]"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7683954067093325`*^9, 3.768395454133421*^9}, {
   3.7685572986772594`*^9, 3.7685573024940577`*^9}, {3.7685573518166227`*^9, 
   3.7685574507575808`*^9}, {3.7685582170947785`*^9, 
   3.7685582366934795`*^9}, {3.768558518423061*^9, 3.7685585189227705`*^9}, {
   3.7685649925142193`*^9, 3.7685649948858523`*^9}, {3.768642103659813*^9, 
   3.7686421992502346`*^9}, {3.768642242933053*^9, 3.7686422914740667`*^9}, {
   3.768642331562954*^9, 3.7686423526467986`*^9}, 3.769446359293377*^9}],

Cell[BoxData[
 GraphicsBox[{{{
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{0, 0}, {360, 216}]}, InsetBox[
      GraphicsBox[{GeometricTransformationBox[{{{}, {}, 
           {RGBColor[0., 0., 0.501999], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1: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
EDrGRknaM4pquSxSxwN8QeWj2/FFhzFUp7xVwt2+UHK29FLuIBU1pTJ1uPb7
gpK+uQpVlopb+v3NXCN84Ze61rFnfaOoVbDJMTvaF0w2cy1/FKGidiCV/PU/
X0iuUfxaencMdRWeBCqc8QXZkKlAJzkqbh2OPRh63hes8lpP8N8eRf1iu+MP
U31h0L9XP5Hpv8H+tYmzWb7QmbEqYcnU30i997L5NV/oBT3z3WxUNKbeup50
yxfSVLITxUyZ5/VB6L3WYl+IEM9R0b5IRdNDuo9FK3yBHvO+zcdxFM10F1/5
P/YFnfJBIvr7KJpPN7wrfOYLHmbbrKc7RhFqUrr/oi/s9l1mEbEZRcvj3kNa
Tb7wQ3mI644AFa1MZMdjWn3hcMJ4oqgoFW2Wfs/XdfrCXRU9FRbmvNu+quTk
7GP6aWg+L+xKRbv448Iu332BJHwnI2B2FB2sLGWyfvlC476DgppiVHTi4FP7
MuoLgfmuWl11o+jc1LlVfsoXyhXPlxT4j6LLheuwf84XhpVvxIv3j6KbU7BL
5YovnO18znaxeRQ9BDZTGBwU4Pq4s3LCbhRJ7TN7zPgpcGPfAodnIBU9019F
JgpT4BubEDtb3wiSPc+ffL+OAnT5GfNv+0bQR8zjvIgsBR57tcY9WxlB327J
LD9FCqRccdCXYupLuTpYcEudAuYt8af3UUbR37+09I82Bbre5L64OjSC26WP
1GwxpMDCauotKe5R3DGwrf6oGfP5Ro7RtJcjuPMWR/tLawoUVcrIJayjYmBQ
Wx+7EwXizhjIZ3iMYpBi7i8nDwporA/wnJccxT2/d05m+FAg5oPlSTUuKgaX
qCz3bqeAW8LasJ+vRzEkjMYjt4cCpGXj3Wu+jOI+zWdi+0IpcOzUn/RDy6O4
f/yM3INIJk85jb7WdBTDHjppzhylgEivxAbi4AgeOCxqZHqKAqm1L+i85FGU
O9vGkEigQGzrR5f8ohHszjr/ZPI8BaLrmi++dqdicpFldGsqBYRGvimKxo0g
PFnUvZdFgV1qe6mvWKjIePNk8kweBQQz1lf66Y1iWXfkw+03KXD3O2H/TnkU
A/+oRRrepcB7HrOGNYqjKDH3c7NIGQUKQ/MXZXeN4nueAir1IQX+/ihsgjOj
GL+eUtZcQwHu/Q/7g4RG0UBdJOz2Swps2mFJ7agbwVGTVtXYegpc/RtwpZPp
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
7qG+SIoLEqb13wziGVL9tV5U6MuFv0G9k3b8/99/tHTftgdgfR7KK2rMRaTo
YEKldBAXfvQKPOdbtBOdjB95hsFc2Pa2aKD4LENuf7S/tv8EF0KXn3AYUxSR
haq5CfFhXGjaqvV3iT5DLnjKhpaf4sJm5/iM12HoT65zhT1RuB8zx+w9iKfI
9lces+K4UDYv94QU9jthobYTJHDhYNSPfy2zRCRwb/QGzjku2At/Nm34iv70
0he9C+fx/TE/Uwfx3n3e2yytSsH3O9hIm4zRpEMxc9aPK1yQf3L7TCpbRHbv
kJgy/xriP2SCVu5GhtQnHfhtdZML7tmLtsg+x3zYWN19KJ0LJ/Oe5HahX388
c1lTahYXWANB3esxrxk5hFe/zOFC/9JjliXol++d+VA0lMeFgX3HDrZkiohm
7Yb0JYVcmLdEULPWGvlE+sZ5+2LcZ0J+oGcG5p9NYpFBpYjv9bU3XbZjnjnt
HphegXj4nqNhifuQflbp01CJ95oneU6mjiFh4iq7xp8gHpeYiK9NZ8iIxXEb
rRou9Cgmq69vQP04yazd8YILziuTrW+9YcjXR+s1T77Ge/JM7zqJ/OQ14YpS
7lsu/H6ofM9GAf3tR98PNxu4YGrzZsy0lSGSr+zupjThPQxKKL6LZEhb/tLA
+BYuRBV7PDNfhfd+fsQsoo0LluFWEIz6E3KsUeqoCPGm1rrk0x2aOHreeUd1
cmGvl9ZPxyiGLLUJSz3QzQWbzbG+qei3B3X2HNzbw4WpEa/7di1gyLNZq/Wc
erG/v4t709A/pfyTGrX+zoX18SatM04intu7qk1+cqG7c0ZUMk9ETKvL4lcP
4D6bfrXE4r3PvJO4W3OIC8Z2Elpj7Qz5kMBeqvKPCxEpGq90MU8UBWz4PnuU
C7OW/Sdj8BbxtHfeA6kJPPiXp/PXzRb3v+HXiYmTeDAqlOzt0xERbY2Xm4am
8CBXdqBUkMmQMdkbs79J8KBSuCQqzoshdQNHRJ1SPLigJfK4jXi9+d4xs1mW
BxY9Dn1PpouIf6XmodoZPDj41/Cfshfq8W2x9VWzeOj3ns7NrWKIUsx78dI5
PFj1trNEbLKIfKXuvc1V4sGSm0eetNyjycMdUSm3FvDg5IczW+INkB/Xe+y/
pIL13JdLWILf91xipJOwhAeM7qmOl4gHg2kz/0Qs48Gv6PyZE+7TRKLv86Oj
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
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {0, Rational[216, 5]}}, {0, 
           216}}, {{{1.2, 0}, {0, 43.2}}, {0, 216}}]], 
        GeometricTransformationBox[{{{}, {}, 
           {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1:eJwUV3c8lu8Xfu0tK0rIJit7j2PvzUtoq2+JJBINJIpICJFVoVCJEhrcdwhZ
SUIllXZkvcv2e35/vZ/zue9zrutc5zrP87wy+8K9DjCTSCRTXhLp/7+PyCu0
f/ffm++r+DW6fpYPM3LMOj0zGi2S+FVKbc/w4bXKvUekMjot2isn83ji+DC2
zl5MrX5j8UpxX23WaT7M/CiymTVjxKLoza57v2L5sLWs77n4iE8WscGwPBXO
h1sdCmXPVn+12Fbv+DSYON9PSk8yLvpuwUN51uZ4ig+zNp35ybj8y6L/P3PS
iRN8uCI8zOFx/F+Lm3N/rwSG8mE7pV3VxyP+WZjY3Il6eoAPR4UrsedrzVoc
erZhieTLh216tjZGV89ZDJ2N3c5F5sMiSpsO+cpRLKiaLUH17nz4e6LAZt0i
qsVeKr3opxkfrh/n7BbaSLfojIC2SwZ8ONmY6fTcZYbFzFhVcrEmHybnLaoO
sC9avLR2yHmvx4cV5+fGauKXLNJNUrG/JB+mu/69fHlh2cLJ+ld3sBgf7qia
MA+NWLWoBKlqHxY+fI3t44zT3zWLmCcDnbqbCbzawwM5WiQQOvb8dwONFxeN
/1BmnSbBmGxM7F0ePpzEu+9cZDUT/Guz3vCXzotDjcffTxxkhilu93baX17s
cyhA20uOBQpHa37c/MSLTfOGL734zAKSk+9aBrp5sXy71zfNIlY4zGoZw97G
i3nn+01u+LOBPGnYWyyXF1O3Ouds2MgOA3lqA9wlvHjMtXMq7g07pDw4uJmj
hxe/PG1tO32ZAwr9x2Uy8nhxTRUq3unECdviP6eVFvHivBETei87FwwxkgzP
R/LiOLYmN9M2Lnhm3i2dd4YXH9TRvXM3nhvUlDsKanR5sdve2nVxUx7wfB4t
QVfjxfpX1PwvLfCAlkprdRAXL5ZqrqxdrOcF96J2daoAL2aflOc6HMEHKfs1
dxtv5cXTm27uHVXnBzj25/B7Vl48Yif51P4vP9jo0zlFN/BiHFUg1Hh7AxQM
SvyOG+bBPm8u6V3VEoCRJ+OWLny82OF319fuKwLQtzPaaU8tDzZdZ89gnhYA
yQPOW0cRD9YUtTU2dhGEseiyXcfu8mB59fM/I6oFIfmQ9vr3Jzx4k82L7CpO
IUhifVCwfo0H8waum389KAS/rPZovMrhwaTjZpObXgpBnMJva+YTPJiacvqa
h5wwHCsOUfp4gAf/Ln1inXJOGFK2kLY3uvLgsQbGDPosDLIWeg8jzvPggT69
IoaZCGTNXKrKWuTG7d8jHbYXiUCMopYotwIPblquox5cEoGMTOhys+DB94Rm
b5T4b4Qtak9Do7by4BvbNFyHGzbCfefLj2vec+McCF3k2ygKxq21eWiAG6f4
VVfYRopCTer9G72iPPjM0d+eZ9+IQqLGDUbjR258LFlxrX67GGx+zcls9pob
HygKrp66LAYJaa9SOO5wY7ylTEmQKgZlNlTx4g5uLF74tVwvYBOQGmYjd8Zx
4yhxadkAvAm2ldQU3Qvmxv0Fu0rjFDfDx9yB7drJ3Fh5c7FEWfpm2IjphYvE
/cT8jwWd85tBTGfJqc+VG4+JiYtN+YvDt15v+iUNbqx/zT9HAInD8imdJjkq
F84UvSaop7AFsl2/P+5n4sZ/c99l7EjbAr+qxO+I2XJjm40ivHFzW0Dlgr2Y
FjM3Ls3xSr3lJwE9/2o7tvNw4yXhLPbOZglw1DS6MzrPhX2uvj4/KScJWzRe
jWfSuHCNED+TwCVJ6MtseHrsPBfmzHaJ052VBHlr965OLy68TzBt2Z8sBcJH
zSuinnLh55mvYs4+lwKD7kKJvCIuLCrASb8puxX2kBZ7vI5w4YgrdpEdKVuh
PWVzR+4ZLtzLnzz7d3orlF9n2d7py4WFO782XFSRhs6H5OkZGS6M2c/RCnZK
w7n9O76NXOTCYXbSuvcypeHvqR3c28y5sPgFdLylTRoMBnb8VVblwl0vd9UN
0KVB64m93Xk6Jz7BtjYzsU0GNusYKf8nyYVlbYs1aEEycAlXxtyY4cSvk0zD
ODJlgMX05H/JxPmZ9o93N7fJwOvPP1xFXnHibayn/6rSZeC4gOShgG5OPGwt
vs18myw8tZW+UtXMic+ff/KfR5As/K24dVbwNCfWbPO/ve+KLIx1ZkptKeXE
n5gXvke1ysL2qB75hSROfMnqmtxFmizwM7sHy5/gxAaJ+vsKlOXA08lsqieF
E39/8e7G3UA5oPVtL4tz5MTZTCc+N2fIgVq8J993eU5sYSkiNfBCDpy35jA/
t+LEUwmPgiaocvDOPf3uETlOfB17FVKV5KFrTUVYSYET25Pm37MHysP8TMSi
uyYnplpkbdqcIQ+VlRZL6S858M14TT/VF/LwcnxXD9skB3ZDr3PNqER+8geh
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
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {0, Rational[216, 5]}}, {0, 
           216}}, {{{1.2, 0}, {0, 43.2}}, {0, 216}}]], 
        GeometricTransformationBox[{{{}, {}, 
           {RGBColor[0.690207, 0.188192, 0.376507], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUV3k41V0XlXBH86zILEPGFJm2eZ4v9+KSSiq9qEgUMlMkGULGJIlSJKTk
kNKAkEQZSipJijJE9J3vr/uc55zf3muvtfY+50rtDXbZz8rCwnKcwsLy/987
7n8Xvt8cNiS2tGytUOJES9kGnc7pjUYKZ47VNuP1euWewxLpnUaXH4s7jeI1
Ms38c6aqzyhL4u6Nu3jNeiekhS39jZG48bT4miInMpV2iz19dNQo5E5Fp50y
J2q3KpCOqvpgpPvbifUpPr+PJS1hV+GkkY2a6NswvGZrivy8dO6L0XQ5f6kE
Xl8NDrS6e3rayHhUgSUAry0UfKqOHf1uZL8x3TwOr0ODFTjyNH4aTS6TpOVw
PrMXWxrDquaMxDXWLhbjtYCCyEE3mV9GQe/A8ATOPxnHI7q98LdR8x6/6P/j
rx8jPucTXDQyYjV3uYLXibs2nJo7t2Qk/DdqX8w2TuR+8Y9yL8cfo3ur55dV
cTz5+bmRmtMrRlJ/vvKsKXCiRfvpc+eWV4287Q5FicpzoifXJwz/O7pmREmz
j7yH4+Wyv/thM71u1LhR1esM3q+/fag3W4MFrgomLj3D+4Vjn7ayzbKAoeJr
+Z94nUDdGxtStQHWl6dsH+H4/+0aG57wZ4XyrMCWCbymHfTUdJHZCCF21+Pc
MR79i4Nn28Y3wlt7NglfvC/b4fJRvZANIkfZ3r3byomo8z16pQx2mOba1juK
z//eYpvNLcgBg55bK07j/RH7zpnoPg4I6JI0lsT7j0+Zms+eI8C2t6EbWjBf
Nddbi7xtiJB15f5ELo5/8Y3eYhcHCTrmaM5U/H00e5OD/iMSLPgIiUfgtb/W
9mvVp8lw88IX3w5ZTuSw5/Y/MX0KxHmNzbLh9Y7zKoyzyxQYvJF/Vwznk2ip
vP2nngp02UzLOswPxzdZ0qGjnBA4t51LTI4TzYpc3jO0jQueX2xPuor331iI
N1tOc4GYuYJmJ8aDQvP5Giu44frsdrdxHI/Wd1Y7S4MHrOzbdlDwvtXU0w/P
z/PA4z6vY41SmK9/HOmsszxwnsJlOIbxqAuZ79plxwsawhevPcDxZbfFfz5a
xQuCAsaEnVgPEbO2zOtEPog/PLHjogTm0+uf4Qd/PvDkp70i4PMsxwy+iTzm
AwMFx/I/MpjflFO5TjL8YPL8AY88xjNVcs80JZYf/I9pbirD+UYaln60jvMD
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
TrBTqYN5XpGMFlP4Iq5vc4LekB/sQeZkZPqmX7BAywk4lHZeAuyfDLmsujRd
J5BuLy+y4sX3ZYirY7SRE0ha++aMOmG92vlngs2dILxEXDG0i4SO8wyk7LF1
AvYtkzUK8yTU7pMt5+rsBJPj2s/hJQlx3aS1m9GdQEf7Pwo7D9ZzVWD3Dm8n
8El26zYRJKNr1q9XFfbhdZ3EzSX8/e/cnDzRQ05wPP9VlLMSGcFnN21KsBO0
Rn0VicLzIm27UP/fUCf4MHcgSn0j7t+4waDZk06Q73uLXuSH9e+7SHkf4wQ9
7LxjtZMkdGwLvbIvCdcj9+voAyL2Q6Cw+aM0J1BXEGPq/CEh6oM3H+oznSDm
4u/EGcwXg5wXXZGH98/xeHUxyegqg7Epr9gJDE9G8A1rYb9UiDSdKXeCJ75T
sZ04nuHCEO1UFa732YWGLmHsH9P8uf9uO8G73CP+VyzJaOiCR7pPgxPsVWf9
dK6GhGTfiyo7PXCCk9dy4mRnSOio6ttO43bMJ/Nx+Snsl4eRl/y0njrBVvHN
bzKGSIj8wnODXI8TvNfi4f9/fOerQreWXzkBH6XqiwSVjPJO9zO7hp2gYLKK
psSF7y+PdHLpuBPIG0ocuvaIhOS22zSFfHKCqfhy7+IVEvqPi8Pf8psTXEu6
rTuvS0Z1U238m+Ywnmed1w7j7/+0R7XNLjrB9Vs6v3xwfijSDW7/6wRv7d1V
Li+RUNKJhc0XWZ0B2Ac7ZnC/dDvXPj9EdIZXKf+NVDWTkIBKYLgBlzMEVZby
j2P+PTkU5XkFnIHJFmzuhf1y+f3kq0lRZxDJuWiTQsb3d3NpbNMWZ7jydYdB
KD6vmsNUS5Nzhsw7pKDv37G/gkVGdys7w+aaOK/6ZRJ6YD1wVkvDGZqWkt8J
3yIhVtkMHcJOZ2CLty7kfE5C1uu2n9/qO0NbfMDJQT7s5yFCdo2JM5Tvv3CO
jv00WPfIOM7KGZ5L9JdE3CYh8XOnf7g5OIPjv2DlOw0k5HdAr0iR5gwqXY3m
lmMkVGW8ZLPm4QzNTQ6Ob8tIaG7TneXe3c5wIMjE4xDe11kMqijf7ww2Gz9Y
1P4ioeheJVr4YRw/udsgtoeEHld93mB31Bl+fFfeKf0e+y2x7NaWE84geOsR
YUcpCbns9vH+FekMuYKqJs1tJJSvK0bpjHMGRnP+Vd1ZEnrPP9h0KcUZXv/c
PDW8RkLysxf8g9Kd4dm6t2sD5ifwqb2ASTbmt79/k9JrEqovI7ULXnKGgyv8
BwT18f0Q+Tj4a4kzSI+dKlvB3xvTY8VbrjrDSLdvvOtnEkrRMHiRUe0MHswN
ovEVJNRD+RPuV+sMl278ubslj4QEP9fL6zRifvm9vm7B/cJERwYoLc6gJ9Wn
0EQho7JLKnHj7c4QzxLJzzZOQl9Dp9TuPHWGa9563F65JKTuWD6a1OMM+c1t
WovS+D5W9E31HHCG2617D2reIKGWjZt1Vd86w559IzIv8fdsY28+b3iPzx+/
OcWN9bFpysp+/ckZrgfr5l2/T0IXMh1Nrn9zhunTfovqtSQ09B/lZ+ScM6Rr
S+59iP0kYdlZ5LTkDF5X66YX8P5+qXhb2TXMT0KG1NhFErqxavhnidUFlM3w
H546Epp/vVLxgugCi3EXvxVeJSHd2w20Ei4X+FO8NfUG9lPM2WOsIQIu8Ob0
3p2xB0noiZ/qbQsxF/A4PUjix/ON02jaW0zSBcpMZAvHG0mIJlpBmZVzAU3u
1vrKDBK69GvPvTZlF6AnLtfdKiGhD93iB3I0XEBcrjtSs4+EtlYOCxza6QKl
kzHnqJUkFBSX065v4AIHm4+6Hsf+uMt0PsJj6gJgNO7If5yE4gzEv+21doEQ
sX1piRMk5CTxdf9dRxfYJGNkWMiG31f/6t8T3F3Ae7DbXIZOQtPjMV6eTBcI
040kyeN50IjsBm/sdYG+RjaNDddIKOGyiPO/gy4goLo1czKEhJzjJl84B7uA
z7udN1dOkJDEvtsW5cdd4OzJ5yd0GCT0zTSybfGUC5SQJU05OPD/HVkrfes4
F9hlk3vfHfOZyC7QWJDiAlTmqgQxEfv787jGbLoLNId0jnPiftjSWX0Dclwg
nPW9zX3sj5lrJxSyClxgJl1kYgfm716Kadmnyy7QREx8IemL580hbnGdShdg
SCgdHY4hIVebd7lna1yAW458/DmThCSVr/GN1rtAjsnfLA/s3++UkHNq911A
2+fp3P0zJNQ8Y0iMa3OBogm3FX/cH8nd5PiBThfYbpkc/jIQ61UzuCbfg/FX
kcaZl0hI6nxZeMSAC9ysTgvqxPuzwUG/Xrx1AfPWnt2lxSR032lXkMQHzL/A
qssvy//3D8fXI19coKC6+NKBAhJy4+vf9+i7Czgu+rWRXUlI+lfRmOBvFxjl
US4qjyKhH68OeRxccYH2jLJ4uSA8z+q1B5pZXKFo89l+o2kSOpuzwZGT4AqF
Uox002MkRA/rfrab0xU+f+V7wPMfvj/o+WZ1/K5Q8Tru8oFw7N+d+1vZxFyh
m8I+boP7tVVEYxdd0hXUfhXecsHrtD9/66/Lu0KB683LGvEk5PH2qdpfFVc4
sODj20TG8+R+dpWDliuUsvTHZKWQ0K8CX7nLuq7w9821uUXcLyhSpfSXkSvQ
G27XsXqQ0DnvZTELC1fg3TbhU4LnpadhR06enStUXi058sGFhBS2ZPB8c3GF
/vzTYnyi+D7/55Vq4OEKXZcWax/7kFDbewWOjN2u0HC35ndTNQmlt/2Kmdjv
ClPDXn+JWF+vstbV7f+5wlDqyPB3zO/W+NSw5GOu8NpoqCRInoQW9tHnhsNd
Yf/RrQJl2fi9YSbzn8ppV6j2ShthtSOh83I/PkcnukKOV/7MZTw/mBz39/Sl
usLugx9qI6JJSPFL0ohMpis0pT14nI31WOx0oYfl4e+lj/EeEyOhR5US/U+L
XYFW0bbrEj6fcWbabtNVVzgbzO4tbUZC3gENnYHVrnBX5WeslQp+r9nGmaBa
rNee8vZjR0hoSdmhha/JFXwk9vy4jvF0UMV09j90hS0pZYPRs0R04funusYO
V3h66d3BQBzPp6d2G/mFKyzFeK3+opGQyq2oSmafK3QWLyYdnyeiP+etZW69
cQXWU7DvpSAJnWzlcM4ZdYVHwZ/EQrH/V2YfRZ/66Ape7Js3KuDvT0nE3tjz
1RVCBb7UHmEhob/2hm8tf7jCpwcv82ywflFRqwTVBVf4KpPpxPuFiNZvNGkL
rLrCqG6taIkiCZ0eOb5vhYUGXqZ66QGfiYiFqnXhPQcNXs7GNRyRI6FYvZ8P
n1BpwD5/hG0Sz0PWwzdnbvDRoIOjoLhujYjiLwWIZYnQQPTKxb2zHHieP1ew
ipCggfVIwVL2IhEl/pk8vluWBg3PTHWIbiTEoVh2xVyJBhlqkZ+5RXB/Mnb3
KavTIGGs7a7IOhERUzb/491Bg0aRlFFRVRI60zissqxHg/tjy/NNuL/IXy56
jhnToH/oTuQTHhJKFaKldFjS4PCSCb//HBFRLXgbquxp0Fsb0/LWEPv3eM/H
DFca+FZrzmSb4/fp1VTeEx40cA//8+yGEfbPgJWR924adH0/CI82kBAPG0eg
6X4aCGRWqXDheBe0Hl1SPEyDWle/vYa2JMS3L+Yp91Ea7FG8InVbgYSyMg0W
F8JoMJhXpj6NvxdoX5EZiaSBpLPakh6FhHLmGp3b42jglsR1+lovEQlJHT9d
mUIDB7U+F+tHRJTrpHkzPR3z+WVtL/9mEhKJ+fE2NJsGgRGnSF9Z8fvg1g2i
1yUadGoH7SrD/SU2fmiHcSkN/rusWSOI/VXApeCnUEGDrCrD3OVPRLTZcPIC
5w2cT4Z84A7mpyjwcuuvWlz/rs7Q8/1EJFHk8324kQbyY6Fm+T+JqKRr0ybU
QoOLNcfvmbDh+fp3yKriEQ12nx2/Q8T5LytfDEt7RgOW4ZxGYZxf2su1/NhL
GhCesuxqdiChK2d5+hmvaYCqHXtpY0Qk29z9z/Adjuc3z5rynYiufj27Te4D
DYZp3I4k3G/yolZelC80qGxKYuvB+l6zYj8zN0ODmxU3S+j3iWhreHvDm3ka
XKCFbPXqI6Lr105PtizTgPtBaIvdbSJSeqPPV75Og52ba9W9KoiommPF6Cyb
GwirP6s99P9+2tEYeITsBsGsbCcUMB8394cWuPO4AXcz4x7C+FRzNJ7pC7lB
Z/DviWrcr7c6ZhelN7uBssZebsvzRKT+u1qWJO0GLZfd9fJyiKhW5pDLDwU3
aGhm2fYC+0HTVT7m9Ta8b7MSZoiI6E7cx5v3tdzgHqODR32ZiLbXlb67rOsG
O2Rvq76Twff5B29SipEbvHTKni4UIKEdvJt2Bpm7AbXySkv5DSJqhCE/mq0b
eOxO0vhGxe/LIzmZu5zdIJHl0Plc7A+o2HuuhO4G7zsLbjBvEpHliFoKm48b
SNYzufcWEZED31rcIT83cLp1zEzuORG5Wz2P6gnAa9Gh6t06eH5F54ZrHXWD
lKhf4owGIvKr9wvJO+EG5Rvzf2nw4/8H0xpBa1Fu4HYx7dvsDBGFSP47uDfB
DcZa7+4NwvyfdO/a13nWDdojj6x7CuH3SFq+j8oFN+gOanwdV0xEZ9r9PS7k
uoH6NS27hNdElLGsRVsscoP77hEu6CUR5alucPQqdwPvuxLXvzZiv/n1WKMq
N5gbSBhjw3grLhWYydW6QRtvRwf5LxHV9B40OtvoBrwREY1MjKeBY8euHy1u
wFzgMhlqJ6IW/Y3atA43kOdf48y/TkQdx3rV7j13A5EHBOnCeiLqqixSkuhz
g0dqs1pspUT0aixALv6NG3B6C/UeHiGitwI6klOjbrCwqNuogtcTNuyb7Cfd
4Llj63e1eCL6GtMvWDftBn1l/14KdRPRz4YSHuE5N5j3nRJVxuvlmf8okUtu
UBZVzNZYTUT/pHdxfFhzg7jzd8Zf3iEiDg/CBgs2d4jR+brXHvPHdX5gtYrs
Dg/elr76EEZEgo8vL3LzusNuvuv7HXD9m1eD5kKF3WG+M+BoCa5HVkN/Zljc
HdYWrlivYn5VDpC+GMq6g2hWce3qIBFpFQ1+uKLkDprTAps4eoho16srI0QN
d2iLafI5hP1mQjr6JnCnO9gaPfINKiEiayPD/n4DjEfiReA77B+n45TunWbu
wJ+W7UdgEBGjeqiz0MYdTBNvBS81E9HuD1fbNzi7w3n7lR8HuojIXzikxZ/u
Dh7c+yP1rxBRkD00vfB2h/smAzknC4joeDznHXU/d/gzmbKmhPsx8t7bmzkB
7iDcr3nkCz6f8ONa5coRd/hcFpNJvEVEqXLHr+w+4Q4OnO7GRZ5ElOllUtwR
5Q5LxC+yGy8R0aUL3PmKCe5QmPGn/ATW83LnSFb6WXeIR7L+wq1EVLl2Pf1X
hjukVtyPf7KfiG5rnTjDyHUHx8OvJNRicT8dMktoKXIHjUTdnYRsInpYwnta
utwdKgOjpBvPENGT12MRyVU4n0C0+/1RIuqm3Aidue0Omf4oPAnPnwHjiGDn
Rne4ebOSZltDRCMnLAIaWnC9CU3+krjejzf592/qwHrRP3qG4ft0+uP73THP
cb6ZYYZ5GhHNi9Z4furF8af8VF3O4fvc8ZSbzRt3kF97lhiWiu/XJCunW6Pu
MJSs9EoiCd93DwRtBSbdQexP6glPjI97fsI8Ytodln3+bv+O5w1PfbUz+ukO
XW/YnvNFEhFfWKg3YQnzfa5T9ZsaEfHrGBxyWHMH1w+Bh207iUhghf14zkY6
aGxxuTh7EN83D3piRkh0EOVxFU8/TETC0blpMjx0+GFxussC+00EfPMChOhQ
/m17wBG8L8aqWF67mQ67sszNbgRif3bM3VqWpkMQkvdLNyAi8aTm+0aKdFgK
F62rwPNJwiq+M0mNDs+KXdRvThORJNnuVbc2He75XSk1iSMi6S6BcQF9OoQR
9mezixKRTProtJcJHfI+93rmYT1lnSoWy6zosF4WrSTjT0TyfMGs0w50CFai
MlACvg8GdnJpuNEh4eTCd7ajRKR4kUUs3IsOcw7+jeKu+D5gPJNr3UOHl7kz
Sal+uF/EMjU4DtLBzfF4aQKuX3XE08A+iA62W4pmWnF8tWIZ6+xQOsQH8wzk
YT7VfWdo707SAXX8dvCm4fkufddXOpYObGeMjrTh+bx9Muq/Q8l0IN52rfwP
3w/aFRbht8/R4UPq2eUeTSLacZA7YSmLDu8ixi692UNEOkpD5w0v0eFs4nG1
c1hf3ZnSgsRSOuR+6VqjnsX9WnPoWlcFHVar2udjsV/0j2je4b9Jh3mnKxod
4URkoLn60PMOHa5FT2808iEiw9+Pnl++R4cOyztvrazxfdCQNjjVSofw5i/N
bFh/43C3CbUndOi7xmnBa0FEJrskZsO66KCT9JylV5+IzP5+/tPSTwfVb+M/
UvDa/OEtdvZhOvw9fK5FGc87i5hwXrtxOhxrdd6muoWIrEyMxbM+0SHqTNkr
FgUismEjK779RofoiLdxK3Qisn3Sv11qng6fO1MkN+D+tkspgIPLdNhrKftt
VgrfRzZ+drfW6bAvpY7LnYLnDXUbY5GNAdpfj6avYL6cexb2GVAYcCyhS/Xq
ZiJyyXgYnMDLAOO1m2Gm7kREc0k+9UKYAWzqJv7VGvg+E3BK5pNggOnPk2h4
koDogyJZHrIMeH8eHrXhfmHkfSguVWLA17+JsHKSiDw9q6q+qDPgHF2ugqhC
RMzNIQ2qOxlw05/9h443EXmP6bUfN2DAySjdxwN6RORTytbzwJQBPUGz2zKx
fr57u4c32jCAOlO2s0GRiPbKXvxk48QAYjbrXq4LRLTvs8/cBXcGvODY/5qO
/eJXqbA2xGSA78vC6QEePC8DfhIl9zEgQRt5cxsT0QGVewIHDjEgv36Ff/d2
Ijo4GytZE8yATb+lu28NE1DAbRuVheMMqAlZTjD+R0CHj/Hr6Ecy4Egk+cdx
dtxP8d2LQnEMiF0Rv3TSnogGs5LvziUz4ImAn0c35iu13Di06xwD2ltdM3Jw
fLi7qnktiwGBPFxSgVpEtPj47lxsPgPSf20r0HxKQNWDwbeZJQxw/c7y4ZAY
rveLYvDOqwwIFavfckUYz4vlj9v4qhlQldJxzYCPiF4Qi2dmbjPgb3Xc3z9C
RBQjyqjubGDA9jvs/DfUsf+V+ALKHjBglKa9mIn5/Lara2tUOwPqYjj7HHB/
ltomfaE/ZUDXtHIYfywBuTOhQrOHAaWlbLWB24iIErjixznAgBtPy62inIkI
RdXLTA0zIPWqTmw75j8sPWiifZwBYtu9aNP4vHLJ1stFnxggVX31tzAnEb2/
NbE7/BuuZ7bq4Qvs/4uoUMJ1DvMVrsKlM05Atn3uo9uWGHCwlC1sFcdjmeAp
JK4xYNXRwWVxgYAa5p97fmT1AKqM4Wo97rfDGxNFHxI9YN3j0qlNuzD/AkZD
eVwecHOPi/IzPB8HZf9cDBHwgOlZ739Fuph/7TtuDmIeECny7DufBObfIlBA
UdIDhshxvfJY30V3hVcb5T3AqySN/dYA5v/Ahwtjyjh+kfIl7pcE5Bte4HRP
wwMUWc2n0P/5P+PGnb0T4zG/+zAc909XPndPkIEH0Ad3nzXB+WOrnqVZm3pA
TGJ+1eXfBLTjfrytrLUHnHt09s3nnwQ088KA/M/BA84nrzc7NxHQ5ZGlp8M0
D2A4LLFf/IP5/16bXO/pAa/fJA+0fCUg6vphi/O+HvAm+fEWrjUCauOSZw/w
x/sumXzlLJj/Le8fmf3nARvc7ys0tRKQivqluC3HPOBf//fkJTxPPgDNeOWE
B9g233W9jfm86MzF8jrKA/67LlsWN0VAdnufPrwV7wFLtZEHrmN8G0Lios6e
8QA7v/eMqWeY/3h9/f3nPWDT84a1ayQi+i97ccUoxwPe/2dZrUDF98fV2/fE
CnC9gZPV30sI6M3dgPCFUg+QU2l8172RiNKeyO7srfCAD74CchdGCMjkzdhC
1Q0PuJOxbeRxOwEtfcmrT6zzgH0bHYpc2YjoxrJLiG+TByyU5KR+wPNqL4lT
U++hBxDUZ38JdhOQsFjnT8EODziz78yQ4wbMv1LsrZ/PPCBcy3pNp5eA4vT0
gl689AClj6NTGbZEtNNuQaXitQeo6aqfNviE+Wfe+hbzzgPGKnnT+vMIqCzw
UJXXBw8Q4bhx+ctHPL+iZQ7t+OIB2nn659qLMP/nRxV4v3vAUUf7jqmLBNRe
kvv527wHfN7B8ezqZwJab9hzzPyPB3AtvG3aw4Hvjx7l9eJ/HlB9ODM9WwTr
82nhzDK7J/x3LPUAEfdr7d9WQReqJ0RRb02RKzAe/rOXq/k88f/3sEQD3I9b
lWnb2EU94dyqfljRIwLyM5G457PFE2QrKH7r1wmo1GPKrEnOE1iNDA0FMf6R
I3W9vCqeMCr95s0lzL9ISiTzsKYnEBr959E1AqKVWEx16HhC2+WhB3v/EtD5
Bp5QCSNPoCg+Vi96TEDPu9/+O2HuCd7bxR/FYD9zfCpP7bPFeG0ePziI+TD5
GySs7OIJBePJYZHnCCiaX/dKAsMTDu1izj7DfDQrbVQb8/HE76+dFNl7uJ+M
u5t37veE8KC18+7zBKTpkWtx4bAn+L/4evNuKQEFHtnTP33UEyI+8RxBNQRU
mazsYxbuCQFTlwm+uN7J4oWvRdEYz6lJyZAOApJsaD2+lOAJQg7HS0nYv8zu
MxucUz0hu0CYU/AdAeVNup6ruoDjJ6s7DDkS0MCquChbnid4hg4tbX9OQDz8
U+XexZ5w9e81pyjMn61SnXpjOcbX9fF00wUCSjKOfMBT7QnbT8XdXc3C+jIs
rAJqPSHZ9BerKq53Hb9DHjV6wv7hadKRFwS0K/ntbvGHnvBC55pWQDgBhRWX
fwvr8IRf52IUduJ5UXc36ETvc09I1HulIY31me3S2ajU5wlSxnMGygcJSHGS
9Xz8G08oCfx5wlMZ67vaJTY66gm11ieI3MVYX77cih2Tnvh9fP2QNZ4HI4p7
NDOmPUHy24mPr5KxvsbKD7/+xHiZubR/OB6NsWBtuuQJmQ8/heY+IaCM4NbX
hWueUE8R7CInEVBX0pk9ixu9IObVaFpfNAERil2/O5K9IJHvpez1FKzvXfGI
6zxewGJ7T/Yljh/d9YVto7AXjPyLKu7G86D5Y20GU9wLIjxEvWawfosrpzY3
yHhBamDtXRrmR5PPopJbyQse1Pwk7I4goCBFnu2H1L2gTcko9hTu7yp429q+
wwuu2eVoLGG8n+jltpsNvODrIUVLg1tY3+CgN8dNvWBcmyOfEIX1TdLZ99La
C/JVhJOsy7C+Raw/tjp5Qc4v2rOsNKxvfdfJOHcvkK57urcd5+PpusgxwvQC
FwcNo+77WN+Pvpna+7yg+OZC27FtWN8VJYnzhzD+WdYUXXesL+/C9algL3gz
a/jl4UOs79ZWbZMwL4jWdrXLOoD1hTNtBZFeYN9K2lenjfWlu9ovxHlBCdtW
xb4zBFQbJD7scMYL7BY5ywiJWK+BIWH9817gZ6gUYpmP+d+V7a6Y4wWjpyND
P9IJKKbUMUeowAvcn3xVKbUnoCMclIGNl73gkcb1vnWsj+9/T/jmKrzA87pT
aynm17E/1nnshhc47lqs+YD9aahjkPGizgtabp/PbMb7qsXLPU1NXqDVsaK/
rEFAEmz1nBUPvaB01lDjayMBcQUE22V1eAFTRicwGc+X9ZdKqTHPvYC2MJ6t
jeN91/78LLDXCyQehqdKYb1HCi4TvQa9wIPiqbAeiv2ywdvSasQL+v7x/E4N
JqAHB0SStCe8oO6hbvJOXO+N7lcd0lNe8KLT33IG81modX4jz6wXKA/+/fsg
noBS821M1n55gYnpAR/uUwR08h977PQfL+BPfGb+JwS/p/a3tb755wX0kUfc
h7QIyPNF5HoHOxPcdnXJyO8gIBsNHYM6ChOKVp9cZNXFeuT+OlXCy4RnhLYb
nQ64f9ZqmtOEmZCYVHDtG/aLyL6APxHiTDgavM4hZEZAxGdyOgdkmOAj9MNs
K9ZvWfVDGE2RCVeFDg3lqxLQVHbhXWM1JlzT/H0qbgMBDa3Qf6tqM2H2YNLf
YB0C6vTl19qsx4RNunNqkrL4/nvSc5RkzASr87s+Nn/kQBUqZ28vWjDhRv1c
Ap8Mvk8zzX98tGOCCYuO9tGtBJS4zKLa58IEiY/icgxvAgr1efDfQwbGY5k2
1F+I+73jRHW1DxPqT48ozdJw/yppTef5MeHcxjubmdhfZhmzW5MCmLC3Ju/Q
dVzP9sXrB0KO4PM1+b/KDQlIhrm/wjeMCRMXNvT6KBIQX7vkJ/tIJuz+9yBh
mzABsW4dkdGLY8It1dFmK5x//lzu3q0pTLA/O7KgbUVAE79cLgumM+EDilfe
BATU78H1njWbCe/XuTXu8+D3ResziZ/5TOD86ji5jP10Wy7Re7QE88tNXvov
E/s9FQqfX2XCx/R/365gv2TMrb5trGbCsNVkZAAf9ju9UfRqLRMadENSv+Ri
v7ccY2Q2MkFEO3CB8IsD7ZZRzT3dwoQtn5aOH6MQkMOZr6//e8QEMxm+NoP9
2O8/ygU8nzHhMLWmWQDjV3XzdbV8yYRkvVO0Htw/Evc3ZW5/zQS6Un/TDir2
u9SbXql3TPDlO6voYUNAa0mZ3NwfmLAUP+cA2H8zM/YOfz8zQTxd54qvEPa7
C+nc1xnsL9ZvYun4fFdTx4vBeSakNDtVSYtgv0vEkDuWmZDW26f12QD7PUHP
unadCeNfzO4sKhFQwfRicjGbN+TdFt8cjvnmo7dnkSnecN1G+ABhiQOlPDpX
EsbrDenz/67p6eP+U/OonhD2hsEKO+0N6xwotFC20UHCG+62jW597E9A08Sf
7c2y3qD+SEqqUw/Pg+P3e+SVvcHKtpSmJUpAgx+S3mZqeIOys+4cjR+/1xxc
Pq/v9AZq/RkVMu6f9mbx+QBDb3jk+auhZpED6Sh8XRs084ayoa8vPH5yoJqs
epKprTdoehecEezlQLIsMYK3nDEew9T0d6840KX/bKU2MbxhLd/b0xDPA55h
oW3JPt7wMae3/jmeL0nmEzq//LzBWfFnEwcvAf2tvWm2+7A3NHM9KHbzI6Bj
EhFOL456w0teWc+enbi/zpoxd4Z7w5Jn+p82AgH5LHEfvBLtDVVCQXxE7NeB
fe9CuBO94TOTvVxSAvd7b8XpU6neoJa8QjvIRUBI/1jqlwveYBremiMzzIF2
XDfIdc3D+ASTWfmtsR6CpCutxd4QfLJPQXGVA0nHDdQoX/UGyzMSIqY4f95s
SXNutTf8HniqFC+G/eF1+MnGOm/4H8XWHY/l28V5VkMkSVZKZLSkEBGnEhpa
RAvPnjKKokQqUSgVpZSfMhokJKnIlYxIKSuJMssuUoT0nvfP++N+ruuc7zrn
/sPbWWmNcsjPqVKTKs9cF1B0jL4Q1MUgoysonz89dwGKn8j8FQX1mvCmy7bY
BbJnPArOfMkgX6dd/fXwtQukxJLxE3NxPvlzpedVIZ7iidIGvK+qw0A2ot4F
Dqv35h2KYxC7HWPKI58Rj53y/NWjDPL8eYk2t8MFvM8mlVv2MojRoovL3vW4
AN21otsI9XDviouFxaAL6O8MU6m8ySDzaPp2d0ZcIHVVgP85vO+y15CD4j8X
4PSHPM/TxX20qcDtON0V1huODjt3MsiJDeGSXhlXmDdz1dWdmGcjj5wO71Jw
hZmdq8Qac3Aez59/skjZFVacmcRdjfnXfq7v3LK5rpC2/7TbP+x/z1jutesL
XCHl0OpJIf8xyDvBKfwud4Vkfav2tNcMYlOzNctnuSt8Ufjq86mPQfJA7Xmz
qSsctGUk/kU8l9//WrbZyhWcZvhfvoz13FHJqs1d7wqf4kUb9iYziMbpYy3a
m13hp4v8kzj0T/SgXV/UDlf4W3TwrOcXBpnqpvhnfJcr0OOySds1Bjn++gtN
5OYKy2kepwJLGOT3ylT5Wp4rhHV9r04sYBD3pEPqa9xdQY//n8/lpwzSKr9W
7/4BV3AZGTp5vINBdh2TNVLxd4Ut0aYuq54wyNuuequQIFcQhHfHTX/BINZO
SZsGQlyhZyM70MoA95tCT2eXCOzHgVRs6GaQZQbmnLKLrtB7PiLciTaJpMQx
PI2vuoJNaDLzzQMGmTO56sjN/1xhRr5V7qwBBjkndfXK92RXmOue/2krvj8x
4pa9Os0VzNkKdx/j3z0GdN6HZ7lC8a01iXrPGORzV1/fx1xX0K3PspS9xSBb
WrOn6hW4gufoheTp6aiXhqO6h4pd4U/ostOHKhlkafVa66LXyK/9hrJq/H38
6ykshSpX3Od82b//r++id8eY9a4wDAPuJbUMEph35Vr6Z1dYqRTVvYUwSH+2
6+PxdlfwjW2Yo4155Hp/Qc3GHlcoov3xtkJ/v03u/RE74ArK+rO1JHTM3/iH
st+GXQGSW7uNsf70y0cWGk+4QkPTbM7DCuTz/BrbkzQ30KlwV3x5B/sPncx9
P9UNrnSvctVDfCaCKo/PneEGGcwbrc/vY/9+l2/sn+0GO2rvDfBRb5+9XJ4+
m+MGb8fVMpOysX+R9ocp2m5wdo/F8Dns9zmr56fzQjdo/nlo9DTWv3RPlnzK
Mjf47zZvRQnq6b8d/kuGTNzgTcGLUKnLDCK/CTauXe0GLn+qrs77g/pZN0kQ
tc4Ndm4djRRg/v0wf3vy8wY3+J45rlUvZhCmUUzC4m1uENR8nK85iHpfvC//
iJMb5Go5nD2cxyCwQKvh1T43iPu+9fRT1F/GnO7fShw3UNnfGEPOoj+VMmfy
RG5Q9+rKnUVZDBIl57fsoacbnMndVmx+nkGkJlnZSx9yg7uTtQru1zOI1z+6
eGuAGzhJnluq3maQ5uGK0zdOuEHL5Y6wv34Msu3HpcSeMDd4Vf1h6pRgBiGd
e4jZeTdQV3+dnYr4LmvRbAqNcYPZbZTWVdEMcvNj55/aODeYs3lT3LcIBlGo
eqCkfcsNZqj2X8jKxTwoP7TiwB03sIjRZZqdYJDBwtXbSLobFD3Q1F+EeLKf
0fbLPXIDtVtZD40bGKTq4esz+565Qdo6ZeXiQwyyNu1iyr0XbrDefo9NmoRB
spJ2vxwpRf7WfZ78Hfmff2Nes81bN5DlfV1nlcogF2O+jUfXuMGxe7s0OzMZ
hHIuXaWtwQ1CzioEjgUyyIHTviaGLW5QxfRQ1EpjkLZAC4egb27QNAoXR7Bf
x8NUrzd9iMdv1xPmXAYp8iyPUBtyw/nmJJnhiXkpvHBXNOoGkUVrhPszGGTH
ssVte6WYsNkh64zVMQY5m3Z+4ASVCepUpTx5LwYp1Pv57y6DCUyO94foM5jv
SU5y76cwQa3xWnoD/n655lP1kWlMeDybb+iH/YhvzFk0V54J3fWxs8avM8gt
lWAzm5lMkHmVpNSGem6Iabfdr8SEwPmmDQ7oTwUFO6doFSbYbZYX0TcySJKx
tmWIOhNeHJF7nxyC82q3lM6huUx45+q2x6uTTl4FNMoK5mO9vWfG7ilj3ibk
/nJegOelbLd8j/X1voxustNjwpfTlItHN6B/v3kVmy1iglKa/XBZKOpbxv7+
wqVMuJKaZBPJwfqW6seoGTIhyqx7eA7OJ6Md9GPTjJhQdf3pdWfMtxLfFu5f
EybuY/8FvbPCPLyav7nfjAkJbemDBxCf7ryrRl8smDDN08hxyj4GCWj2VX9n
xQT/sr/q61wZRI62g/ZiLRMalv9ecegkgyToLu3NXI9/fxPKaDuM+G2aWnPL
jgkrUsHzOeJf5PH12aVNTFApv/H3zw4GcbpYmHhqCxNsZ8yyN0V/dD6KD/fd
zoQbvf3LElGPRz4eOch3ZIKG+qaybNTPtL9Oe52dmeASs8Kb7MZ8m7dind0e
JixdPzv0JuplmfX0RWYuTKgPWr9z3lbkV9CjsJDJBPeGoc3N5qif8NJRVQ7y
zfxPctMF53V6YqsMnwmLSwvHS7QYxK8qqHxcyATh3fd//yF+U3/vzeqTMEHz
r8HqbfYMcl3F9NpnDyZcf91z8CHOv6WrFU9UejMhOfFJqyXyQZg/RMSHCcan
e4wNUY87TlVszzzMhJPTjbx/qTFI++07ZreOMOH8YI0WdwWDHHp9SvPSMSaE
t1pNG1jHIJO/M6ecOs6E7x8efds0B/cthdUDPieZ8IayPCj/IIMsNlH5yDvN
BKpa5b0erO/57l/E6QwT4le4eShiv9uOvb9jG8GEWW37IVcb513C/SjT80w4
mhW/2mIW7pNFZ/z0LyK/98I7H/2hE0Ynj6kawwTWn222o1cZJFZmrZ1MLN5X
ZdL8CPFYaKCxbPwaE6Lj7KVUME/zdozO7rvBBO7vxRodyN+WQ3X/mhKYsOC/
rxRzNubV1axvbxOZ8D62qiR0C/o5/1xlQQoTTl8oeDuxh0FoLeLHGXeZECfr
zW5CfV2m2f53M40JcoNLH7wzYBA9Pa3Qiw+YELuxsNjLmkGebvrncTIL9S9d
odK1kkE2e35y8nnEBIffeiN/6TgfLj625OUy4cKpY7xlUzE/cy7pOD1jwj85
6akeFpgvDZ5yts+Z8GAKNfL2XgaJ/rvp98oXTFi7Qe3GRqxfR1Pvs14RE9Kc
s1dpyjFIrjWtRKWUCb7eh9b4Yn0bhc33p5YzgWibKZTrMkhjeF7MWAUTHoau
n/sV89TjQeyx3kombLywgn/wM51IVfvwmqqY0Gx26BjxZpBLv7fZv61lwsyY
551HnRhEOOdR3EQ9E+TzX3Q0mzGIpbVK99JGJmwnNL0/qJ+ZkmOmbl/w/H1k
X8ti9MOFltPnW5kwuUp/3//nc37u+tqCDibw1xlEv5mHefrlrtaPTia45cYc
H1vCIAKG3IF5vUxo75B2ylBhEIslB8i276j3rPSCLTMZZIZjnVzwIBMKpizd
8kgd9X9klUvmLyYMdSTPNQDk92Z8assIE35RbknbIn4XXlFGZ4wzQcexc+ZD
WQbhf+fbrf3HBBtX0+n+i/B8pdeXD1BYYAgqtBrU54zVBh236CyokrHLPl9K
J185l1ZUT2aBifErlSv4/rOzw8HUaSzIYw1frl+I8zBz77sV01lA5qy1noR6
5tcXaHAVWMCuznO4+4VOzP9p7Y+exYLWvKJvfzEP5XXCnhUps2D5UjK/aTbW
v7l3yi81FhjFtL27P0gnzw5u27VgLgvcqKWyTnPx/GvZKTvns8Dd59C5mP0M
wnuh/CtkAQs06qQiYjYzyKrOgHU5eiwY9TC9trGWTuSnt1z4uogFH90GbR+b
MkiH8fpmJQMWbBHd+mCriHrcd3ep7XIWdOzYdEJ9lE6iTsoeO2zMAl+d45pW
Onj+Pe/Xt01Z0NUUzuD+pJNV72tV6s1ZICXSojouZ5DpI2bCyVYs6J9ROrRr
nE7aNeJzTNeyIDeJ8Scb9ft0PYUuWo9/P+/sfQX7Oe/Od7hqx4KfsmqKWzB/
uZfKb5ZtYsHcwIiji/D3q54u/fFnCwu2GoRbNqNfp7dctFy4gwWdXTMbnd7g
+ZOGI/bsZMGXnogXs3/TyZOlez+d3cUCFxXrz3HI/7mdBfrP9rJghpKXXL0G
g3ACtPx6XFkgsgsPtgvA78PE0BI1NgvqffMkHuhP2fIexc08FjQH6z9j9NBJ
64+tnAAhC34f7z+r30YnubOzM9MkLBzWQwn5kxkk0lJZqsmDBdOdHz34VkAn
bF7AFtkDLBgs2DZBWYXnRzRfX+3LgqSM6iLV9Xj+Q+ue/X4s2B1cMaO3BM//
eMcs/igLquPtqEUjdPJYSjbsbSALso++VfT7TicRut51E8EsqFDyzuHNZxDW
llptgxAWyOl6OEytohMTX7ODbmEs+Ja+5dS8ajqRuX7jxflwFqw2C+bVIb/N
hdLy5BwLPK5tClqE+s7p4rn+uMCC9FbT5KfTGCRcvjxtXgwL9svGufD76YS5
cunYtlgWzLkZ4z6G+WnienFDcBwLWO1SHUdb8fyQ31cy41mQIt21txLfb07d
87XlJgtkH+TvyGimk+lHVso1JrGg9Fr+pNfpdGJpp2hSd5sFZXAznt5FJx5K
Ay7v7qE/Un6dGc2kkxvtb0LK77PAfm25/BXMl4qse/eLMliwcm7MRcelDDJ+
PLT2+UMW7HFebHnqMZ0s2sr9m5vDgsLbaw0sUU975qxZ8PAJC0w/vJuehnyd
6Zljfz+PBbYz33PLMB9yn4z63C5A/Rw70xOA/voW+uH6zUIWvHl4vigK9aXk
lF0UV8wCbVrl25BkOlmvfaE35hXq+8zL3d4SOvEZ3K8Y9ZoFz8KlzXty6CSJ
bLQ4+5YFb9lac82Rr+pzutxT71mQvKms6K0q5rELLSKwhgUKFy8nBr6gk+WL
Wh76fcC8sDdf3Iz5y/qT/+lAA+IZWvnySTb6q/QadX8TC6x8zcyf36aTgpjD
iwTNLLDIX3cu0Z9O+jmODqw29Lcr64pFN53MWW54dO9XFrQsn/pp0XU62Swl
l7iziwXyb35yvmEeHX3bXb61lwV6mpK0WU/p5N710sEN31lQEvsUV0k6aRAn
qVoPop+PX/EOQr1OMQtea/kL8dKbU1SP+JpOchWbjrDgylnVk1XDdCKsXXVx
+RgL53l/xqsyOrmSOPvp4gkW+CTvnTyK55V4D7XoSLNBvkawvfgfnfyyej9F
k8aGqlzKPMcWOtGWSzdUm8SGD5aT5d8k0YlD49nds6aywbQ9udbqPJ2cuCcI
ni7LBmmWc3pcEJ1k+lnfnSLPhnXRGi83Iv7NNprvqTPZcN85z73tEebXrImR
v7PYcD640TA6i06s2hrmjSizwTuNIb3wJuor87HdoBobPqreiijF9+ODor16
NdhQ6LnDJgHff2PvHftVkw1uelcEa7C+cbUtpFmbDd+O3zLTxHxc1L2ws0GX
DTZtvScWNtDJntxJ8rUL2TAoGeqN+r++TrevrFzChs2zus7KYP7lOr5wK1vG
Bn5n0tGRGDr5Nj8+9OUKNlzr7xcZUhhEaeDIg3wTNiQccMxIn6ATmwLnD4/N
2DDRNi6zPIJOfCON/mVasGHO0ilk3mbU194ZumlWbMg+bTD3hy+d1Oj3b0lZ
y4arvrGvTVF/1JHyQwnr2RAbkXhxbgrqq+R2/DU7Nmya6pggj/5iRZ8qid7E
hqV5i61TXVBfbFb/uS1sUOnJOBx1H/W1zFLpzHY2TPJUPlt1FvU1oWp50pEN
dgrnk9ziUF9vhnnHnNnwYor3ojV4/+a4msjDe9jALXDuVUG+A0SZj7xd2GDN
ydpgaUsnqSvPNUmYWA/zuPqDC3RS/7pT1pnDhtv2lOW1iAeNuc5yLR/vXyJd
FBtLJ8uGbngsEbHhUepBGTrQyb6wkXhldzaIrQ91u1+lkzB1h0qqJxtS1p/c
q/+eTrIz7v/r92ZDl9TbxaIm1IP15GUNPmw4tXpn7K+7dDLtI5tZfJgNGguv
pI1cRP3uz4/KOMIG4xZufc4ROuFKK7+IO8aGnqsKQzXYT1TMgYHTx9kQPRB+
WeY1neTrv9E8cJINlK2Du2UxP7vzdXe4nGYDs3BI50sH5sOOEyfszrCh4XPM
I3kBnaz92pi1IoINdfN6zkYKUW9HVrZpnP8/HgffLX5CJ9fkLs6cepENi3Kf
TGkKQ3/c6l33K5oNJ/3mWhZup5NBE1uf5its6JAv7FhqTydzX99Men2NDS+t
3rR2nkK83cZrcm6wYWRH0p1k9LffTyf6rQQ2cHYtO3yBoD5CM40jE9lAlJ5o
Wh2mk3dq0/h+KWxwDV56UHEp6vkB/zLnLhvcK2ROlv1HJ3rWL0q2pLGhu1jX
cFo0nTjWqw2bPWDD9SGxo/EeOjnufkh3QRb6o8TSudmbTtKk3jvLP2LD/KYz
hY3nkM/oRWFjjxGfJWsfV7GRT/3TuV+fsoEWO3fWZCU6Mcxv7nyfz4ZbzH1v
qKg31+3mKvmEDXoFq2B8I52c7YjZcOcl9uMXIB2/mk5y/H/4XypBPL/MUk3c
jfNPdtO9wDI2ZF7/5y+P80DuVnKDqIINP0oqbGz24fw3kZLZWYl+ntcVsQTr
45fvMYcqNjjfuZ6pG0InF10fSRbVsqEvx/bZ3gd08nxw+nWlejY0KszdaYb7
QfdpcYX0JzYsVP1PcSXiraRWPN7bxIZVy//FGpnSyboHc5fUN7MhbMdPx19Y
n9e6Iy4v29iQHHWxPEmHTq5/qIlM/4p8lnfIRaTh96vE4PnVLjbovFq2Qxbv
H/p3pv9ULxtqinbu9E2kk3nR7Rpe37Ffn3a1uU7Ip57V1r2D2G+XzLur25DP
vKtBNr/YEOXWscL1BJ0kbxt6YDjChh3173X3Y39V7Vua1cfYICdfnZt0jE4m
/O7KT55gQ1tHWadvAJ0slKWt+SnFAalNDweKUd9ON129P1M5MEPCSMg3wzw1
fnKzjMGB1E7t658X0kl62cyq7CkccO5d5FN6DfPfxYOSMI0D0dZzem2s8fto
8NXy8Okc4LxulzJmYZ6c1uIcUuCAYeFR+cki5FM18BJrFgeq3uUNr0O+zqbX
v9yszIG2f2Fri1JxX1m7YmilGgd8SBnMR73qNMwKZ2twYJGvb8FC5P+y94hm
pCYH9mR7LpqkQif0KZ9yH2tzQEGptbIO8fBJyN/aqssB/4HtE2qRuM+tTPg6
bREH9vU5es/8RSMOlSeOrVzKgXFd0QU51Hshn6fINuTABPvZsssdNLJ8wjY1
wogD1zaePBq4gU5uxSxc+3glBwrb20qk+HQyY4nsx5ZVHKBvyV495IF6L/ru
Oc0S+7/kmLlqGZ382FvFWLmGA8+6f0StCcT952f2DZY1B1pMWR2PXemk8uwV
owhbDjgN59gMcnCfmX/kdc5GDjTdX+fdinpJf7KP3WLPgc1xtCuiqXSisd3q
j8x2DgS+fW4zgu9HdmpGmThywPPOopOJnujPIJouyxn52G3s1If4us/+lh++
hwOv49Vn2Irp5FN6mWOOCwekzQsiNVCfG23SepqZHMiuM0hT2EEnT5vOnZDh
cuDWhrqQ2cZ0ou/rrWIiwPoX15bpHKCT2GmOGUwxB2ppLc+/WdDJ5CQT2/D9
HOhYsclfWZ5ODpurfH7kxYE3sgbs73U08rVqzKf5IAcWRI3PNBqmESfxZxmZ
wxwYyYsr6wulk2LpF7eMj3AgbrHDzIQEOjG6mmjGPMYBlZ3FKvxxGkladvrd
2eMcsJczXnh4JZ0ovhIKHp3kwKxZp5pMkP+TbpsmvpzmwKpZVWrymD+Dv5fE
TD3LgU33v94N08R9+Zz8YuNIDmxs0zJV0KaT9wt+FrpFcaDagXWrAP0K+bW7
z17iwIcCU90IGp1kOOb+yL7MgU931yR1GWF+9l4L/XKVA7kqvZmb8L5zJ49p
TL2BfE3TuX8P83BClfnIKAH1mK+1zuAnjezPWrvZLZEDGSlfLqmjXhs3LGg7
k8KBUdU1DBkr9GvLpCPZdznQzrzsO+8zjTzz65b/ksYBo++Un+rY30L5N7en
ZHCgaywnyEQN8/72A0ujh9jPiveTnLXoZKrVxVrXHA5sbw/9Kcb7/et83M88
wft7XnAOjtFI535nanYe4qPgqSCD834XfdW1zwXotwbnE0ao99Lr6oZTXnJg
ptz2B11dNGJi9K90RQkH8moDXM/jvE153eLqWsaBRKfqqigDOpnFKfoVVsEB
Ja3A93Kol1OjKREPKzkAvQ4nzeUwny6c0fpcxQHqdB1Vj0l0wtF3fzq5jgMB
8Xcym2Zj3pAt21d8RH98Cwkom4LzbZdhp0sjBw6XB/0xyqeRzO8zg8K+cED5
mvQzxz80Mi/096yHrRz47OmjVzJKI1EaH9OaOjhQpD3l8joN3JdcjOZUdXIg
/JsnhVJLI1rXz0eW9GBeVadGmyG/vQ3df5/2c+CqBvsCnYfzQMXG48EA6qc0
h1Rjfgbtuvk5cYgDay/F6EagvuyujG+JHeZAI/u/3PAVdKJQ51wQMcoBWxup
If0SGvmk+NAg+C8HelsOr1dGPJIc5BJ8pbhwwdyh23Q+zueLInkxlQuj5oL0
tcjfyvdFx10ZXPh6r2B1sSOdSMnPG9gxhQsj2ta3x9pppHzLUZbtNC7wL2S0
ze6kkUuRde/Np3NByidqz7H/7ysVhmuXKXDh1S7v1NpuGtGRiczSnsWFK+bv
3I7MxTzZ0DlfRZkLfZxhl/nL6f//f8FLsmpcIH1W62xRfydK46kUDS68fpEj
G4P8bmaMHvw9jwusQ7k5y9Cfs9bvbO/W4kIx29VQu5RGPp/McPyig/UHVx1/
hvq5UyhTXK3PBZklaSsX0OnEW1pg/GoxF44tFbI19+K8hMLkPAMuJG73OfkT
+6EFzVHKXM4Fl1VCX/9VuP/m+51ONubCyt+uRQWoh8vj1b+vmnLh98u3fwUP
aIRpbiA4Z86FCruQ1gTEW//I2Q8nLLmga7xY83Q/jQzmdtgeXsMF/R9K4c9U
6SRvGHIl1lw4/M+0vgT5Om1yXY9pywXlnZFlmYjPVt/hWMeNXHBY+Dr2/l0a
Uc7eMWWDPRcGrhgd0cT6Wwfv+6/exgWf9utvFbi4TxpO6TZ04IJHS213OurF
x4u7R8eJi9/bU9Z4oD8tHxSUq+7mQsqTkhkv6mlkUr+q+fR9XAiI0ry/Eet5
t/hQKtWNC2Za7uut8PvhmuS92ggL8T0Vd8sJ8ebcWxzRy+XC8T229rW6dLK4
K3S8WcCFGs4N7dXZNPJbt829VsyFX2fnxvcV0EgB37KpbD8X3BesnGi3w/00
+ar9cy8uOM1gzqd+pJEd7UP5WQdRP65eX9IRbzWtbUtvH+ICOAo3tiCe7azU
+Dh/LjxdpKC1topG0hMY06MCuDBXK1KJm0Ijh7+wgk4FccHC5cvt1u80Ahr5
3/1OcKHnSU382DzMExdl5v4QfJ/4v16NeqyOO/iOFcaF0t//RXriedcb3oJT
OBcs1SSZFrdohK+yMHPjOS48HA0wammiEYNdIZpWF7jg35Xw3OsLjYxcbr6w
IpoLKt6SvJB7NFJYa07Ru8KFpqlOZVWIR7jilQPq17jQ8TFYgYPzxdFhsFX+
Bhdix85mrfxEIxoX7R3oCahHi6t7B/H9b+/uvPxziwunUvz7tStpZEgh4tqS
FC68PKQimHOBRqR2enqz7nLB6L90vee9NCJ7ZYddTBoX5rdOVTr0lkZUPxrP
LXvAhQVO2hVWmDc6aiq/x7O40P3KJsDlN42scBmvWJbDhagsudq3rxGf/74k
cp9w4ae2RuqjQvRPS+GR2DwunI2zpS7PoZFdWinbKwrQ30RGI/wxjfB4Z/Sk
XnJh6N7GkDLE78Bt938rSlBfAYl3HjyikcCurXWCMi58/uK4pCCPRs4uWnE/
roILn3iGwUpBNHJlv9KpykouCO6uuygKxXn34M8eajUXplxmmuwtopGMgUbD
lXVcEO9rM1mA8zRvBZks+Yh8hq3LXHKVRsp8E7/EN3LhbsHO6grUR93j0zlV
X7hwaTDL3gbra/0jimS0IV/fvb7wX9FIv7k9d9VXLtQlPra9if2NHVtm7tHF
hcDgmX1Kz2lkMpmpcKuXC2GH4yhRsTSiSBnurP3OhVVbTUQ3HDGfrRsKpvzk
wmJtXb38azSy5HT+5dW/ubDlZpr4sRaNrHqVsN/7DxcGhd7f7qI+baaesk4e
54J3UPBitwHU82aB2sd/XEj1P6DCwfPczm0cnEblwZ1sn7TEJzTi/m5JGTB4
8PG0TU3SPxrxU5iR4DOFBzHn9n2NfkcjpxyHDt2ZxoOZSx6U75emkwuXP9g3
TueBsTrvQhHeF1//VFt+Jg/Kco2SGs/TyD3V+LF1Sjy4+9wuwOQGjeTsC646
rMKDeJlE4G+nkZfx3Lup6njfzE8MoxM08q7Z9viXuTzw8ni0QFJDI43zFznP
1OKBU42TzY4NOF+5ckttdXhQdSeS6eJHI79SBmhH9Xlg+Vaqqgn3RUpXzaf0
xTwIN7tgMYzPcotys1oNeGBzfuJtyT7U4/64M0orePD8fZh0+UUa0X0QyNxo
woMoQ9kncxbg/jPAWhloxoP7dYrZU5F/WLFeLsuCB38Yz21sfVGPvnodHVY8
sKuc7XMK8dz9WCZPZR3+/UYV9wLWy//Tf9Hehgc7GBrTY7xRj+ZVouANPIg4
6di6YSfq8dgjeLSZBwbTlcKONNBIeEHs7K6tPHBZmKQ4fp1GYqUD+tUdeKDd
96H1MeKVtM6teJsTDwptH7gdwHmREbL2+qndPEjddkBDCvHIL11wMHcfD3Za
p7a9jMb5NmXKxl43HkwL3LfHxxP1uKl33jwOD6ZOmJY84tBIW2TlsAOfB6rl
Y6XKO2jkR2XW21ARDz7nHJ2c9p5GxmdcTn7mzoPgy9IJYtTnFEf/gO+ePDjS
UPShfT2NKOxr2Kt4kAeSBm9xOOpfnWtubnaIB/Of/N7mgfjquF9XdfVHvYw9
I1mDNLLM5++fEwE8UGrKYSnroT4DXD/eDuJBwnV7wR93Gll3qiC34gQPPuxu
vlORjPhGzIsdCOGBTlPN1iHUt1N08GGlMzwYvFuia+WD8+t6q5N5BA8Mq24w
RfgsSlpnwjzPg4pbB3hK3xDvtKRZIRd54G/XnGzBppGAbPqvuzE8OM9O8jXk
4fzK49e8jUX8NvkYjV6mkfNFpQ9/xvGgb4F7zBrcB2Mr9C4p/4fnd/G9l2G/
t2rOHFh9iweUY/2zSh1oJK2xezs7GfUvE96zZDeNPGrfZBh6B/Gw+J3ntZlG
nvemyael8kBz5v0uvaM08mpI9se7dB78zdHKOhNOI1XjHpW/MlH/Ag6zHvlp
pL1LV33Eg5e7t5osEuC+Ps3wnFUuD36a7k1T2Usj3xUv7uc+44Hgv7JJKkLM
d/Wfm88858FtOrel0BT1vsBxcfoLHiS7KJr4pNPItCWPZKqLUC+PpwVdtqER
JWOlnuFS1JeFJOy3DubH6sPl6q95kD6yLF/ejkb019ffXfMW8cnI3RUbid9b
9mZn+O95sCE763wq4mex85owvAbxZZ19Wo/6sXEZs834wIOgiNi74ytx/vP2
6dY28KDFNtiMYYj5vD+fMdrEg7kn5vX+xXnB9tX4qtHCg5yuHZnvPTBfjgUV
r2vnQenyX7Z12L9vSHOS8BsP7OlZXcWn0B+Ra05FdqOe629sbVhNI2ExtzhZ
fTzg6pYKPb1o5OIN6roPP3jwnfu142MAjcQlc+eP/+RB7tODC59hniTdL5bW
HOZB3gz5mjGsL/2RTsv6UR58TX+V7jWLRnLzQ4n4Lw9O7/71RQ/9U1jc+d95
KT4U1H+QMdCmkYo3G4KyqXx4sv/mK3n0R23tPdePDD6E20zTtLiN+1qTjOXE
FD4o7uD9J3MY86jDfY6WLB+0jhf138R5Mtj3ZtxWng/ZkofaIkv006+lje4z
+aDzRH5MyZ9GGBPnn11Q4oNb3wEpGfTLdMbAtRwVPtwTJG/q24b7k9yOI5/U
+fDmpvof1cU0Ml/p4W6peXyoPVE8tqSHShZrKJot0OJD4Fb7/xRxnzHW8VXe
qIP3vaGu9f5JJZZL64Y99PlgWvpuQyKeZ2ey8sOlxXxQvnFvhcJ9zH/L2Jxc
Az6oBgVFLj5CI3tt/sQ0LefD75tWlaJxKuFu2eNLMeHDQmnHGQqIj4fTM0dd
Mz60r/jMn6+J+qXHyCpZ8EHdcXXg4kN4/yOPEpoVH5RUmwpk56F/uHZBP9fg
+wepr44A9j9zvmmrNR+CLuzhdU5G/74c+/HOlg8GGo7y6einlwdq7xZs5MPE
1uL8DkXMj/kP2On2fOjv79PYbI7z+n2Y2o1tfDCx3bd5CPnsP86uCXfgw6st
1Q2P0c/bl1lEHnHiQ9mTG57Hsd/sL7NsRLux36MfuW4RiOf57xPO+/hgLC09
uB3zN8Cy7LGNGx+mf991cTnW09x3y8uYjfdFr/GwbqES6xsB+to8PmjuDj+j
okIjtzc7tSoI+TD35uH3Ppg3U8cN4qQlfNCgzXWKskV8Uqc4/tjPh54Du14r
L0N89rRN++LFB+aUuc/uLcXvu6n5xW8O8qH7IHtSjyyNXHtyOTDvEB9aHLsX
fMK8+Cv0Wpnqz4f/+tKGuR+ohKm88cfVAMRrs+fBYWUaKSrVuhsWxIddm57N
sT9GI3qH/7IOn+DDgj7HhlgrnB86H1T5IXwIWZKX9FMX8anNqHYM48Nhzdc6
UejfHSFnI9aF82GlEyfHdJRKcoy465ef44O4v7rUAPWt0r56Yt4FPtxVXzfQ
PkQlAZdmP54ejXrfUFnzYIBKmtcOeE5c5sOnoLY55btoxHqwXK/vKh9KjLpf
7FyL+NxMavl0nQ9/j4eHLJqL+GwPvFb+Hx+O7a/+77EC4iO1y+HJLT5Il32s
WYTnVT0wnHYnmQ93DKzclPqoxNhNpvjyHT54OJZ9+rYA9SPXcSwklQ+84oFr
5bjPjOc/x1zjA9udlXMD+Wbuj/3OzuTDo89Hwt2non7UD9zZns2HwoeTXn7E
Z52KTSx4jHz4FQ42GKF+ji5QNXjKh/W3LopeLUJ8Fv6rmpPPh18WNwrWDFPJ
9ob68GmED42e4QcViqkk+0yW9VghH0boB6aU2aN+zCL+dhXzoWFSzzdd1ENA
Jy+n/tX/8UxmWtdSyZcrVp6lrzE//m2Ml0mlkrW2Kno5b5H/+KejRedoJOX3
YHPSez5s0+qklRxAfFIqrl6q4cORJzMm7V5HI/t3puw48YEPsUfnPbZcgvsP
7biMdwMfnB5e3rQ7j0qMsncXuTXxQSE+q7DMDPHhrDi2pZkPURZ7mlUxb8cU
ZE1Wt/EheNKRqEOoP9fCr/2LvvJhEWfRKk4DlRR6k9uqXXxQEa/90kVDfDSv
Maf08oH7tHCVH/r97LuDKiP9fDB6p20S3k0l/UH2VV8H+PDjuB9bDu/bbqAb
XjvEhyv63cnfpXH+tITdo47woePmrV3Z+rjvRXeXGY4h3kn6as7yNLLednOX
2wQfDI8+EQc+p5LeP/cnn5MWgPLM2dWlmVRyMW26Xh5NAA0khJI4g0bM3Lxt
uycJYHfQ3aKn71BvM6r5yjICUDM+4Tk+Hed1kdFpGzkBzKsSsV8WUsmSw5eT
fWYIgO7fbhHcRiU1+iNFtxQFsDP84VDESyo50ri7/d1sPK94KFOI80Lz/DPq
P1UBjD3scPj1hUperZmjtURDAMPsfRFj01CfQ4Fr92oKwCzgvWspPs+63cw6
oy2AwLCa8G0jVJK3e23wY10B8AXvQlZ2UglnWlJCx0IB5KaZs/ahf6cW0MnM
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
P7T6Y6Y=
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {0, Rational[216, 5]}}, {0, 
           216}}, {{{1.2, 0}, {0, 43.2}}, {0, 216}}]], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TemplateBox[{"\"Naive\"","\"Sweep\"","\"Sweep & Echo\""},
              "LineLegend",
              DisplayFunction->(FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.501999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.334666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.501999]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.501999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.501999], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.690207, 0.188192, 0.376507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.46013800000000005`, 0.12546133333333334`, 
                    0.25100466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.690207, 0.188192, 0.376507]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.690207, 0.188192, 0.376507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.690207, 0.188192, 0.376507], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {198.00000000000003`, 86.4}, {-1, 1}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TemplateBox[{"\"Naive\"","\"Sweep\"","\"Sweep & Echo\""},
             "LineLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.501999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.334666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.501999]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.501999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.501999], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.690207, 0.188192, 0.376507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.46013800000000005`, 0.12546133333333334`, 
                    0.25100466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.690207, 0.188192, 0.376507]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.690207, 0.188192, 0.376507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.690207, 0.188192, 0.376507], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {198.00000000000003`, 86.4}, {-1, 1}, 
         Automatic, {1, 0}]},
       Frame->False,
       ImageSize->{360, 216},
       PlotRange->{{0, 360}, {0, 216}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 0}, {0, 216}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{2.88, 0.}, {0, 0.}}], 
         LineBox[{{1.44, 13.004495812683984`}, {0, 13.004495812683984`}}], 
         LineBox[{{1.44, 20.611638203889413`}, {0, 20.611638203889413`}}], 
         LineBox[{{1.44, 26.00899162536797}, {0, 26.00899162536797}}], 
         LineBox[{{1.44, 30.195504187316004`}, {0, 30.195504187316004`}}], 
         LineBox[{{1.44, 33.6161340165734}, {0, 33.6161340165734}}], 
         LineBox[{{1.44, 36.50823532861588}, {0, 36.50823532861588}}], 
         LineBox[{{1.44, 39.01348743805195}, {0, 39.01348743805195}}], 
         LineBox[{{1.44, 41.223276407778826`}, {0, 41.223276407778826`}}], 
         LineBox[{{2.88, 43.19999999999999}, {0, 43.19999999999999}}], 
         LineBox[{{1.44, 56.20449581268397}, {0, 56.20449581268397}}], 
         LineBox[{{1.44, 63.8116382038894}, {0, 63.8116382038894}}], 
         LineBox[{{1.44, 69.20899162536796}, {0, 69.20899162536796}}], 
         LineBox[{{1.44, 73.39550418731599}, {0, 73.39550418731599}}], 
         LineBox[{{1.44, 76.81613401657339}, {0, 76.81613401657339}}], 
         LineBox[{{1.44, 79.7082353286159}, {0, 79.7082353286159}}], 
         LineBox[{{1.44, 82.21348743805194}, {0, 82.21348743805194}}], 
         LineBox[{{1.44, 84.42327640777881}, {0, 84.42327640777881}}], 
         LineBox[{{2.88, 86.39999999999998}, {0, 86.39999999999998}}], 
         LineBox[{{1.44, 99.40449581268398}, {0, 99.40449581268398}}], 
         LineBox[{{1.44, 107.01163820388942`}, {0, 107.01163820388942`}}], 
         LineBox[{{1.44, 112.40899162536797`}, {0, 112.40899162536797`}}], 
         LineBox[{{1.44, 116.59550418731601`}, {0, 116.59550418731601`}}], 
         LineBox[{{1.44, 120.01613401657339`}, {0, 120.01613401657339`}}], 
         LineBox[{{1.44, 122.90823532861589`}, {0, 122.90823532861589`}}], 
         LineBox[{{1.44, 125.41348743805194`}, {0, 125.41348743805194`}}], 
         LineBox[{{1.44, 127.62327640777882`}, {0, 127.62327640777882`}}], 
         LineBox[{{2.88, 129.6}, {0, 129.6}}], 
         LineBox[{{1.44, 142.60449581268398`}, {0, 142.60449581268398`}}], 
         LineBox[{{1.44, 150.2116382038894}, {0, 150.2116382038894}}], 
         LineBox[{{1.44, 155.60899162536796`}, {0, 155.60899162536796`}}], 
         LineBox[{{1.44, 159.795504187316}, {0, 159.795504187316}}], 
         LineBox[{{1.44, 163.2161340165734}, {0, 163.2161340165734}}], 
         LineBox[{{1.44, 166.10823532861588`}, {0, 166.10823532861588`}}], 
         LineBox[{{1.44, 168.61348743805195`}, {0, 168.61348743805195`}}], 
         LineBox[{{1.44, 170.82327640777882`}, {0, 170.82327640777882`}}], 
         LineBox[{{2.88, 172.8}, {0, 172.8}}], 
         LineBox[{{1.44, 185.80449581268397`}, {0, 185.80449581268397`}}], 
         LineBox[{{1.44, 193.41163820388942`}, {0, 193.41163820388942`}}], 
         LineBox[{{1.44, 198.80899162536798`}, {0, 198.80899162536798`}}], 
         LineBox[{{1.44, 202.99550418731602`}, {0, 202.99550418731602`}}], 
         LineBox[{{1.44, 206.4161340165734}, {0, 206.4161340165734}}], 
         LineBox[{{1.44, 209.3082353286159}, {0, 209.3082353286159}}], 
         LineBox[{{1.44, 211.81348743805194`}, {0, 211.81348743805194`}}], 
         LineBox[{{1.44, 214.02327640777884`}, {0, 214.02327640777884`}}], 
         LineBox[{{2.88, 216.}, {0, 216.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{360, 0}, {360, 216}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{357.12, 0.}, {360, 0.}}], 
         LineBox[{{358.56, 13.004495812683984`}, {360, 13.004495812683984`}}],
          LineBox[{{358.56, 20.611638203889413`}, {
           360, 20.611638203889413`}}], 
         LineBox[{{358.56, 26.00899162536797}, {360, 26.00899162536797}}], 
         LineBox[{{358.56, 30.195504187316004`}, {360, 30.195504187316004`}}],
          LineBox[{{358.56, 33.6161340165734}, {360, 33.6161340165734}}], 
         LineBox[{{358.56, 36.50823532861588}, {360, 36.50823532861588}}], 
         LineBox[{{358.56, 39.01348743805195}, {360, 39.01348743805195}}], 
         LineBox[{{358.56, 41.223276407778826`}, {360, 41.223276407778826`}}],
          LineBox[{{357.12, 43.19999999999999}, {360, 43.19999999999999}}], 
         LineBox[{{358.56, 56.20449581268397}, {360, 56.20449581268397}}], 
         LineBox[{{358.56, 63.8116382038894}, {360, 63.8116382038894}}], 
         LineBox[{{358.56, 69.20899162536796}, {360, 69.20899162536796}}], 
         LineBox[{{358.56, 73.39550418731599}, {360, 73.39550418731599}}], 
         LineBox[{{358.56, 76.81613401657339}, {360, 76.81613401657339}}], 
         LineBox[{{358.56, 79.7082353286159}, {360, 79.7082353286159}}], 
         LineBox[{{358.56, 82.21348743805194}, {360, 82.21348743805194}}], 
         LineBox[{{358.56, 84.42327640777881}, {360, 84.42327640777881}}], 
         LineBox[{{357.12, 86.39999999999998}, {360, 86.39999999999998}}], 
         LineBox[{{358.56, 99.40449581268398}, {360, 99.40449581268398}}], 
         LineBox[{{358.56, 107.01163820388942`}, {360, 107.01163820388942`}}],
          LineBox[{{358.56, 112.40899162536797`}, {
           360, 112.40899162536797`}}], 
         LineBox[{{358.56, 116.59550418731601`}, {360, 116.59550418731601`}}],
          LineBox[{{358.56, 120.01613401657339`}, {
           360, 120.01613401657339`}}], 
         LineBox[{{358.56, 122.90823532861589`}, {360, 122.90823532861589`}}],
          LineBox[{{358.56, 125.41348743805194`}, {
           360, 125.41348743805194`}}], 
         LineBox[{{358.56, 127.62327640777882`}, {360, 127.62327640777882`}}],
          LineBox[{{357.12, 129.6}, {360, 129.6}}], 
         LineBox[{{358.56, 142.60449581268398`}, {360, 142.60449581268398`}}],
          LineBox[{{358.56, 150.2116382038894}, {360, 150.2116382038894}}], 
         LineBox[{{358.56, 155.60899162536796`}, {360, 155.60899162536796`}}],
          LineBox[{{358.56, 159.795504187316}, {360, 159.795504187316}}], 
         LineBox[{{358.56, 163.2161340165734}, {360, 163.2161340165734}}], 
         LineBox[{{358.56, 166.10823532861588`}, {360, 166.10823532861588`}}],
          LineBox[{{358.56, 168.61348743805195`}, {
           360, 168.61348743805195`}}], 
         LineBox[{{358.56, 170.82327640777882`}, {360, 170.82327640777882`}}],
          LineBox[{{357.12, 172.8}, {360, 172.8}}], 
         LineBox[{{358.56, 185.80449581268397`}, {360, 185.80449581268397`}}],
          LineBox[{{358.56, 193.41163820388942`}, {
           360, 193.41163820388942`}}], 
         LineBox[{{358.56, 198.80899162536798`}, {360, 198.80899162536798`}}],
          LineBox[{{358.56, 202.99550418731602`}, {
           360, 202.99550418731602`}}], 
         LineBox[{{358.56, 206.4161340165734}, {360, 206.4161340165734}}], 
         LineBox[{{358.56, 209.3082353286159}, {360, 209.3082353286159}}], 
         LineBox[{{358.56, 211.81348743805194`}, {360, 211.81348743805194`}}],
          LineBox[{{358.56, 214.02327640777884`}, {
           360, 214.02327640777884`}}], 
         LineBox[{{357.12, 216.}, {360, 216.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 0}, {360, 0}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 2.88}, {0., 0}}], 
         LineBox[{{12., 1.44}, {12., 0}}], LineBox[{{24., 1.44}, {24., 0}}], 
         LineBox[{{36., 1.44}, {36., 0}}], LineBox[{{48., 1.44}, {48., 0}}], 
         LineBox[{{60., 2.88}, {60., 0}}], LineBox[{{72., 1.44}, {72., 0}}], 
         LineBox[{{84., 1.44}, {84., 0}}], LineBox[{{96., 1.44}, {96., 0}}], 
         LineBox[{{108., 1.44}, {108., 0}}], 
         LineBox[{{120., 2.88}, {120., 0}}], 
         LineBox[{{132., 1.44}, {132., 0}}], 
         LineBox[{{144., 1.44}, {144., 0}}], 
         LineBox[{{156., 1.44}, {156., 0}}], 
         LineBox[{{168., 1.44}, {168., 0}}], 
         LineBox[{{180., 2.88}, {180., 0}}], 
         LineBox[{{192., 1.44}, {192., 0}}], 
         LineBox[{{204., 1.44}, {204., 0}}], 
         LineBox[{{216., 1.44}, {216., 0}}], 
         LineBox[{{228., 1.44}, {228., 0}}], 
         LineBox[{{240., 2.88}, {240., 0}}], 
         LineBox[{{252., 1.44}, {252., 0}}], 
         LineBox[{{264., 1.44}, {264., 0}}], 
         LineBox[{{276., 1.44}, {276., 0}}], 
         LineBox[{{288., 1.44}, {288., 0}}], 
         LineBox[{{300., 2.88}, {300., 0}}], 
         LineBox[{{312., 1.44}, {312., 0}}], 
         LineBox[{{324., 1.44}, {324., 0}}], 
         LineBox[{{336., 1.44}, {336., 0}}], 
         LineBox[{{348., 1.44}, {348., 0}}], 
         LineBox[{{360., 2.88}, {360., 0}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 216}, {360, 216}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 213.12}, {0., 216}}], 
         LineBox[{{12., 214.56}, {12., 216}}], 
         LineBox[{{24., 214.56}, {24., 216}}], 
         LineBox[{{36., 214.56}, {36., 216}}], 
         LineBox[{{48., 214.56}, {48., 216}}], 
         LineBox[{{60., 213.12}, {60., 216}}], 
         LineBox[{{72., 214.56}, {72., 216}}], 
         LineBox[{{84., 214.56}, {84., 216}}], 
         LineBox[{{96., 214.56}, {96., 216}}], 
         LineBox[{{108., 214.56}, {108., 216}}], 
         LineBox[{{120., 213.12}, {120., 216}}], 
         LineBox[{{132., 214.56}, {132., 216}}], 
         LineBox[{{144., 214.56}, {144., 216}}], 
         LineBox[{{156., 214.56}, {156., 216}}], 
         LineBox[{{168., 214.56}, {168., 216}}], 
         LineBox[{{180., 213.12}, {180., 216}}], 
         LineBox[{{192., 214.56}, {192., 216}}], 
         LineBox[{{204., 214.56}, {204., 216}}], 
         LineBox[{{216., 214.56}, {216., 216}}], 
         LineBox[{{228., 214.56}, {228., 216}}], 
         LineBox[{{240., 213.12}, {240., 216}}], 
         LineBox[{{252., 214.56}, {252., 216}}], 
         LineBox[{{264., 214.56}, {264., 216}}], 
         LineBox[{{276., 214.56}, {276., 216}}], 
         LineBox[{{288., 214.56}, {288., 216}}], 
         LineBox[{{300., 213.12}, {300., 216}}], 
         LineBox[{{312., 214.56}, {312., 216}}], 
         LineBox[{{324., 214.56}, {324., 216}}], 
         LineBox[{{336., 214.56}, {336., 216}}], 
         LineBox[{{348., 214.56}, {348., 216}}], 
         LineBox[{{360., 213.12}, {360., 216}}]}, InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 43.19999999999999}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 86.39999999999998}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 129.6}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 172.8}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", "0"],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 216.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"1 - F\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-31., 108.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"  0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\" 50\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {60., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"100\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {120., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"150\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"200\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {240., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"250\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {300., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"300\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            
            TagBox["\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"\[Sigma]\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Delta]E\\\"]\\) (V/m)\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "4"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 43.19999999999999}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "3"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 86.39999999999998}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 129.6}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "1"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 172.8}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", "0"],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 216.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"1 - F\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-31., 108.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"  0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\" 50\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {60., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"100\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {120., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"150\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"200\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {240., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"250\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {300., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"300\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           
           TagBox["\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"\[Sigma]\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Delta]E\\\"]\\) (V/m)\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}]},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}}, {}},
  AspectRatio->NCache[
    Rational[5, 7], 0.7142857142857143],
  Background->None,
  DisplayFunction->Identity,
  Frame->False,
  ImageSize->{504, 360},
  PlotRange->{{-72, 432}, {-72, 288}}]], "Output",
 CellChangeTimes->{{3.7683954377231045`*^9, 3.768395454935976*^9}, {
   3.768557397564247*^9, 3.768557440761344*^9}, 3.768557533796708*^9, 
   3.7685578346402683`*^9, 3.7685578755436864`*^9, 3.7685580898051615`*^9, 
   3.768558125681478*^9, 3.7685582465008297`*^9, {3.7685583054958134`*^9, 
   3.7685583330069523`*^9}, {3.7685583772524457`*^9, 3.7685584716590176`*^9}, 
   3.768558505163703*^9, 3.76855862187042*^9, 3.7685654396824207`*^9, {
   3.7686421675155287`*^9, 3.768642208716777*^9}, 3.7686422545893326`*^9, 
   3.7686423080984817`*^9, 3.7686423875976486`*^9, 3.7694463862838316`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"fidelityComparisonPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fDatasets", "[", 
       RowBox[{"\[Pi]", "/", "4"}], "]"}], ",", " ", 
      RowBox[{"fDatasets", "[", 
       RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", " ", 
      RowBox[{"fDatasets", "[", 
       RowBox[{"3", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Pi]/4\>\"", ",", " ", "\"\<\[Pi]/2\>\"", ",", " ", 
      "\"\<3\[Pi]/4\>\""}], "}"}], ",", " ", "1000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7686466916139727`*^9, 3.7686467178308573`*^9}, {
  3.7686496044911404`*^9, 3.768649611806923*^9}}],

Cell[BoxData[
 GraphicsBox[{{{
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{0, 0}, {360, 216}]}, InsetBox[
      GraphicsBox[{GeometricTransformationBox[{{{}, {}, 
           {RGBColor[0., 0., 0.501999], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1:eJwUV3c81e8Xl3RHSchKkb2z9zxmNnG5XNemIiNCqcykjKzKiIySr6KihAY+
RqmMFqFoTyQjIym/8/vrvs7r+TzPOef9fp/381xRv3CnQFYWFhbSBhaW///e
dF2Z/3F1xDBpIu+XxisqsXjGoHtXVpPR5R6xXAWM/1X77hPO6jYamLcrlcWY
MM37nXblmVFCivM1OsasNw+0sGUNGY25X/i+F2NTMZekhIgxo0r1wcD/f99h
WSwWd+W9UZ26k2f8CJXwZ8lM0S35ZERZQ2OdwJit+eiXxVNfjTKrVzbWYnwp
PNTyVsK4UeRGn5BkjC2kva5ERvww8lmzeIcb46hwaVKhyrTRp6ux4YMYm/Vs
b4q5MmPE4+S12x5jHmmBvS7ic0ZKT2OEfTD/p2TOLeolv4x0bmqJieB6wxvK
Y27eBSPe2p9lu3D9uO6aIzOnFo3MHJLLvDB2zf8t/5T022jrB5l4eYylZmdG
ryUsG+148LDCEOMFu/FTp5b+GAVn8U82DlOJB5c/GIZE/DV6EM/p7I7rBete
/7Qe/2eks5ODl+f/+eqCnp5RYYGgReMjURiXvPkswzbFAgz3vVbKuD+F3S/p
wJU1YH6zm98A94fovhn5sJsVKnIr2YJeUgnaXoaqk/hayA+Rk5fA/fr5L9Pb
366FhVvxzC0YS3Q5fVQuYYN/9fFHZTBmn+3XK3dbB2L/sZ3zwvjXdpszm3hJ
8LPh7f5pjEftuifjn5Fgx9qZR3avqcT9I6bmU6fIsOcw17sUXL92ue28pzUF
ZHjFG69jnD+kt9BLosKaTm3dhiEqEb+u2V6/kwo2+gq5MVjfbjX1/2oS1gPn
mOXBIvze3rduVVB/A6x+3LRDA/vTzFZwS1/aAFb7dgadwXXhluq63w3s4KH7
pvn/66QJCWpQxEYwui0oXoPnTQlU+A7v4IAP35wHnw9SiSELoTs7xznAeRsp
9OcA6i+qiLupahP0dFofjMV6aM/SNU6rcEKQU8eWcxhbfnv4/nE2J7yU8xh8
iPv1V0lZrFOccMMu5suZZ1RCmc9cV9eWC7yVs1k/Y/8SO459ibjCBe8t1U3+
YH4Bs/a8yxRusNaeDniG+9k9Vg3f7+aGb7HlsxPPqQRLpMGEwH1u+MBMUgr4
P74njxQ4im8GCWEVlib8/lvZbdOTSZuB2K9qHor9jTYu/mx7uxk2Z1+4IIX7
n/ZplCwa8ED8Gvt1e7Derk8HLJVKeCCB22//E9zf/Kf+1+5lHjAuOTKSgv3W
ck+Xl7rxAiv3/GGrF1SiXFbR7mUjL0h+kyHZYD9nIOT3Rl4+eCd8WSgB9XOS
fuWS+QE+uLDp97cwzH807NuuuGd8cMcmX0T5KZXYf1zqX4MSP7AE2iefxf2B
JQFXJk/xQ4UeteHpE8R360Vprl/8oEf9re6P+wWL31dqMATA8smDXyJYT5Sg
iBiDEIChmcj3hVhvf5FXWbzUFugrGU9ZxfNltpzfdjFzC2zbOuaci3gmF74u
6p7dAqUEzzVqP+LBL8g/6SYIjly/nrzCfjQL3M5wtgmCbE8StQXPz+Er4NKQ
3AoSpIpNkVjf+NnBLPeMrUDr3vbrWC/OOy8Pe/zMVrjKqcRORvzLzjilXaBv
gzsL64Y6+qjE8uZcUnfLNrD/V85bh/XTTj85NiEuBI2XDKvz8bxr3BxrONOF
gFtwyLcVY0qebbz6tBB8bFxcpeJ+P66MP26uwuBn5qH0Duu7l/PoUNw9YSAs
zzjU9lAJPk7KQoXYdqDkxApRMI7Itjjw4OR2mPF0KbBDfns5jk+PT20HEcML
9kfw/M3d7xtPyIlAuHhJYgTiQ5CS5os8RUCMtqs8DPsNtRBRr80RgV2vVqwf
4rpgaltka6cI9Hm+NdRGvB7e96p/uiACayKSnFJxPXrdv58fZEWhY7Dtkvlj
KiFmfl5xnikKjRft67UeUoknKfqh5BxR2BDIJaeA/Rztel2zpVMUZPT+DeZj
P7JsR8blF0SBen/d7Z5uKvHSVFDWUFYM1uTSgj5iP8eO3d7jyBSDifNZUT/x
POVOtyq/bDFQsp/gqHpEJcZYlz5FdYjBpYcp/d74fbpJgfiJeTGo9WTxN8Pz
tJI1/YpkxEGZ55nKceTrU/tgeY2HOOTovng2jvrKWxP9tiVLHC5qHFxVRHyM
jHmEn7aLwzc1tm6xB1RiMvEm88MvcRhZKnIUvk8lzhFOxb+kJUB09LngD4x3
ssyOkDwkYE0YS7EF1vPLKFdgS5YEDFWlEXXYX0WCMl2+XQLI/Lk1t/B7+7Yn
Zw1+SUCbOl18EL//8y9swEFaEibP303Wwf6qDTk2+zEkoZxgcopifpf4q7ui
TklCpZDqWVOsn7XVNieVwPWO5r9c2N/1vxP9hXOScFk5Q2kT4ss0yNhYIyUF
5+TuavwjqAQ1Ts62xV0KDL9I8yi0UYnGe4/Sn2RKwZfLJ4bjMPZf2fvofZsU
DPzVrruO+HHqUyi/ZqUgbYuqOh/mbznynwVJShp4BpJrL+F5wXctjgu4S0PN
4OBEA+7n//O5Uy5TGr57sWl2Y9yle5zVoE0aKigifan3UI+HJYwdZqVBOurh
TV88T/hOZ4KvpAxQt+c4vsa497df6wE3GegzHhMWxH5idVj/Hs+QgXcQ+54H
8XgwJf9C464MPGgL5NbG+rgrXS5/HpeBdt1Sg39dVMLLPSHhrKAsRGmD/Pu7
VOIKx2UXc2tZeGZMWnsR1xc6n8vPx8rCrX+3dJZb8T0Qu7Lm0mVZqLdymuPB
enMUpYZpI7Lw9bBudPYt9IOPDtfYqHJADKfuiG9B/yiKTWnQloMdTQe0L9Si
3u0vMgL2ysEC5xXvqA58T6ztU+YplIPWcwv7w/F7jtsLpK5uOSiI3nprO9bP
CBMZO7AoB7UOLpcF2qnEf+LWN8Wl5UGV68/yTDPqZfhA2gtXeRBOH/346jaV
gKzz3sdS5cHR+Vu5MNaTadqtodYoDz3fpyKFOqnEyNL0ho+f5eHEk3qVRNwv
dU3wQx6vAgxpLBaXX6cSkf5mzSbmCrC0zXhT/g0q0SoQljUbpQBvJF872iLe
6/sLAi5UKkC7+pXtxxvxfXGsXddpQAEEn/xNjMHzLmpPcLKy7QDnEKn0Rdw/
/YPna73aDtDfPmu+E/HVv2jY4uu/A8ZU2qUZyO9Jt72nuU7vgEffwx+9Q/4G
NuYFtXfsgJN//Yi3TVRCpPOuUcTsDhCKF+P4gvlCD33mFRVTBF6P4tej9VTi
zo5Nk093KQKjRmmFUoX370ftjsQkRXD7JSbDi/mcCv0KlesV4awmDdrvoL/a
ZYa9e6cIFlWPXEXxvEnWRrMcTiWwbrgSxYJ4aTe/FQRQgq1qM2snsb6UUOrM
z3AluHCJNkCvw/tOTK27rEwJQg2cvk4h/9uGmecdnijBAbWiaHbEL+hU6oHV
f0rAdqLha2QDlfAQHa6k8yuDE2/D8DPkf83KZLaSkjIw3m/L4KhBPl+uOULe
qQw8oLL3Lu63q+fb/dZLGcSPObO7XkZ+M+R3NcUow+r5w/e+YX/ndoN+dpYy
vDHOKI7GGIxdpPdUKYPQDPuRkitU4svWYG6jVmVIUJK1MMd6Mxfi//K9VIa4
z4HEHJ6v+uz0t6kfymCyRnhfD54/XFP94sE6FdjlWGDZhvsTUltaS4VUwPvA
/O6XyJ+U7/PLMRoq0Pti7PAxjHv1vp6xt1OB5hZC2+8m6oVvJUEqUAV2j3Bb
1hXie2OGc9+/oyoQvIHd8+1/qJ8eSdeXZ1TAcNAtkQ3xCKjSNb5WqwL9nf1U
Fcy/PslBIbVLBRyUZFvvYD/1HgH8XqMq4Lw2vKekkkq4acayav5SgZ8ZY18T
sL5/nFk/NrKrAm0771g09lM5cWH4s7gqmLQK/dqN+60fNHW26KnCvYr3f0uw
3uGnd2aFnFXhlut2ofJLVGLP6xbR+GBV+G/nxNTdCzjfnwnHN0mqsE1eI+fW
GeR7ujPBsEgVfOvNjj1GfXH/eXCttE4Vfp3dmKGWi3687vHYv25VENleyzVU
gvcJZx+791tVaGmEJj6MWwWf6rUtqIIm/Rn/6EUqYSv5Ing7hxrQx6KeCeVT
iddKL4sSJNXAzDtF2xnrDdYdefhWXw0aykX39GG8ZDa6aERTA/5jRveYGKc6
vJUq36cGCe1TkuHFVIKX8cGF5ZgajDPaN6qcx/4DPqf4nFOD6emmw4KlyG/4
t5tEvRokGl/R+3gW7+fYiQ8ij/C8ur8cN1KphEPKFFfSOzWoePj3DQvuf5M1
A+8X1eBT+rYfbchfSNGvcONN6nD7Xqqm2jl8f1xcLK2QUodCWlDuIvaXdm25
b42hOhywiNPPLUC+b/9d8XVRB7YfXqO/MV9VJ4tCR4g6vHm0y0gf8VTvX+sh
lqIOWy7qX1BFPjuHSenJxeoQ/yRIgwv7cfpIvf3hhjqUpIWUFFdTiXc/2L+Z
PFaH5nvcTV5FVCJsaRP/xffqkCHZHe6O5/9l3Wyx9rc6RMZwC7zC+jI38kX7
c2qA9sXHweeQH0GBLZWd0hrgUPS3n4z9VYtteyFupAHQ5XJ493G8z3dsZ01x
1QBHwaqthjl4P2iJqXwK1QDPzF6/WDyPZiLpY3ZcA6xKuN72xlGJD7Yy2ZUl
GrD38sey//MXQZdvZWvQgGmbR8+0cD+Ln+KPgB4NyNfR8JjE+rJCVLbd/6AB
y4/y03fi99sOqttILmuAm+hpYT78viZJ6/BxLk1I/83mfhfXdTN1L3+W0YT7
nZeswrHfh/kGw+agCTBz5eBSOvprBZCr6JowIFgjOYJ4fq4x1SSFa0JyfjvL
SBq+XxstAnenasLBWS32asSTtd3qzIPzmhCXu3TO7RjeTz22nVK3NMFoy6lX
HnlUYvtLh9nUXk2w2R2gHZiI78d3TqJfP2rCjuD8LfyYT3/CxXHnH00IfvFk
bTTGj+fdEv7j1oJPMjWabIiHOwvzGllOCzz3ErmDJ/H/wXrvsT3GWvD56rsl
hRNUIobXj/2hmxbovhToe3ka/w+LBOrJ7NeC1TqfHHPcf1pub/DJE1rwLln+
wxXUo5jGvqJvpVqQphdZ/SWDStQZhT20bNSCYzV1l53j8T1lHbFY3acFATnk
Y4NH8H1Oi5KiftaCVL17ymzJ+F7xPugStKIFlkLKw3KI70TQ4ZRHm7XBcfAH
nQX1cCar5avEDm0QzWc3MNyD/d1ksUm00IZNdbKRXFjvpyHTa6+9tcHt097n
5lhP5koql1asNkh8jNvGehj1K/o4Ki9PG9wPZCS2HsX73Xzj8I8abUg/1fb5
//2kBDvqWd3XhoHC70e5E6iEQvbp0so32rBjcUC0DfkZuPlyDcuSNtRUztKm
YvH9Orwl0INLB8xqsh258XyJv8yHjXI6sFl92YSK9faKlstzm+nAH+94nqO4
HmXxMSvUUwfWzxgt/Mb92/ZJzT6M0YHB2L4nrQfwvZQd5CKRowMPrsftbozC
+W2obU64rAMF7/UqX/lRCZ6Rn1tfd+gAT9AB8zis795f1QTNUR0wdjeg3cD6
A8RiPuTO6wCH7jt7m1D8f7jztvkPDl0wrz/P8vEg/t/ft1JtKaMLsyeSDFSx
f2aOEXulsS4kcRw0bUU+2G4lh68ydKEh1JRpg/XWjtx/zojC77kWolqwXto/
imbjKV0oMv13TdifSqyI2RZx/acL68tePG5yQv/amb0SQugCzfG1gTjWZxvy
3PvhiC403Q6zt9yN918Ob6f4nC6one7cbhtMJUpuuUklsOuBeqDlaC7yafaq
OO2VpB4IN907no3rk//eTGoY6UFf4VxsIa6fERdzzHXTg6iLttV+0ci/ZeDN
yQg9eFFOqnfei/yHVPNZZuhB3PV+lgIf5D93IvZipR4ot3Oaibgj/42KY/9a
9EB+YKZGPQL5fxUBjCE9uDgRbsuK+KasNly8Na0HWYE81ZsRfwWJJRLXen3o
CzDTtPBG/i31gkPE9aHw8AdPmwDkPzS+r1tfHzbY5n8X9UT+89qVxV314b35
msBP+H1vI9uZ+HB9UNc4IjHtivy/3rk4chLPW592/Tv2s40lg6FxQR+oR4uF
z4ch/xL9LTl39WGMb1OJFNYTasUlOjmgD+6f4650+eL/uzBays4pfZgNFk8a
D8f7Ka/g6wWyAVz1nw8djaQSu5teWf8TMQBn3blpAQ98f44KXXPXNYCJh7v9
2/bje5/Fl+uWswF8Lc/kpWJ/XpKVUZyhBiB9NcO42RHfW9Zfh/alGsBZ+r7H
8m7oJ2Fyet1lBhBfsO6ECtbvejq0VOy2AejUz16RYuD93VS3Jv65ATzYZsp/
0R7vi9G5gJEJA/Brt4ovs8H/N2u0HqqvM4Tpjsj7waiPBcnD8jnChlBQftn/
NuJVat2SNaFlCDr8Vgc2IB4W4SyzFrsMYV5dLu22FZWYOm3qciHYEK57pbX0
o553z9mk2CYbwq7r/M+XdPG+c6LdXCgyhNwmwswH87veYH4orzcE1/b+14XW
VKKPK5DL5pEh+LJaU9jtUF8RoTD/zhBU102nrKAe7j2NDi9bMgR46zQ5ifio
K8eXWnEawdrA2I93Ee/a7NS+OWkjmIqpO6eig/z+zFo5b2QE6+K6qU/VqESx
fYG8Jd0IbAsFen3wPO5rZYzZMCMw9V9Zz4v4p2+sTitJNYKbowcqj0qjn4fW
NVuUGsElHackHzMqcbi3+ev0LSPYdImDdhP3z8q38xX3GcHR/RtvlFji+zPj
kbn5ZyOo/6T8eVkT79PxZ1E/V4zgk9K46HesR0HyxzPb9QARUwmdtbvQv2kR
30X5AF5I28z/RvwqU+ZZFkUBmk5tHby/lUr4NMQK9O4A8PE9GZFsjPr79Fep
QgeA64Jv/mM8b3hz8s4Yc4Cstywl6Sbo76Ykb5tdAN5SSRN+5sjngfQYEU8A
quT8k79G+N67yJE1vxegJnf583stvH+f5116HAXw/Raf0CYpKpHMyt9Slojf
r+cNe6hHJQxViweiMgHuhP9suY/ry77bJ60KAQRtyrcHGqI+cy+u3V6J+bp5
GZJ4fmS79NZf1wFC3W+FDNGphOJMjeqjuwCV2cfpZrh/XETZurQboKJkarTL
BfXn2OB74AWuSz24aIT4+iVqx1q+BbhWeyHyF54nXHcvR2gC4NCmfTP7Ec9X
b6F6dgFglnrY+LU2lcjfdL+tm9UYaqw6LI/g+buMrIZKOIzBbS9r20NB9NPw
vqkIQWMo7g/kfqeB93vpLtJOKWPYKSbxZ0EJ/aN/UGibqjH0cTQPmDjge/6f
u8aMgTGUN8TO3lBEv9zxxvaBlTEUfe5Q5JekEs2efgHFLsYgy1U60LId/eHU
lyP7fY2hfsOH/cOob+WW4NPmocZw8rGIf6Ac+uHk1BXBWGPoPMW+vRbrqd52
oONnijH4FM/dkEH+AmwXR7pyjOHvOcmJM9i/yNEjM0UlxuC7+elIAO4frVml
hFcbg4NxQ1nlDipR+PqYiFmDMVyM1NFfQDxoGyjaWwhjsHScPJ60kUps0st0
mOoxhiiLrd0gg++HYM49nUPGYOH+fPKJCL5nz52JL/xoDGHHp+JSNlEJk8cC
+aE/jaF7f3tGghD6w++SqyZ/jEFKwPJvvzj+v5MVvc9PNoHktQPBulhPjPul
0UluE1Be4b2xF89XTZP91S5sAtaMnec2ol6nmq9uKJAzAVjz4FAC1ss3cS/K
1NschjZcUhqdpRCWgnkeSymWkBUsJ9nfRCFC2DnPNuZYQr/Y3SmOWxQi99+p
/qgSS5hsd3MfwrhxegNFrdoSfBMD2EryKcSrD2nGMzctIcbh6j+dGgqxOkA+
cr3NEnY+vPcj/D6FkOg+3hDaYwkZbn3HbO9gvttrp+SHLGHG+tyl0G4KEVqT
JD3+wRIumsY62KRRiLzzqz7VU5ZQYZs1wziD+bLjzu1etoTNYfxjajkU4nXS
nxcSJCtwJ/u/rL9JIViiYjd+5LICGX4lWZn/MN/uRYsKISuwNRWj5zyjEFZu
0Yneslaw4Ky74/kpChFmPXdbSMMKfBjvVnefwHz6EXOvwQoWf8x5XC3FfIo/
Fc7ZWsG2tedVftzAfCKhu93crODyhYZ4wzrMt3mijC/ACmp81C82l2G+dUEj
A+FWMMi2+TUjD/MtfuE+fcQKFI/YJAZVYb7vAba7TljBypLCkD7im/f6w/FN
p60gKDLt60XEq6nPp62v1Apct7re9cLzRtveLGVcsYJcWkV/01nMd4Opat1o
BXPH/QwtHlIIycpX+ygdVpAhxZarlE4hrPPdLj3os4Kpit15z49hvpMv36SM
WMFp8THGR9x/+jBNwPQz4nEvb5sI9tcc8nzXmhkr2L7b7xJ7NubzcsxoW7EC
Q6ObHx1wnWVXf1ccxRpoLcoL6o2Yz9T2nx6PNcTseJ22LRPzaTzWWt5uDQmy
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
nQ9YM//RydgsV9I5jwlDnh6FF+Ygvz4b9LUvYMIWqSO1uxH/TWWTFVsMmHDy
ebeMHJ7/6OGeJY3/MaEr1vrj6i90UuZZGfDIhAkN1TLxhWN08lEnPabaHOs9
rPJ0P/ZbdTCyoMKSCT/PDvs8HaUTu/ver0qXMuG4/VoHQylpEnZ88cSN5bj/
MRv1mh90cslv+oJrtkwoD1pRvukJnbxY+M01exUTBg7+OvsR96OOPt6RsZYJ
H+6a3jiP/mtWeyU9xYEJVd2RF05qIb8So2sTnZlw9Van2jLkczwz8NsJVyby
S3dSGvrHfRMb1aPuTPgRHuLtS0N+/dOwOejJBG6gsq16HZ1oNowE7fFmwrSa
fT7yiNe61BfHd27C80m5PpuDfrObf+PW9i1M0Ey/a/ZphE7ylpx4K2Qw4VFY
U1T1NGnS+qRvqjeLCc9uZqVZ9NEJjbHaZhUH+z2P0HpQnybDaZL/+Ez4EquW
WY363nxkNF1NxITJ0uuObkO+HJnt0UjdinyYfWZR0V86KS7Mn/i2HfdfZhdm
jPh1rpExaQ9lwvzCu4yv3XQi38ZkPNjJhJw/H7znj9OJlbgivjCSCesuOksy
5aUJe5JaZeoeJuhvj9q7F/0iPil48HAUE5y7y+yWa0qTioUN2sEHmRAocZVS
wPN+rliwYcthJjR3ST2j4Fp1w4EDDkeZEP5a72u/Hs6HvW+KzOOYsC0j1XUh
fk8SuaRb6yQTcl+f5+mn0UmKwmmlKaeZkP5+4v1tfL/2Yv/qn4lMiA+QdrRr
pZMhS/vQzmQmWDr1yDtjvXOeZF56ksIE3zflCS+piHfA2IuSNCbILtv0p7+D
TsJ/eNEvZjCh8uc2mdeT0H9iblgcz8L9oqOq+mbi/D5LnhOejf049KeqEPNl
rIBzhpXDhNVGx2XP4v76ayprXa8hH2cy26rwvJ6ts0aWFjDhph9Flo7Po0Q7
FugVMeEUrW591hs6uSbV5K14C/ll5DfjFeqhNXHRkb+lTPA8vqBi4CX2c+Hh
st5y1Oenl1u1e+nEtKKzr6mCCS3SGxRenacTf3dr9QrCBEfJnrJ9qJ/YD0mO
V6uZQIbPH7BBvpZEDEQk1DJhUkqvcSp+v2uqc+7eR9hvuZUS7WI6Ubh4uZ1f
zwTD1N6CC9ivZZZSchsb0U/erRmMUZYmnMebrKEZ8aj7Ev3sM52c9r8lXNSC
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
flrPI/8Hl6UiUg==
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {0, Rational[216, 5]}}, {0, 
           216}}, {{{1.2, 0}, {0, 43.2}}, {0, 216}}]], 
        GeometricTransformationBox[{{{}, {}, 
           {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
            LineBox[CompressedData["
1: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
EeRv9qR22kxvLpy0fdb0VxTxyRF3HPHlgk2JrGw5E/Fx7ZvTvZcL5i9PSkii
X+jPrnz8Yh8XrJ8L8sS+UUjqvQuHKvZzwe6LuLEe6m+Kv9cgJ4QL5D89lckp
CqHL2Y6kHOSC9O3kOCM5Kql5qpp98jDe/6jk4th8KlE/MMU4EIF6k1lo3I3n
GLU3i7nHudC3wGVDA87P4daCV44nuXDn1W2FRHvk+/ip2E0xXDBUnrX3C+JZ
osu2XHca798g9lcG9SHfbzK97Czy3ZEbZRGG+CQuKpU6x4UW65ktIXaIj/l3
v+kLyJ+jmbfCWsRn9Jn61xQuDCY8dxpCvG5cufa+4yIXOl91hRvgvJ6981Dq
s0tcqA7fm2ftjPjMcHG4l8kFjSXKRQ8WID631865eZ0L76ZOvvr7k0L0vCQe
X7jJBU1rDVN1adTP3A/hx3O4sLlreN5hY9RP5QP9wHwuZIed3yCD+zbdN/kb
s5ALW7KmQnNlUT8KATd33uVC4p4YxeeEQtTqtzCglAsSks9y57mjfsJWLNa+
j3ho9DUEzEF8NP81K1Zy4dCRiZNLvlDIzva2mDmEC3PDt7SIDVHI3egii7/V
XLCc9yt7K+pZzih26tNjLiQ8MpM6hX5ycJBT0lbLhTMlh/xYQCXdSWZ+T59z
4d6cxzVXcT6bW8urlzRwob56lOWMfpz1a7TnWhMX3jcY/6feSiGzs+pTElu4
MH452ug8zkPfXVn2EW+4cEREUXQf6rORckTCv50L4fkPrWTuU4ju3d01Xu9Q
Ty4D7z6i3ySzdMLterjw2+1OfRruB39lJPVN+vD5vAbTbKzHs3pgeNUAF/xz
4zd4zUZ/8yc3Fn/CfrE6FFeF+agpp9LFh1C/yyskrqO/n2rcJz8xzIVfHcF1
3eh3w4e3NQ9858KrnYNKAZjPTu2VMa0/kY8/D+KNZuL8eX/ylugEF2Iiq37K
Iv4Z5z7Xrf2L/mW81fMWni2tt37ymkY/Td4Uxkc+hn7nzTo9kwctgluOGW0U
kpArpV5B4QHH90yW/FwqMfLyt/4sxoPHQ5MzWvDcM+8VV06CB2eNXQzm4ryM
qtGNsprLgzLjSJ+GDgr578CF64HzeND+LWdb/TsKadGYqMlcwINFBrL1H1Ev
oZ27+xsX8UAoumTp0BIqUT5TLvpvMQ+qGXGRywcppHajoup/SjwYWjittEEM
9fnzkLmbMg/o9kmCa8jPwhs9jOjlGB/21DtNU0jFbvOjpSt58M9Ktvs++g9r
zrXLHzR5QNUsD/BtRj6rqGS+Fg+y76zXu4N4F/jzujeu5cHVWymumqh35+V1
0366PFheEO736ROFTL/WVMow4AGYn2jt/f9+Fx1rUr+eB7+eHDfas5xKtmwY
dv9jwgO/TX/KliH+o8PbD6pv5MGKFTkSNjOoJOVKYZqTBQ8+JbbZm2I+4Di/
PNKaB9tDiguvY30DtKD2IlsesJeV/z7XQyFx917/7tnGA7XJXnNZjK/rYygv
tZMHC/7uCj58kULalVINTRx5YNzw0ST1BIUcbfrr7O3MA8GlFxvmF1KIeqTH
gRRXHnSVhRZYov+91K+68NSDB+Xl+98uxPm0/9OykjE6D65J8ndpYj0KFyNa
Vdl4/3vfw5VfKeSRXf/PnTweOIu+K5PF58KZVguOCHmw/9RNsQjEQ/ruDZ18
X8TTr0rFBfEv5Yo7dO7lQUiac/PoK9SzvHfA7EAesJhBS7PxTK2vP2t4gAcF
8dtsT2H83ENahdxQHhzN/HG1DfVmvza+8Vw4D+aXTdwX+0Mhv/u+f6s+wgNf
xdBJej6FXL7gIPX9GA8cThaUvkI9W20u1sJPP7icNhCX3E0hX//K2m07xQPL
ybMdCVjvufxg37A4HvQYBQTuxvuNGe2x2fE8EHU+zUlGPffO35D7JpEHmw2q
3qWjPk8+SX9OTeJB2nNoHKymEO2Qf591UnmgeqlWLh/9/PUqxmxmOg8kZQUS
gP13sKtaI/4y5stokVDHeKpnl29+cJUHQdZLLWSHKeTZpij+UBYPchbllsnM
o5K9vz6eWHyLB1K3ujadzKSQRdmbb9jk8WBdo6yHQReFPHDLebK/gAdvNQ/W
Hg2lEPZcyYFrd3hwNyxpz3PUg8TDPdRXJaiX6/pStBwKKdrXuHzmfR48Z7Ww
Q69TiIvaOgvtSh6kR527PLOTQv61JbI8CA/CSq+tVX9NITN09rjvesQDd7pZ
+Cj694w4m13bnvAgOqVvR30fhcz8qGJnWceD8/8qdSxQjyIbp6xM6lFPV+wf
zovHc9obM72XiG97aetO9DfRsULD/5p5IDaWsew0jUoo22PXrmjFfIwt718u
oBBKNldTsY0Hw+07d/oh31TRjaoLO3hwpfZFrDoV9ymPJQqSXTzIjwkyt0D/
o5WOLaC+Rz3UOmtHNlCI2LxGyak+HqRe9rTh4vyd5X2LNjbAA/tLjTvi/39+
HPlv6BMP/l5p2fJ//MSXek30D/EgY83zBSofsL9DjL53fuPBbQ+yeuFdxO/V
/M8tozwwNLsTXF5PwX17uLd+jAdHNr9iX23B84najpoJHjRRFss5PqUQyfeZ
LRV/sZ+Lei7FId5zjcNf3J1GfT9Y67YJ9T/3vPOT3Jl80FzcJeeFepH6trbq
GoUPuq4J/wqDsD82zym7KMaHef57JJwQT+mrAwXnZvNhYXCIcC/O33lTJDtW
kg/Gb25GPEB9yjinZUZK88E+6pXgEsaTKQxKOzifD1rKE1lC3PfnS+w4FyjL
ByLppOaA9SzgaMb5yPOhrHHV7LHzeK6iRLEV+PBsdLd+HvK5UL77kPtSPhxI
H5F/mkAhsvvuHXBU4QNLu9RsBPtJ9kXi3q0r+HAhpe1JyF/U48o9Agt1Pnyy
XqETeY1C5I7aMDes4sOvVVcrfLLw3KHipqvFh6SvK8zazlGIvN6Uw+q1fHB8
9+qbfCSFLD7zZutyXT7sVuyrC7iF50+FlgoGfHineruzCc9LNsWaLljPh6er
4E5HCoUopHMN5phgPS5LrFMwf4VxWEMBPpy6ECIdZEkhijuXaEya80FjrpKM
1lkKUcoZU/5pyQcxFXXjeux3JWrj4iEbPnBY5U6CUxSy1OvW/P4tfLinmxp0
fw+FLLsXOafTjg8LtkRuGUuiEOX5XtSWnXzYcP/mIdFYClHxNZp+7sgH1+UD
Cy624/np/PFHzny4Gp6XJIn9qao8/K3clQ9qkh2h2TgvlofVDt7x4IOc8v5r
Ktj/y1sz3+fQ+TB9REg5WkIhK7TD26+y+PBqMf1maTbuM9HOr9K4fNj+8IQm
XMJz39r6RAEflvve99mA82+lyZzHMT58OK4JkcII9OukgcpjfnwYSbPtisZ+
Vv9OSsIC8H2RREYG1qexJe32viA+qH9v0mffpBDN60E3vYP5ECA9tY6J+tf8
t/0KK4wP3ipOTQqlFLJqt2aq2yHU06TCLnPkXz0kIs3iKB+eM4xGvSoxn5T2
i/9F8kFmqPxdJc6T5ffWZcie4MM68qoqH/NTeXvq0r9oPqz9U7Od44h4/u69
PBiL+ZyQenoO9akob5zZdAb5VPLvC8X8FhslXr2fwAfRzdLD8eiHcru/XLt6
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
tGEXK+5iQMdDpY6jTpEDpbzuBHsGRiSjbwQ8Y5G/8q+kxB0YiBgcs7iDvw8+
ulk/xJGBf2TvFSPU76Tua5zfexj4j/oYYYL35WPGc8/7OjNw9LH3kjH0I9G8
0KqOvXje6B4lFWu8D0//MmjjyoDqvNiZdrIUmc7YLapxY6DHbhPP6wyLxDaT
7QYe6Been3IX1SCfdFSCizwZaF2jsEwa8UpMTchV9kY/GLK8Oh3nkZuYaE3z
YSAp8NWrWx9Y5KKbr4iMLwNGlUmPDU0ooljVrH6Sw4AE272hIpFF/lM22DvO
ZaDEV3bXvjkUWX46N9qPz8AR2ziHnDIWyfs+q6xPwMDW5+aZy2TQz22OfHRi
GDibamY90skihSV9Mk1C5PPkZ2rOoni/k9+5eas/A06txNnFkCIlR+4L7u9n
oKJc9K/XOxbZ8H75RY2DDMwsf2HYrIZ5aXSuJjsAz+v84Mf/+/im3NHh+YcY
eOWgG3cA918p4b30XBADcxWd6mNxXhO6wXrKYdz375FDif/nW5NuSPARBp4w
zdlleN/Zvi4r/8dRBv6c/PnixmsWaUiReu0VyoCjNOfDJdSPzfghsTdhDGRk
HdYiyM9Xrr1aVscRX5+p06NLWcTxsaV71Qn8vU2Eays+/92KsljdCAbejM+c
/xv9yi1a6UFhJPKv7bbX7JMs0jsQ0780ioE9VdFiixFfn51/ZVNPMbDt88ut
azqQb8XuxlKnGdDicN1m1bKIQK7O70QMA5lta9XK1yDfDutc/neGgZfrn5b/
3+8OdF2pE5xloPeItfIq/Px3y/TRnnMM6GMNasP8Usi7+yYwHvW9rylB3ppF
Ns/wvS+ZyMCnVsrRFP3E2182LSMJ+f2Ws84L541uqzqicx713h+plY96uaG/
f29tCgM39LXcJA6wSGvGEnC7wEDkdsuAV/UsMiLWqDh8kYFR289tyV9ZRJEf
woq+xEDo7a8bf+P90Khp9XvFywzYCJtns/gs4qvztuL2FcwfNUnvK8ivMxdP
ZZj9x8DD/9pr2NgfiqgNxzsyGdjpDhYc3Hebd5+HfzYDd1/fef7zAouMP080
mpqL+TKWFkBNp8gSDaNlaXkMDDX/6b2N96GtSYOia68x8HpmgU3xcRbhjV7+
WJ3PACsmZ2mQCEXOue54suc6A9k9UgsuI94lVeM5PwoZMDg/MdVnMkXeqOSf
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
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {0, Rational[216, 5]}}, {0, 
           216}}, {{{1.2, 0}, {0, 43.2}}, {0, 216}}]], 
        GeometricTransformationBox[{{{}, {}, 
           {RGBColor[0.690207, 0.188192, 0.376507], AbsoluteThickness[1.6], 
            Opacity[1.], LineBox[CompressedData["
1:eJwUV3c81e8XR9yJkKwysvfMXseemRfXJRpUFJLREFIyslcooyFJkTLSt/CE
KKSSlFGyoqyoaOH3/P66r/M65zznnPf7jM/dsS/ExZ+FiYlpjMrE9P/fWvd/
P+erBo2WRrsnAn3Z0WquYadz+gPj+dvbOY5heb1i72GR9E7jsTOcrHuxjMyy
fydXvjZuWdA6mIRlltqwJtb0d8b399Gbg7BsJu4WFxv6wZg3liYZheVW68vi
0ZVjxiPPZHc7YXk/U2q8XtGkcXEEbTAAy6yNpz+vpk0bN3GMGNph+UZIkHV9
7Ffj3LKec5ZYtpTxqTwWOm/8sVhU+//24SEyhAK1b8aWfI5FtT7syLxb9EFk
5ZLxv6dqb7mxnldG4JCbxHfjSPsfPapYnjzLJbiz6IcxA3Kd1rB93UdSF8/W
FeOJ/xzhO5bP6zFHLaWtGjeNnd0IwrL7xd8Krwi/jXdb2QUpYn/p5aWR6tg/
xvz36o/d382OVnZ9TUv79dc4Zv9a/kds33Fr3OhI6Jrx3V33dlVifT7b8KLt
13Xj0DGjcz7/j1cT8CpXjQk+b93J/RXriz5OybIuMMHaz55CMn4/nn1fXFgl
M9h/n0xfw/ojeh8Hxw+wwPKPzK/zWKYdYqi7SGyC02sdfrexbHBx4MKT0U3w
aZvoCzcsS7a7TKgWscL8e9/mCG92xL7cq3+FzgaCNKaRaCz/ELXL3byVANVr
kkYe2H5kV+dczGsCbPsgzvkf1j+NMrNYSCMCcklh78dy9a2W4t22JNDiKjWK
wfLFd/orPQQy3L5z+z4f9o9ha3QwaCPDlK7u/govdnRAY+fN27EU+HZ0lnUU
6x321mwIGVCBV/CA7U3sr5WhSL/wiwqFY29Wy7C9SFNFze86dtjXkLb/L4Md
EWYlyQGhHHDy6ZT1WayXVDr3ObSSGyT192VIYr2A+ZPsWyQekGSQDiV74vq8
NozGDvDA83Nv9j53Z0dMxwxnBZ7ygF3e400fPXC9SVH5ThJbQHX387p2Ojua
KX1olhS3BVq6rI1MsX6kYXWxZRTLu11VXbH86oVm0aohL7y8QOCoxe+1T4ZZ
qxTxAlMbKSke+zf+vffjwB9euJW11EbH8h2eb1dK6FuhS9zDWx37X5FT3jXQ
sBXMBv88dML6XDjym2MrH0hF/tpaiN9L8qi8YRHGB/VXvFw4sHw6eMY5+jXW
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
pq8rzBNoRwl0Ekp/8v3MuL8rnGTJ/ditR0Je11r+7jziCkNLebvdsSx7LiUy
8ZgrRHLJFsTIk9DP/R5LgydcIVWNw5bVnYRazSWOKMa6Qlz6NbfMIySUIbX4
Oea8K7CKuagtGeB9RXi093WKK6Tk14lQbElIbjphRCLbFXZ/DJ3eJUJCK50u
HpEFrsDBq6keKUZCbRUifc9KcHyJhc8i2D4z+av9thuu8OEDPXRajYR2BzZ0
Bt12ha4/bp4BuP/k7c6aonuucFfzGDV3nYhWFRyaeBpd4Xtwx7Wlf0TUzi6k
49/sCnl3hVu91ogoa37q/oN2V3DcRLa7I0BCPr33lCjdrqB1a4tigDkJKd6N
rvB+7Qqb5vx/nmLH9zjDRuLuO1cIGdUQdcXvn2ohOOd9cAX/xXKHrSx4vy+0
xURNuIKZryfFapGIokTi7uz94gr9URVX58kk9G+X0ZDVoiu8C0k7/p6ThKKj
/xKVf7rCJROCcRI3Ca3fadTk/esKzb4nvg1g/9iRiP1/mGgwrzNtQ8T8MbFr
ZH0i0EDm/gUlRV4SitP/1tzBTgNP94H5wwr4/h6umrvDQ4NUld2uD7eS0LlL
gUI5AjQoE1e4R8XxWLtkrE+K0EB7b0jkzjdEdP73ZISvJA0adNdPKON+Jchd
u24hT4M3oeu8SBbPJ933tYIqDQpDNy8X4H1EStq+wa1Fw/eYeEKemYSSHwwq
/tKnQdGBXfbFGF/K9EXGRxMaPI/RHDvJgb+/+GhJ7VY0+PV0Ws5JDt9bS+6G
yl00GBAsOd6J80+L6J3IdKWB6XLyRe8xIuK8kcJ93JMGQi8TvxjgfDP6rY13
+9LA6uWpd2okEuJiJQSZ+dPg4MYUnwPeH1kabZfkDtNA1cM1s+4rEfHsP/Ns
cygNxHb7/L7zhYhysg1XfkbSQHKB7de3P0TE2/pHYuQ0DY709nD3vCaivKUH
zq1naZCRsUoewfzy7YiIrUiigXBUbfitH0SU76RelZ5Og7srrLe8R4hI4Mzi
UHguDeoO8YmENBJR4d07JK9LGB+6u8VqAxEJjQZomVzB9i51FtbfiOgyp4yf
TDkNHtL64mnzRLTdaDKL4w6up7vg0I1fRFQcdLXl+z0aKPEcvHkG4y9S7DM/
+IAGFyIil9d4SKi0Z9s21ESDBwncJ8IxXmL/3luXt9GgfD3uZRAioqsKFyNT
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
HsH6R4fPFmayYGGjqfyPAKyft7On8zzu/yY0t0MX+dlvrvg2mwU6d01+TrFA
/9upmr26guvyl5kzl2CeqA16vLjKgvSDpolTkL+M7qdHn1xjwTz9iKBpyEd9
0dVrNQUs8Obly0qjvsfCo5rvFrPg3qQV77IQn/mbuf/KSlnwVKriwc8QOtk5
a41+8W0WxLXFxOlp0cmxr7McrlWw4Ny3tPFPtsjX7T8BV6pY4PeJbXommE4+
Rb1OP1/Ngvwvo56j2+lEbdvNmrQHLJjI1bP1nUon6+ac7Dv9CP1wUs/rjSPO
kx8+qifqWDCoE+xoeJxOsslGq+PPUD9az/dI7aSTpngD7pEG9Kv3mQ/GRpjH
HvTYsJcs0Fo3J6HDCu8H8zuLg16zIOC3Qd3EdOTvd+Ub/zYWeNg84rW208iJ
2lSaTzsLjnxL/PbpPzqpOr1vvqCDBaMKN0+qb6GTfo6LM+sDC+rvGSwzxH5n
LTEJcetBvlIPu8uzcV5IKV7c+oUFwi/ap+j4HPKs98nmPhbU+b4x+gF0cjW9
9seG7yxo603uqcN6beLsGTY/WOCz9bFjrBydyFgcWrvqFwuGme273TGPlk/y
FC8fZYGAe0pq2ULM8+YViUv+op81I5gGSXRy9uL0OwvGWXAjY8UyYSKdPPQb
6pxLYcOFgsrFB9zo5NfqBhkdOhv2R7lPnRlEJ3MUr5vMnMSGjVUa6//uoRPn
t8d3TJNlQ8+OiL1kKZ1EXBUcmqLAhvMpeT1PPOmkMMgmV0aJDTtuHzVdiP7q
sNVpoKmwYbpr+eifQ5hf08ZH/01jw4+3G8SUmXSy+kOb9qg6G7p8O9uW/6KR
XYW37H7MZMN805LJxYhn5sFTvn1a+Nxn07p3Dp08dfBL7tFhQ7aX1vlBxGds
piPpmMOGYl+Pcl866qt33uc2AzaMxd0vfob5sbNsklLzPDbUv7JrzUpBfUV2
mz9fyIa8yVuT5iD/ZS73vB4vZkN0fmGughrqSzcz6v5SNghvP/kv2wD1Nbj/
RqUZG1w/DlLOYH+2Va6vb1mw4aeo7NXwPxoJjDOdKLRiQ7JSdXUs5ku221SD
/NVsCHp+LNzOg05eGvU7Xl7LBs3xI5WeG+iENvpkb9Y6NuSW/c68Zo36engl
M9WODdsam4+O2qC+Th15eGoTG8DFyTgD8T/BZvXHO7LhcPC5UAvsp2rxKrVj
W9hQu26LgsUgjfSPz1h12IUNsrPXDJ8xRH09HeGFurLBwW5Yw/cZjdinvYzb
t5MN72J+yFsJ8H4sKizx82CDmalgoL6LRvLM49slTDb6I+n0p3Eaaan7rODK
YcPziTfDp2fgfYhpvWotnw10herraxCfxUMZuxaK2GAjESt6Y766R49mqnuz
QffdqEkn+iVa0/k5bTcb1iy2ZJla0snNgmsT/X7Ir3W9TTfqtcNm8uK2ADYk
qvR/d5SnE/lWNvPBPjbwfULKyCMaWe5TeaJgPxu2mlu+HhXhPKGo30sLZcOk
h1333fvQb6f9ByPD2XDboeG83W0aqTR6quN/mA1Pek9n+iM/vZUGTh6RbHB8
JfP6+zbkzykiwu4Y8kt2+l6ZRidre94WLY1lw3rVgdJ7szHP9pt/0Epgw9Hi
DCfOGI2kKiaqyCayIebEz471muiPC33Wv06xgahf3x2gRyc/zNYHdJxlwwcZ
qp0E9T+77nx2XSob2taWhvTgvLP3GntZmoF+6a1VKvlDI0E/tzEuZLGhcqnj
kCUD9RFVuCzuIhv6riQnPCI08mKmPD/oMhs4nf5OoYdpZOwG/wwnlw1uzns8
L9TTiKHNvYeO+Ww4V3vS/XAnjbi0zByxuMGGGeMZIymPaSTce6+BfhEbyqyq
ijNaaCRfqsFVqQSfA0+ZJrxGPk/Nj/57C/FeEj1khfXoRpFlPXfY4OLxJCQD
+TKp7PjcUIn6XNYmWn+NRjy3WGpUEsRLI6mmHPk//vH0hpz7bNAzUvTVfEkj
pcEDwUkPUa+J1Q0BTTTSpbDpathjNmh/73/05zeNKF641CaqZ8PBIqlob8zz
FWZSclufs2HyKC/+8xsa4T/ZaQmNbPDwqF1up4D3Q88SyfxmNqgcYFu4FNHI
3R9T0tVa0N9mYWviJtFJb6S4nvKGDTSfCs3guzSiNvPBWF87GxqFl8HgL41Y
35i9sKWDDep/Il4uRf58rfd73P/AhhX0T0YzEe/01y/jrvewYXewZ9kexOuR
xPhuyhfMk3/5abdTaWRo4lj/kT7U689+zW48n/apbi3f72x46lfoeO0C+sdw
9Wa3H2yY9f79J+1K5LMi5aDtL+Q3uWauOs7HS/8N3TAZZcOCgeOJN0tppLHb
sUPzLxtumGvfuIZ+GQ/KVZo8zob8wVPifdj/PAX6mp9SHFCr2qa7eQr+X573
9HtH40Duv69qY800ErHs9vnH0hyIP8CUqHfQyPXHKo03ZThwHOY3DCJ/bR67
qFnyHJh1LNdBDt+X/vFoScwUDow+X+KqUUcjSyL1OHuVOTCS2bREEf3gOSMs
iTWNA6aRN9hp6K/j11vu26tzoLvlq/vPPBq5tXbpkPlMDjgIHz4pRn3NbZsW
w9bigKX3y+huHxo54zeqE6fDATNnZv4ozjuGzJuyW3Nwv2RuzcU0GgnIqtzc
ZcABXWGqTSLmUbd5Vo/8fA40dAWEhqG+nJ9HhJov4oCEA5+6L9FINZ+nyjbh
wDnZ0sV09N+S8fV5saYcSB8IcCy8QSMXTs9be8ucA5B9x+Ii+nvqQoXWzhUc
iHhtG0nH9fCa77vlV3HgrdL5in7054Bbo7T5Gg4E9gu2w14aYf68mcGywf03
fP12COfB8+NnTWPXc6B9dls+q4FGVunuryvdyIH9bXOWlkYgvrfd2Z0OHHjw
4fy+vydpRGvL6t9yWzjAWnblEBffj/usc8LMhQObk1Qdh0bRnwfpBixXDkgz
7VR/Iz/e0z9VxuzE/XO2F39GPN5cf+xS6sGB8gKJujGub7TN/9rB5EBCsnrO
7vs0cqc9PkKOy4E0W61zw+k0YhTop2Em4EBiVIk/9xaNJMu7FDDFHNDe2C09
/wqNTM42Wx/jw4GKs4phF7/QyD5LjXclvhyYTnOrmz5MIz2NfwM69nCgPtV8
WOBKI9vE7+Tk9nHgUcLeol7UwwPKvQvL9nOguNFVPwbxM025aMEM5cDHrpP/
fUY/ZC+OfHE8HPnskr14FPFTfSQUlBxGfkz/+F3xpJHDXpvG30dif/SJgsSH
NPJjeOFp2eMcCLV/lPFsiEbY8UoLlsUhuR8+bRxE/zTo/6z2OsGB+Q+jezqi
aAQqm3ccT+IA5WbH6Z4kGilwKRu4eYYDS2jhZ3KjaWR2X2rU+xQOrCrr7frQ
SCPxh0O1ZDM4MFNTo87Bl0bGZzBLTLM48GT2tEt6XBrxKVpr73WRAyrpwitJ
eL63G/Q/HLvMgfxLJ19fQj/bd07afzMX34/5+XDxeRopD+pVep/Pgdiw55SV
yPc8padXZAo4UOVRN7AY+U29cmOVaTEHjsjm3UqNoRHZ1YnNnqXoh+rrnosK
aCT4VYD3sdvI7+DGlIvlNPLZx5V2s4IDXvqPRq3RP9sZK1LfVXHg9eibCjnk
szZd00TmPgfqst+KxZE0YmY6Ubv0IQd00qhvVmbSyOW6Tk/PxxzQqDX1L0M9
TOPU/Iqu54B/WDznPd4njvy5HFv8nAPGo53pNaiHoZPH9N41cuBbGD9GLptG
OEbedya/4kDWRveH5zEvG4njlqWtHLjiojInBPtZu93ks8dbxMNyne3RrzRS
+F3lYPR7Doh/rS7jr8B8ixqeVtzFgdbpgVsO+OM81WrNb//IAbfWkVdhmCc7
PUxnNX5G/x3yuWiMetZLT4h7+JUDm1Rn/EtxoJG+tt5/d/o5sPt5oGSoGOeB
hu2uG4McoPJS1x4+TiMHt59/d3GIAzEO4dRV+L3d2THH5BEOcEcadAZzaET5
lWtV7B8OODZ93nrwE/pFtdj40D8OFMY6/vdbgHp0VswKlOJC3NIg07OJeB9M
FCmJaVygbz8SFHqWRswbasI9pbmw5l36uj+xNCKlpD3oJMOFLweLTm2xoZEn
jiGs9fJc2HNgqP5GAI0kxb1qsJzChYyfa2Ur1GjEvd5k7WJlLsw+z3hUmYx5
JxdXNGcaF8xybhzbLKKRgQ2fdTXUuTDJwjgpFfe/HW2dpDCTCyV7BwS3JZjP
tZk0qhYXYjxve79FPu2l/+wZ1uYCyzlh69qtyOe6rd29elzEJ7H/ijuNvDtc
4PJ+LhdG97a5HwulkZxquQdNRlxQKfqV5RhHI34UwbJHC7hwxHvsssIhGlkB
1ZcqjLkwZUZ652Tkh35wllrhEi4Mb+2yp6GfnlYGRV5axoUd8S4+lRzM57Gm
4ZTlXLg+mPHstDfmn6WxIN6SC+Wrj6bMRjyM9h9/HbGKC27C66UqmL8/yj6u
37eGCw+lLpy4i/1WjECZxIYLbWLdtkAxjUSapRsy13Ph2Zu79a5WNLI5cCTZ
ZSMXrlxPKpTOpxH1m04yGxy4oO3n6GZ6EOf/j2vBK//jwqEjm/ZZHcP7pIlM
r4kzF9JVJvnn4/wI8OXunLuNCz38LWa7jDB/b1Q9mbGDC712+3/JoR8n9c+w
nOKO9c3O7biyG+9DC/bm0by4UDvrEovigv6UNMwcZXHB5AKfFon4cK4uiO3j
csF3EkO4C8+/4EvUWIeAC1KX4k2erKaRYYMP3s1iLijNt8hNxPNX8Ve1P/bh
gtaXTz13cP/oSykOd325IH9dh3EZ/eDUPVRZtIcL0SWDBx2caGSm3n+LruxF
fhID609r4zxj5WWmBXMhZ1tyoaMWzoss6SknDnDhRc7qADlHzOP3rINHDnJB
7xXXyyMM806r8ntQBBcctj0RzcE8kPVQZ/oc5UK4nNrgFOS/KW3PC1Y0F25/
NJnZhP5Ib3sG22K4kK1Q0R7+H96PNOYVboxHPnITV/7EvDPeflRn9UmsH742
pBj1O3qm4+TSU8jvH6FzkyHO02ZLquFZLjxawji6F/ePUT3rr5nKhVCKa/Br
fHZx/tGllMGFkDzfr7pMnG+JDs6MLC64h1zOap5NI59e5Nz/fYELv3OP6FbK
Y94ox6YuvMyFW4RqMVcP/bV1tx8rlwuTLS/7lE6jEYWzTnan81HfHyeKsmxp
ZEbrstmPb3BhRuMmv1mI39yZGsNjRVwojApfSEW8lnqM1S8u5YLE6eROI5xP
cO79Re5tLvxpYk/s3fD/vK7en1yB6zF3Vk3D+btd7/KW+ir0o0J9pQJ+z+Md
M5S6z4Uba5qdEpfSiP8V74mlD7nwt1xzeL0ujYR92fxK8JgL16bvvxq8AO83
85deS6vnwtniozlxi2nkrI/akefPuWDM/3Zn2hbMlxu/d9KauNBpFTq9dC7O
o8G3JuavuGA+Z7KhWx2VVCwlkyWtXLjwiXXczoNGHgdefJ/5lgsUA6m2WQY0
8upWZGnjey74r4zNGkG9dv0WxUl/4MJxRe4f6c9U0m/pwF3Rw4WwWW4fH9jT
yN/QxZa7vnChv/iEt9tUnOdERflCH+LFLnk/2E4lqtSRz83fke+YqS/8B6hE
26atSuYnF9R2askeQP8tjKw8s3IY87Bsxplr+zEfHmX5+P3mwnaNmJ1XH1CJ
rewRm0tjXHjjqihhsVDP9oKZrRNcUBdtrKlGfXvFb/whT+PBAuXuPyar8L7y
YuFjkOZB1hDFcQ0P77PKU7MCZHhgsdKpXuoRlRxxGdqbI8+DCqPZ9nX4/ckz
rx3eTuHB3JDTf++h3jJb7sxRUuHBu2kRb+59o5KrMzL/WqvxID087aqzMc4D
90ON+zR4cPnjTL16fP9+Jjc3T5MHlh/U3tgqo7871oe/n82Dq+/umGr+pZK3
uvNdVfR4MPvjx79LZuF85SouWj+XB8aRpHsd+vfX5UF6iBEPhCeufbUKpxHq
l5dvri/gQUuGwa87Gvi/Mb+sqMuYB8sXht/yUUU9+qQdU1vKg5uSH7OMJ6jE
4EYYc6MZDxR+5p/wOk0lpoMs8zALHvhHKhl+wXqwdJ1ikRUPYn6uMbk2BfUY
aPjx42oe3H16J5WrQiM7bslVaFjzYJqJgUubGfrzd3+igy0PdMMMbjydgXq0
bBQd2sCDgZHPe3eOUElYaAmU2PPgy1ZSu3Ih+rEqefqXzTzY6dv5zmecSpIp
B/o1nXkg8BgI+IH9ZVt7PfhvGw9ch7P+tF+lkoKja9OP7OBBdkBbTuQS/L+t
1d9T5s6Df0bDPa65VPJERmZjnxcPbpsXnm9Gf7za1KetzeHBU9fW97XYz4e4
5yPOfB48uNk233AyzrPnRc+iRPi9tdPzvJl4f5165lK5Nw/2KX8X6s2nERmX
4APfd/NAMqY4d5ICzmf3NjfVPTxw/BqqUPqdSjS5lpYWe3lwyzJh/Pgwlcz1
Tp/hGcwDm3d139fheRcH/PsdcYAHrUmK6Q+Q7xUHPFuvHOSBhu++sIAyKrE+
UlVWH8GDXGnTXEXUs32sdvLgUeTf7sNU6lsq2Xbq0D61Yzz4uC3KIxm/Z6Z3
bbOM5cGFaM0DQ3eoRJRtbcZM4MFDRanRCuTXPz972tFE5NtzcOThVyo5cJPx
K/c0D2pPZKWZUHF+VfBfPktGPlfWLm9FfBNqaot/pvFgdxhrXlca4l9vmKR+
DvV+xllo8IdKLrw85r/yAg/uT6q5aCWN/89ve7ewL/GAntNvsiSTSkq6N5lE
5SAeqw4MHUP+7/blK+Xn8eBe2c7mBtT7oyGFgRfXecA+5BAUdJZKGsd2Pf9V
yAOfDZob31xBfdNfXJ9RwoM4z7ey97qopEfeJH51GQ/kmhzOnH1HJd9VE324
5TzIXC2uVfOlklHNn/bH7mL9iUsFFpgHVH2XBdfv8eD7h/xdZxE/+YUlck01
PFj2M2axdROVqC1T+zpSy4NDN+6sT8A80V6574lmHQ8i8p3bvHA/o3UtuWue
8UDZSKFD/guVLHGwOMZv4EH45iDa1CEqsdqaKox5iX4NV90X0oZ54vF3fcFr
Hkjv2/FNFE0lm3nuBs1tPHi12MnVHfNgu0+l9J92HtRlMvoPf6QSdqBWj1Yn
5sUX8wFmPpV4hx58YN2N+eB2NvAC+inwaEe28BMPrMQnVwRiv2Fxa47E9fLg
8fDoFXE6lUSfvsAp+obnXf2vOhf5TMygWb8e4MGjpuUpK3E97RJXd+wnDyYM
gkeHGtAv1x5QdEaQj9rIELUAKrleMrdz3R8eWNvt+NHziUrKKqOI+B/6Jz02
3eMplVQ/+HwuQYoPup/WbaWhfuufbjh4k8aHo4q12aI9VNLcfNWzVZoPV6lL
8oaQ73ftcqvGZfjQklx/ySaOSj5/9J6lp8CHpH716tJaKvnx7enYeiU+TBcu
Ko7voZKxX4veeqvwgfvxEVdQQyXS4wnlJ9X4oGn85llLP5VMkR5MLdXgQ8Sm
jCT9MSpRV3Ta/0aTD6NeZtGj3lSiq1a8Q0ob18eU5R/HU8kCLVULfT0+5Ep9
X2OrSCPL5gaqb5zLB9P0o205t6hk1aJXI7uM+ABKO42+ob/szMxfJy3gw1bl
DLOTmMdOq5JLy4z58HxwtuKOe1TiZvv7dPsSPvxZOvfzUvQb13FnINWMD29p
z24E4Xl2bSt3MbDgwzqZnD9mOL8aGacV1Kz4kLVGvDkhmUqWlex6SF/Nh8GQ
eXrmhegfrt3Bn2v4YKvy4+DKo3h+Fd3lXTZ8mBPisHjzeyph3v878GI9H3ZJ
dpfPwuf7/s25VRv50HvbN0+A+8/VvcG+7oD7m/zZfxznzfGG6JkZ//HB+7ZJ
jvYunJ/h7Jcxzthv3uHrupiHWxZbxe3fxgcTvzlaYxFUcvP9NFvRDj7UfTNu
XYv8qyd8H3d158PCzc5U5XOYB6se37L14oMr4TjWYj51fLvgu4zNB4nmw9ab
r6jEJuOA0RweH9yO23lWYf0r9tu6lIV80Cg5ItW7nUpkx4zTKBI+3PyxKMc2
FvHJk3EZ8OHD3rSnmtKIR+POD/LvffmQsunZmtu3qcRMtvLB0z24/9GXXjY3
qST19pmwir18ONU24XQP8/ef0Nc8L5gPCX/WqK/C/GaqbxxIOcAHh53V4ZtQ
bzW1ernRB/lgUyAnmPecSgz3/WPti+DD8YM9ETd0qSRm7usZ/KN8KDGU0OiX
EZ/mgiaXaD4MGW4O9HyMfB89Hmsdg3oobYlmIH6lptx1S+L5MC11XM4P+9Ho
XjmufZIPMe7mJ38GIj5J029NOcUH54MzTKIOIT5rB3ePn+HDvjnvq6ER8fnx
xPBbCh98XXSqv2AeXjmf3fkmHc/LnP30fgjisyUs9ck5Pmxxn6WtkYf4SG13
vn2BD5t7cr89RT4ab5jI51ziQ5hcU9BGIerHS+7BmRw+sNfeXvznBOpH8WPo
0Tw+nC2wHY4MQv1U3jULuM6H0LmdJl0nER+f5O/sQj7MD5y90skF9aPpn7Pl
JurRNnnL6gzUT/0mFtzig5dn35qvKaifEP0ZxndQD5GPN7ngev+8icZZlXxQ
b7brv45+2tLWEiNP+CDYFjVZnoP6OVZk87eaD8/OUEK6Ma/VLWL/fXnAh7/X
VocOJyI+n3mlLY/4MNWAu+p1CZW8P7t6d20drocblV/dQCVr12sYlj7jA9Vm
wqhnC5VcHv7Rkd3AhwUBRNYpGPG5XJ+S9JIP165vUzZBPny2XnaKeM2Hxx6R
j+OPU8kLericXxvildLs9QX1ZnpzR41XOx+s7xQXLzqI+HCWhjp2YN7ckrHc
zaKSv8oKZis/YH6ZBXdn4/3Fs7qnf34PH2Zx61375mG++ZErM77w4ZeridND
5GeuTipTpo8PL6XeMgvw/eMv9miM9vOBofZk5xH0T/9Bh8aeQT58vjDXYGQu
4mNsENM8xIcGO1PV+djPaGf0VdooH3aHxsZfxf4zT/U+NvnLh4tsJbfDkVSy
br39F69xPpRdblHK8aGSvt/XJsdTBCCdcCN4pznmd/4Uwwq6AGpND9lGqFGJ
hZff+t5JAtjYp+vsaoJ6m9rEV5cTwHCsfsyTI1QSWWMaaasogIWMZ6psnJcL
9525FDBVAAv0RSeXOlPJS6PRmguqAuheNjlcjHzvf7uj+8V0AbwP2FcOa6hE
J6GcNjFDAJfGXuSuRv09WjNLb6GWANxUpsqdx/53DYWtddMRwJ6m+U9sk6hk
2pUO1rE5Alia/4tmORvv+zvWHrplIICGtEDSjnrjyGdnfZwngHYXJyc9zGfZ
KgZRWSQAkx1hsnXYT4Gf4P0aEwFoZ1XOdJhBJa5zHo/vNhVA/Npt1NVTqWT8
1TytTHMBJEirVm7CfrOPxa6sXyGAHd9F6845Uckmq373PysFMBIyvVoB8+pH
/+YDhmsEoJ9CY14poJKU84Vp22zw/bbau7MMqARcVMqPrBfAulvrDyetx/uD
dGBb0UYBMKZxfEoXUknc7Ve/OxwE8OWnZ910T9ST93KNKVsEcLtk8YOabVTS
ppW6fKUL1t/eWDVDQiWHGv66SlwFUOa+p/0jYN4c8diXslMADjpvpTZOppLn
ZlVnaj0EoDTZy/MZ8rP3i3bpL6YAzs3vcQvB/TXTI5r1uAKIU2DU3NyI/nTs
HtoiEMC/0NeGmkZUIqbYqoaLBXCh0eVkTyiVKN28svS6jwCsA6zWM5GvW3wZ
57e+AhB3uJC1xqhnDYm/bIAA1lQFpPRgHjDq608u3ycAgVR0NGU1leSHLSrk
7xfAq/aYnEp9zDuTEy9OhQrwvhI4J3wFlfz+MPi9OlwAV8If5D1CvrLOOE8Z
PCwA9nGD2a0jFGK7oWTR7CjEby71adUsKvn2V83R4bgA7JeNemuh/09dD/IJ
iUM9nGpyeYb9WbLaYnNPCEB3H084HfHtUrHKf50kAOedYVtatPG+8jCjjnFW
AP1T3XUMEV/j4InepakCUPbRn7x0EZW8ms+SZWcgHx8KdzychHnyrtroRJYA
siXzW41QH3on52y4e1EAUb8C/hJcf2IdKey7LIDo6vLS91jPd/hT1IyrApi5
pmXZHT0qmZ674Yrdtf+/PzJt5koqueuW93BvgQD/l1bbRC/Fea6o0JNdjPzK
qm2PXU4lcvd2MZpKBdB4bcyv8QaVFO15MYdyB/vbczX8ky2VbJ+7xMa4UgAf
WcUWNxDPiZYkjgfB9WnHDm7qoxCppbvct94XwPYE0aAm5p1UnN1Wh4cCePeq
NUyC+qB80nVc9xj9LNfzUoJ8U9f8s11Zj3h4SssfRP9Q016vXvZcAKptI748
HSqh/SpcvrBRALypdfQinGf0zbEm+s0C2Cy9gnlSE59z+fNmtQhgXtPEaDjq
iUFbozftjQAm3VXWvTZMIdIeMzUV3gnAIkvOR0cV71e3fqkyOgWgEnmGOV+D
SiZNfaHw74MANFQSB1QQj8mSq9K/egRwlttmaymPzw+OTPR9EcBr76ISZfST
zGyv0e4+ASwZZNpuw/1lgy0G334XgNWTj+9y/RC/JpXelz8E4KtE2+CM/Mgv
7O+q/yUAHMTTxYiXfNSjNzWjAvis0/vggDqVKHReeFnxVwDTrI7ZN02jEkXL
0Kc3xwXQYbTZ4hn2o3ja9WE+RQhVi6QjeZjHU76bVGXThfC02X1vuCP6Y4N8
WfokIZgesI3YaobPF3sKTskKIaasVlYL83PqP5IbqyCE5G2xz6OnU4mya9qF
I0pCON6Z4RsRjs+FgWkHVIQw46Tuppo/FKIi99+pADUhzJ63TEuxk0JUefPi
vDWE4BCV93hwM5WoVtEjuZpCoLMNe7j4/jSN92Hus/H7K2pPkz5TiNqe2/tc
dIVAOnWKTb7j89MkX3t9IVxv1+76iHhMN9glsjEUwrqPKXWTl+D8PGTHtpov
hOHpRf5PBilE/Y2um+kiIXyLSZJ78pFCNJb9c15gIoSBWxs63DD/ZyS8tp9j
KoSzMxZXbL1LITO+FK7TNBfCtfzzVtlzqGSmdewq1RVC0G7/un4x7q+ZwTeX
XymEY9t2M6f34PMILKaDELpjouY87KCQWVtmGo2tFcKj+qBdiv0UopX3S2do
nRCOdqtke8lQiRbjxYw+OyFwBgqeNtyikNleV1W6Nwkh33z2v1gG/i/dPiL/
1lEI6wd+JFYp4zxR8WK83CKECvum+9WEQnR9LMbrXIQQRNuxsawMn2tVRu67
CqFNZe7JJuRHT6f/e/lOIawSTlVNcKWSOSGPPhd7CEH8l2t0GvU3p/lCZx5T
CNsvLrwn/YhC9I1D2y5ykF8jc3MznD9zj7k2pfGFkCiXsdHfEp8/mNQniYRw
/sbIzk2XKMRgpfyDGG8hTO68096B+Bqe7ak8vBv18uJCo70U5vcgKQ3xF0K8
idmhjCEKMdqUdmNPoBD+Myh31kN+510KzJEECaHaqPdf7Gt8nth8nhMiBN5q
+vEVmEfzd8xLdQsTwvKQgN2uLVg/OCLN5hC+X35GehLeL+amtKUvPCKEqf3M
dLsPFDLn9pJMtSjkV6nAZNo/xKP1+LmJY4i/46WYvq8Uov27K+tzLOq75fG1
sd3Ij4blhYYEIYQMDpx9chX5tki6eCdRCH/aQxyCElAvO75mXzwtBK70wu3p
v1FvwdaXY5OFcC/y0Rkl1KNqStqVwDQhXHgebiN8SSHKt3/meGbi9+sKu77M
RD+1brq6/jzy+6q8H3Aey/++mLc4WwgjxjvTk+MpRFZjLF/jihBMwudp+mB+
TrZwuU69KgQLeqR8uxLmyY78G1/zhXCibG/zAcSLHkwvfHlDCEsUAtVqPlEI
NcW9qLJICNb0oRvJyL/U7ZvFl0uE8FLvmseKKxTyr0W+JKFMCLPGH2n9Rb3/
GeWWBpULQe3v3XPdiO+oeuUt1l0h3Jy3NZX7ikKGl0+7vfGeEAzO6ZhMR70P
bfe5s7QG8bu8U3zyB4X8CHpQrlkrhPqNKo96GihkIHlWJeMJPktWFZ9qo5D+
ssC7/fVC8Ezvt1DH/Pna8rTq9XMh6BtWlIkRv8+j+vdIoxBW2h8QW9dRSI96
WHVusxB25ThEfvlGId3LX91PbEF8dhamqWD+dW1f9CDkjRBCr20+cRb13hEU
+ZD7Tgh2O9OaDudQyLvkd7UOnUJgz0gT5AxQyNsys8dm3Yh3Ys70Cny/tSX+
yexPQti94H6FTSqFvBrtqZvci/ng15BzLpdCXqqvfjrYJ4T+cO/qKUcopHH5
2Wdt31EPO3tfLXhOIS+2f39+/wfyGzjd7RPq91nQ+ob8X4h/ycCQbgWF1Cef
azw9KoQ42NW4B/VX27K5WTAuhJmVu2eEvqCQmtErr/6jiMCuXqmAjnlXrS7V
YkEXgX1dq5Qs+ocs396qO0kE/xTiP0qj/u9uL2iTkxUBfUNbkzz2VxE0+e2Q
vAiIWnSv/zUKuZPMbG+fIoKHebc/tLdTSFlZ2buHyiLYcP1y2gHEr6RFqePG
NBFsuZD8WKaLQopGhZ3J6iIoHIkwSjtPIQXq97oOzRSB2K/0RfMdCrm+XKNb
rCWCg/Q7iqWYP/nb/T4664gg7mP7xOkSCrka9LjHao4IytQtyLabFHIlWeez
voEIMp5+MF5/lkKyy4K/KM4TQWLz5iUtiMeFlobekQUi+D3R3L8Y8zNr1Kiv
w1gEXxWOR92soZBM9Yhvj5eI4PWkg8tzMD/Tl7f1Fy0Tgbr5UP/RIgpJ2b5k
IG054iV1fPZXPH9biPL2GksR9DquCmrD+9iMcz+q+laJ4PvtzoUZ2RTiVt1o
MG2tCGKG9QwsmrDex6KEletEsLXnP9VmWwppn5w0wrPD8wcrfLJBv2kt2OMV
v0kEWvvfT3VbSSFem51rSx1FcEe7W4VTjf36LzV+v0UEemtuO+ujHzpPq5yd
tFWE+ZAYZRmMeXL757jxdlyPOOYcfZJCOG+b+NvdRCDzOeP96xTEY6L4Wbin
CIwvWiewkyjko+4ps1yWCGSb9OZuOk0hc20DMhu4uP4rf9IanA8CkYv0H4EI
vlEsIi/tpZCcWNNduhIRHDhoesY4lkK+3FB9tXGXCBRf+lWlo37nNQ2t3OMn
gvB9TMFzzCfJ8MtLaQEiuC2XF14jQv40ShRq9olgY+eBDssICvlmdTqwb78I
zHu7Bv/g+iJmYLtqmAikC2+0Tqfj/8fhretWHhLBf86to3KY1zcuL7vGOyKC
zPmnzt/HPBx4PG1afJQIpvkr7NdHvS7+9utA6XHUn/PLSmo9hfgpvep+F4d6
mogunheFeltaaj/ppAhyIqOi2dcp5Oe2MzeNT6EeN4WKg49RiOn+vZrbz4qg
QXD2+S5cD8zYdiQ8VQRT/lOMKML5U0rM+nIy8Pxhe2bFo/9GPqi5NGSJYGpv
i3IQ6mv5pJHy3xdFsHRdwuN9cygkeN5rPd0rIkhN6vdzikN/ONyK2XhVBGNR
ZsK8LxTy1/fsT/9rIhgQRS/ZUUghVqf2uaUVYH0BxTcK9XXgluv9+8Ui+LP3
3HYbPF9lm/n8vlIRHH40KUwoppDxf9OTVO9gvxd3VBWpUcgqndE/VpWIt5rZ
wwLM24M2LWweEcHd8yym8j70s6DsSdx9EbzdH5dXEUQhlJjkJaUPUe8exScd
LlDI2utBqe8eox4ZX5/421PI4Ybt1ElPRaAmUN7v14x5MbRcbPxCBBrDGyp/
+1AIQ12j0bVJBJPyCw7oYT+2lr8twl+JIH+MkjYbzxPl2Xo+p1UEC95p9l/E
9UeHbss0vBUBc/5U5mbMM5lLKX6/34ug56ch1ciZQjY+Cm7V+SAC2+6G5b8s
KSTm6441G3tE+P9PPaqD87BecUWu/xcRRKY5G3W5UojCkhlT0/rQL20kYIOA
Qhy3/gm6/10ETgyDaAXUf0JQW8fXH6jv4bOubejHF2l37FSHRdC56dGqHsyP
qVWpBVa/RRCsk7W7IZpCnLr2q/PGRFCju65eF/2RyHALj5sQgWFKX8kU1H+T
oeXnEqoYcoKP7X2H+tv1M8kohyGGhclet47j/pPv9olTJ4thTYy0bhrq72L0
uvxYOTEsdn6w5lAy8uOc+S1MUQwZrPCBFqzXOmtkkd9UMVSsmDuYZUchAZ83
+3JUxdD7vvhLlR+FTCnOKdw6XQwzGjim6fcw70IpP9fPEINVkfGLc9YUss5u
p+mKWWKYZzljRhQL549yceACbTF8HK5voZ2gkJB2uVtaemIIb6nIWyTB+0EO
d1Rprhj+1hrrG+H8LfSvtKAZieGay+/c0l0UYr9SLeTXfDFMPng7bzn6t2fS
7opPi8SwPD9t7NhyCjnUWPuv1UQMVVMrpIY8/3+/1F5dbyqG2hJ97QU70B+C
4PC75mLws/G6KYf63bKk8V7BCjH8FzaYFoF50Tc2j3ZxpRicF86fOTcd9VF7
2OY0iGG/dKh/zTrMr8S3R6OsxXAqOqWpHvOg0n1ZbbCtGD5UDFQpraGQ7Qbx
k703iOFhVOzc4p3o38GeDZ72YhjcHfuXU0wh8RWrY/7bLIZGadc9DqhPo6jk
+rVOYmif7z/cnoX63TKosGyrGKLGshRb+Jivmhs3G2wXw6aVzSmfTPD+0XPh
hIabGAoT6g6nrqWQU4V/G+Q8xSCT/osepE8hxgdcVMaZYnhqVCVqQb6e2F5z
GeCIYdfsPYfyHCiEO1X6TBcf6x+bSb5vp5CJN56vX4rEcGRpWfgw4pN6+ZZ6
rbcYEpoyv0rNppBlfko7b+8WQ+e7sr3eiO8LS1Fanr8YmN+7Qj96YH5KV7/N
CBRD2dRsPbkM/J9rmKF1IkgMx+yFqp+w3vm0PV4RIWKY4OqwDPUwP/j1WQFh
Yhi7yz29CPXzerF+F/+QGPgWK/00t1CI/99QvR1HkJ/tKuE/jNE/D19xN0WJ
QffrW8UwK8z3E8aXVx4Xg9ZImdEq1Ndat+hPxnFiePT8kPN+zK92/U5D3RNi
ULBf93f6fAoJGrAQqyaJIXZvyv176G/l8sQ86TNiCF5zsoWHeXrt6Ne+0WQx
/P41GhiFfrf7z2bR1zQx3LinueK1GYV8mJGxuz1TDDfPSnct2EghYR9/FTw/
L4aAM2eO2AXg/0+B44972Vjv6Iulzrh+c/+VpTev4LrChqkj6O/N66QCL1/F
/Z9u035vSCG9U3aUJl8Tw2wlaUvxMgo52lY4crxADH3b9iRNMsL79SVZi9Bi
MfzLvxPaifoq383Zv7tUDG+ujc1Q41HIthUV5azbYngfYeHbponzhT7tn3OF
GLa2P5zlycQ8eu6zyrZKDH+ojWs8PksRcYZjz75qMazqO9I/H/PSTmIcn/sA
8+DFL+/9yOdcCyWzN4+w/vTgPCkZvB9PGmyXr8f1fZRdsjgful42HF31HPsX
v1D/thnz+ULRQt9GxMO6ZOPLbXgf8U1qPt8shgMyKVPZyMeBVQGhTS3Y/1my
2J5DITvlt+oz3ophakdncthqnD9ty56avRfDqGDfDFf7//tdLVDYhXo+TxSX
B1LIUOCIZupHMejbl9xPmJAijdYtNXWfxWD3pis2DfOrYOpt739fxXCoQEx9
hnqOf5+iavxdDAveC230UW/e1/ZXMH+I4bmq6dCScMzrEDdu4i/09+SevRH+
+P+zwUq+ZhT1lCBrkKyIep0+6+avv2I43Jmqw0I/dXf/czOYEMO5rq1LepDP
6qJ3tB1UCSin5B14hftlhVflHWdIYH1YpVavEPXgmOVcMRmfrZYc+o74u2se
+vtNTgKWgnRmqxSFrOhlXZw9RQJ7lVJrVDEP1MvWbtqiLIHQ+vLg5hX4v3BU
72fENAkkrgh3OsLA+7QzPe2mugS+TCyoHMC8K9L5uLZnpgTatyUvDsb71onv
D3qnz5bARv1Xb82w/12VlxM36Eog03FpoB3q2SEmakWIPu43fOt6hzaFLNgh
7Mo3lMD838d/9+H+sgYbjr+bLwGx9dotk2bi/8SQ0RIlYwkYeT7OlJ1EIQ+r
ZdvWLJFA1OQVf78txvvYia+H9iyTQKnz8+C776VIhGe90aXlEmDBnbFKLQph
LrjW8MpSAjMn3eOMLsL58ScuePJqCThq9qn2YV5pPtqls2It7u/5+n7jXMyv
05sfS9ZJIP9YyX2VaRTSwlnsl2EngVarywaLTTGfTaZqPN+E58kPSH6C/Z+a
GCRSmyWgdzvoW1myFPF/2ihc4iQBu2lLX8mg/v9LK1bibpXASbmeJ6JOKbJI
dKrs9HYJzE1qP/WvW4rImwcya90kUNKiNfONAvqPvm3yb08J7FMd0n+LeD5q
NCuYx8b+avQnLUF+L2dN3+7Ok4DfoshdjUSKHNk1OhEnlMA91ZGz579KEbZV
65UqiQSuLr9CXzKFQkD2zubBXRJo+6ybb4zn1WpJHdH1l8C475t9Vo1SZOxS
yDmXQAnQU2iV8jS8j+9xXx8ZJAEP08NJsx3x/2PNyu+3QiQwZDXTzeeLFDkz
RevslzDk77DSOj8DnLft46tmRkggZVb5CiW8Pznlve+xPyoB8zcnzV2l8T4Z
TOLDoiVQ9I777poyzuP1580KYiRQd7zF88ZfKWJX8edWXrwEarOy7ZnvpEi4
iYvFlZMSeK8uzy/7LkXKLl+7c+GUBBLG9tgb0zFPZk6yyjwrgUO6e6Lj8H3D
k8zKlFQJ7CjZMxkwD5nSd1adzpBAqrUqVxX7TQ5RISeyJOCTLxi9uwnnw4D3
mtiLEkg3Gcl0GpMik/kPq6MuS+CczNDH8WdSBN7MtjmcKwGlYwajMh+kSNB/
wQ/C8iXwYepF+zLUc8GDRtv9NxBvWnnxJZwXn1cseBRYJIEZ06e+LqdgPhYc
3eBXIoHqX/XO8Qdx3uq/f+JdJoGwmm2cSbjfidTl9sJyCTjL/FdQi/eNR1MS
n3LuSqBDmpN7SBX/749+dfS697+Oqzueqv//XyqRkSJEij5kJ4q09GpYLRlR
iSijcsc5l9KQpKWMqJCSorJKESHK+4bQEhlF9kpUGqThnvt7fX9/3sc595zX
+zlfxx+UAy89m4z6s/i7tnZ7hT/0ZlfP70M/ULxkB5cqf3Cc9aDFdC32Te/Y
W4cX/lB7YJ53OOLbuc3BeeNrf9j5JqvVK58lUHmT1Whb6w+84rt7zyigHtdO
dF1b7w+y/E5SoiomCH/k/n5lkz/c3NXyyuIbSyCYX7htWbM/ZMT6BSxGv/++
Kf/BvNUftsSHB/u9ZwkWzNy3w7QD5483cKh8zRLsiS5vM+rG/yt7UXORnxsT
1Hfq9fnDmEyKvQHy//7ggU6tAX8gEVAdmscSyH9946Ux5A9vd0ZuTUJ92u7W
61H76g9udn42C14i/+/DvJW/o/4iZOYaFSH/G1v7po9gnkT9OGOL+v5WZuYn
N+YP30pOVy+uRP4tzg9I/fWH/nNBD+7gdc/sgb2ThP5wY6AwelMj8j939RCL
xYa8zxy/tgcsQW3CVfa4OBsW9hx0qXyB/MuOfhmbxIYRszrVkWbkP2wT76ck
G6yXlBi//Yj8j6V/+yrNhh/rI3M/I545bDH+oBwbzp5vqTiN+A90bf/ZN40N
ExV3XBR8YAk0XPMDuxTx/+YTekJOsgRbX8n+alVmw9Ebv7SWSmI+rvILeq/K
BoWP53SvFrAE1QWC3/XqbJh3TfHqG5yXZah6+I0GG3R2xKY/Qv1bpAT8e/Ef
GzR6rCI2ox4opdfBlfPYsDtyGXvGKZYgI2Ie81SPDSXv7Ek2ztvJCj32xJAN
YkUTMuXeIf8HmlmPjNkwOH93+mfsz81DpmH5pmzIVf+brIP4h3tGTsgxw/mC
VmeNliH/jX0n71iwwepnjtnsvyzB73UrJdKXsSFqMOeT91fkX3D5TKolG/aK
ZXd8VRYT7DH7IZm8CvGrCjrINUX+s9afS1zLht+/Y9wcEM/3c25Lx9ng+3dU
d2UyyH8cExmzjg0Sd1WdLqL+rGoblY5uxOuL4/z7UG+HpbNv7N3Mho7rUisU
EO/71if1XZzYmG96ntNqWYLe4275q13YoLR3chXBvJ75xNTSeBue/5hatuxz
lmDTb6lqtR1sgKq7JbWYDycWdjlI7mTDxVojJhqfX8Qt+jDixYbonyqDzAWW
4EvmeZ8ubzZU/nDneeHz5/b5Dr/2Y8O6tKzdNPrFVcPyUPE+Nmydp1iedosl
iHSbMSGdw4YFHvMWFCOfT+M/R16k2NC6gvX2WilL8KuuXCk0AK9fdrf2a2MJ
DGWv3mAfYMPXVRt8XREPL1u+/rZDbHBessCkD7+/4k/Y5VsFIx62zgPj8vh9
VqphaXqMDV4VlxtcUZ9if8eqZoex4UngQ/nDOSyBudkbB+lTbJhrJ27kNcoS
+FNpH8bOsOFIheuebeiXG3eO+vSeY4Po9FT+V/zd2O88XBvFhnNrnnkl4r41
Za7hoScxbOiz/3c6+x5LsNJ9woSsi2yY8GpMpxzxCLzcEhkfz4YCl+ltyr9Y
gsz6XKUTiWxY1Xp3LB77tV3u7A1eEhtMBZH9RTi/wjpP/R3X2WD8djAuOBDz
/NTifNtUNoxbfNZsvMgSHBXIWZrdRnwbfm6a+oglePCvr0ozgw2H7L1ja3D+
j+ZPHOTusCG2oi1Y4hxLMIt/6cPfbDYsWX2gWrabJXDI9vf5mIP62imjxG5i
CU4PrB6uz0O/FMZOPYB5XfKf6iFBARvm1ItTjq2YDx7fxbMfseFz9RzHe5iH
865URyY+ZsNAcOnf05ivbo3XlU4TNny5u74gB/GJkQ+6wS9jg8yGSf/mYf9V
rt+kv/MZG0x8Iu704vV/p7Xz11ezwajgx/P/3qD+y8ZXWLxkw/ZWhQV+uP/5
COurtGpQjzsWVlW/YgmuWNxxmFaHeDZNaqTSWYI3AWEfhPVseHd/iZEb9v3E
+9t8Bpvw/68G1Taj35YMLhhuamZDYUHSi+HbLAFXW/JQeSvyr1+0/nECS3DT
s0M8pwPxE77sP1iHfrpaEJnUzYbn42qOL1Avsu+ilM724fPEbJa2Yx+tnu5z
Y/8AG8pvRvAp5Cto43L9XUN43Vf82bRcluBuuEL+pq9sEEzaqk1Q313lgyuW
fWfDf/1qS5krLIGS6GmVzggbVoar/jrfxxKsX5rooDjGhv5F29rScJ7Q/dQH
1l82tItRpbeRn4c5Nj5fxtnwfU+C+Fz0x+DQ7OFmET5vRjYjMYJ5qPPrYKU4
B+pfax2sjGIJtux6LZ43iQNtGU/vpVazBDU3DH+2S3JAa6/zhDF8v3VHRM8U
GQ5s/CB5oA/zulR9qN58KgeSNpv0HUf+zXesq9g1nQO5lkk6ZrEswb0rmfnR
MzjgVuC3YqyeJZjXLHm7WIUDmpVTuv0OsQTJynvi+tU4cJuVG9SD+lB2qTo1
fQ4H7qg0qPbj+2MuzTtgOZcDUbKnqBe4D0nWn/Ldp82BPbqf05ORj9BpfS7x
uhw4fuucc2Um5qH9WpsyAw4o5VmYp5xmCajom4u/zufActOIT0/weQOvxHVV
TTnQMM03JhH7zlN6l4q1GQcm2u5//+gZS9Bs91SSb8EBgfHB769OsASO4Rp/
ri3jgFpm4qDxDZbgReWxT88tOXDg2Pit/+ln9aSO5tFViN+ykBdDPJageI3l
C00rDiyVGMmub2AJTMOuFW+05YDL1stfLiK/WYLxrEPrOVBmI0lmJmGeidyu
3t7EgaHGkP7X91mCqytKIuocOPDrptP0hnCWQDFYNVjozAFn6K7f7IL5VnyI
rbcV75/vMjkzG/X65/2OLW4cmBXqWFOCfR682GLjcQ8ObPtlf/4S9svI/oQV
2V543svN1/9GsgTs/F9Gzd4cMKYqivrOYF7/2DJ70h7kT4xLLbzKEribPJQz
8efA+dNWwTOTWYImnqJoB5cDAXVL4ur5mN/3AobDaQ4objdrLqNZgsrPbzvy
AznQfNM1rfAoS2BpYFrbGcSB4Lt6jYrIR8HeWIHMEQ5sOff9bUc57tcZ33Is
Qjhgr+8DxymWIK3fPsX7OAfm9ex+/xX1OUf7fmzMSfwd/+RfHeJxebdc2OMz
HNCXdH9hdBj7KZXDHzjHgewbo+KDeD2889UuxWgOOKUe4Cbhfs+aY+gEsRz4
mz7j+59juB+4R6xhX+JAjnCf0rVQzJ+rgwsvJ3Dg0IXQonbMsz0tdloVVziw
I9kyVHorS9Clkqn47RoHYh+nd/4vH7e7Sk6alcKBdFsLc/d4/J6M8xu1uYX8
re3bZ7qLJVjXUNkXkM6B/AdxvTO3swRl0+c1Xc/igO+E263GiPdSh1OVL7M5
8GxF7zFP9NeD870FYzkciNGOvSTrzRLo16xJ/y8f9aPvmpy2A/NE5maCfSEH
hld63nlthXm7Xjz8SDEHHvNOuzqsYgkunfU6mP4E9a58VmMA+1emWrCnXsCB
ZXM9p5m54feGhMY2UTkHpv1JITXn8fth7TE7gyoOrIkymuehj/1xon2J6wsO
qDsx/43sZgk+P12hf+I1B/p8+LwR3Fd8WNdU79dy4OThxWwW+tuiP7D3Vj0H
tGfKKNqjXqe82nDvShO+Pz4v5C7qoTVX62BMMwckijXtoo+g3xPGV51uRf7t
xr2GcZ7Qow3SwR0csFuf8L4V+XLcfbeR7ubAvsC6sNR1LIGW3cnrfn0cWOJe
39F8Cft5/o697gMcmO+a8jR4L+5fiosWOg1x4KLsA8siwPz+Ky20/cqBGVFL
yHH0L7uzp9LyOweu73Y/OID9uLKyJGbRCPKvbf35cABLMP3uxe36YxwIoucL
3YNR77H+Whp/8X5tG6PnOH9B0JqvM4TopwVGYg2o93B3tSJpFhfUVlA91quR
/zU/j4tN4ILcw/Vz727BfUHv5fqxSVzYkjc/fJkzS8DI3ZzxRZILOgUKLisx
H+tGDnd0S3NhyDak6/wGluBWi2PmezkunK9rmlGK/XtAoB9QM40L/xodffbj
/mCbJr6iQpELIh/yu2g5S6Aa2SJRrMwFqm5UwXIb8kM/qL2vygUlqQ8BDshf
qeu5K7fVubCf3jJHH88Ts2KX91UNLqgv2BmxyoEl2P3f0vmx/3Eh13TmIwV/
zGOp6b9Pz+OC3sKW8u24/0gOf3oarMcFjem6LbK4/7Y0PI3gG3IhKG9zhiXm
5d3ixC17jLnwhl0276EcSxByg57jYcoFWXMxv6V2LMHm03afnMy4EGtS/TXG
AvOLrZlnZ4Hz5Fy4uh6fN+rwJ3jlMi68PbGnRwH1XL24ztrMkgtPnxqVmO9D
/tQz5Q1WccF2M4l4iH5kTzjeorGWC0+KJsJU9I/lp623lGy44KHk2ZPojn5/
s4Ars44L3+fcfHJ1KUvQnS9pIb6RCyevRHrpebAE+Vc6xX7bc+HUcrFsj0W4
f4QWvfziyAVLvWk3kzC/t/rGxPVs4YLgdjy1DvHT37BnZ/NWLnyUORKjjO8b
NwG9N25cCFiTmx/pifuAssrPCg/ks7fe84IPS5AqHH5c7IXPv/6g2xTzKrCn
6nSON+K5bcN9M8w76+fXN6f5cUErgG1VhedXuR+kmrSPC2vbC18pIj+Dl+x7
YzlcqDDJSHFH/zw+rHPvDMUFA/aje7INIhLtKQo6GsCFa9fz1Lcivp7W71YF
HODCvSdf79vj97Gp4X3pvYe4cGPo7cn3qP+J0880egTj+Zz/5Gmh3pvGPK47
H+NCaULwJzHEI7PNfO+6MC7Mm+H7LkmLJQgul1sIp7gwc2pU9TF5zO/M/nGz
cC5kGY55xuP7NM6XVhpEcOGDZsCK5ZjnPwLjYzSjubDn7AnDg+tRLx6/BC6x
XHA4uPIjF/lQt3H5HnGJC8kVRgdmqeF8Cwo0nyZwoUi8fKJ0DOp5ppLjrytc
OMH525mAeHuIHwgzSOaCk9fze+YmLEHAUOMDzxQurDBd8TPvj4iEN5j1xN1C
P0n4ci0Qv+QncQov07kw+9LaI9cw//LTRtew7nChePCi6QD67fn5LYFm97jg
Jrejpwb5aD/48Na+XPSTZ49NDc474jWj8Xo+F8ZL9N/mYr9Jrd8/qbGQC/Fl
Cr2rcB+ZvajRbEoJFy7MmKb9CPNpkbqZ78pSLtwK2WkvWssS2EnExQc+5ULD
TINgHu4nHsMjlZkViLf9pTMLu0Uk8L3zWHsVF+Z4jdhonWUJzj7N11F8yYXQ
Q/vVrdEvyVmKW+1quDAo8K7d7IrzXwwMD6njwg9r2307ZuL8wQ1FeQ2on8Hc
+mLkp91n0aeBd1xwD6lw0ce+H9l0aebsD1zop3K4eZqYtxYjdk7tXFA1CLuc
gP00R9P5cHgXnuf705D9yPeiKflZT3q5sI4/f7Iu4rnup8KHHx+5sGP6vt+T
kR/P1gBp3SEu3PErNf2kyhLsf1a/zP0rF2bIMTePop7O3VvIvvCdCwcqa78u
RT3eSLiYVDXChd+BIyZvJDAfQ3++Gh/jgvjkDx1ztFmCl3udhCb/uACeA9dq
Eb9OxzwjP4YLKV/2bdt3DfN7mYJHkhgP6lMDjH0EIiKtHRBdN5EHk23bejOx
7zTk6kslJHkw5srSuIx4mY+ZDi+T5sGoqdj14Acisr7zwhxajgfmTvvvHMB8
8Xz+wz5tGg/6Fe+/ppCPAw8cQz8o8iB71gPVIzh/xNUHOfIqPCiWkdIrMMTv
q5PTu6zUeJDufTNxogzOz+FPOzKbB9Hbz5T3Yp6/dHm7KkeTB1sE/728JYnz
rzTl92nxgCv5bPTDZpxf90Kqqi4Pv4dvynExv2Wm/3hrb8CD2XfWW3VbswSa
/xwmnJrPgw1JZ+4xs3D+3tyFxSY8sHTtklw0lSXY8Hqa9/AiHuzSeqvPk2UJ
dhXQl7QsePD37FhvEN4fdL2uYtsyHpye3y2WjvNGhpuMRlvyoHmle8Yo9nsq
HatdsYoHx/gxWk1LWIKi7d+3/FnLgxkO+fwm9NPrNQ6n59vyYPHaxO6zipiH
hrkFu9fzYIIkx0gB3/d7xrSPlzfxYPyV47DmOxGRFVHKNQ48iBjcRHng++cO
1NpM2MKDic//k70+Gfu9bsFBi608cN7ww27TqIhsLI7J4Ljx4PmvhQUXlyH+
e7ldFz14sNHkwlBhj4jwVTaoFnvxoGrhk+apc3HfqNJz6vRGfGLyWsPx+fEH
JkdK7OEBuS05lDOdJcjQ7qsw9OfByEanNYJaESlpKBM6cnlQpzBrbRHqs+bE
DfNDNA9+n7eX9skRkU7TEN71QB6Et56DB+iPH11uGc+CeFAdw+t+eFlEJsUu
6Ro6zAP+XK8F0qh/FVBWnR7CA2nJrMUVeF794RFHi+M86Hrxpu0EiyVYnvw2
wuMkD9aUr8vMtGQJ7DfmVJw8wwPXle0efTbIz3iUMOscD5x+J3o5imG+3/E3
r4viASf58/VN/2GfbLfjjcWgXm+/Dp2C/kuU0slQv8SDWt+s6VeMsS+LJnat
SeDBCs0+1Y3NIlLq1z1z3xUeZEr9o6iTIlKrJHCMuYZ6Puj8r+aniHQ/uxZR
cIMH2+ne1tIhERkJPFLRepMHK8PeFG1GPU7W2iYUT+dBis/3+5IdIqJab26u
l8WDeYN5SUG6uH+EKfLss3mQ7DrUsxLvtzT5kb4/B/EzudhZqIT93Pmm82oe
Dw6IGuxSDfB857NnlhXw4GHk5dPvTNH/lhGOA494oNTQkzWIegr/sidC7gkP
5IIykw2RrytJ1hWLBDxQqTSdvL5URO6u1xJuL+eB1qvn5v/w/eSvmPnxSh64
tK0sdMe8fJvZwU1/jufbX/gnVhz3q61P0l+/4oHb4T3W37Bff02+2vnzDQ/0
ykzcU6UxjwsPzlSt5wEEq0g9Rz3M8nVxhCYeiGulSTOI//wZiyJ8m3mgPUXa
eGq5iEDFtIrIVh6kxqhaWmL/OwUMjz/o4EHFcanh0X8i4jv3tVlzNw88tTOe
s6Rw36/L4or68DwhqRpr0I/nQsPTtT/xYJnY6E0e7qdJxr6d6z/zwMv4+X0j
1Pu99jUz+cPoJ3Hf6vzXIvI0StPx8g/k/1ppkN13EWlYLjpXOsoDNZsL2lWo
v/6h1vLe3/i+eMEErzER+X2leHzKOOZT7ROPZ39FZMq6y2YmIh78fLXki8UC
liB6fGmhgRgFD6RSF63B/FdpyKwvFadAds9Bh9mIX8odlW8OEyn46J1S/W4i
7icnzsj0TaJgkematxfRH3nbf+kenExBqrLSdZWtIrLc1MdKWooC32WPG4bs
RKRSqsEreQoFrsd9jsVjPtt3rQ4xkaHg2p0qWbN2EXlflHulQpYCsupMWs8r
EdkVo1HoOpWC5yEJvwKfisiQ3/n6QXkKQjQPSMli/gauZIaPTqdAr8058uMz
Ecnap/dnVIECXlL63uFb6M84Z3HuDAoOOb9+0Yb5ofT0mHS/EgWqRwdOzsb+
2Pg5S9FDhYLfQ2ZV8kUiclK5Sb1pJgXyVbGxpshH8WoxnU1qFMSf3KTuMV1E
vnEMF1TOosD441Sh0TyWYF6i6xLL2RR4+swJ1GkRkR0VYasL5lDwd1WYXehv
EbkwnL1+viYFJqad/t6tIlKt2uycNpeCY+pH9quhHxiriR6ztShwyf/4sHmb
iCyijf3itSkI0zMK24H7z76k7ZScDp5vjUd36V3su6pTh07rUnB+2zF67hkR
efcjJ4zRo6Ay0SpXOU5E5Ga3RhwwoEBjm23nQJWIrLWbHPfVkIIFXcmyW6+I
yOFA02Tf+Yj3pPExJS8Rybnunt5uTMEjH1Ve53vUy4vwHBcTCthJrse6v6De
f+U9qjGlQKByNEy+V0QcNTvKrBdRcC5k8p5FQtyHNkx5VWqG7y/6NJ+D+VUa
ZNZovpiCJdpL7iRuwLxI9Wy/Z4H6+BNtqkow72oiPs5bSsHFC/M28RBvrz8F
35KXod5G7xfNjheRy1rdf5RWUHB9ff+On9oiUmMvO+G8JQXtfzizlvuLyMQj
FjKTgYLlfw4UrU8RkaVpu2ccW0VB78uKaoM2EaHqomePrUZ+4z3Cf34QkbTx
Rzq8tRQspTWM/03B7z+dvgUfrShYt26naZyviCg4yS/daUOB8sUuiZjnuI+E
LFvzzpYC3aUdBafw/6GZvhvs11FgXzDlzKtfIlLQELulav3/8FFOLsY++yx6
7LFyIwWLpdbnPcoUkbkGA36FmyiIvPPs1y2+iGx1UaCNN1PgsWFxIK2A+/Nx
y8PpDhSEL1DwiEU/PLu798QcJwp2SEnK26K+x99dikxwpkBH6nfWBMwX0wmC
uKkuFOxt6SyzzBWRPfOHks+4UnD7+/5djygRSd6mlCHaSkHfosH3IQno/5Or
coO2UzDf+mqN1CTcx3LYxcNuFAQX7M79ZI759CGh3M+dgp5NC4z1cd8Ikih/
1eGB+Dn3PNiJ+N8z+dro6knB6Ga/lIIgEendMbPjjRcF1V0b7DswD1XD1w7Y
7KZg+CaV8bRPRDbn8b4Tbwrszp5vPO4gIqfbr/xd7EvBivhPbpOwbx9LVU7I
8aMAIqujC+tF5Mei7zK6eykwnbqi0MhRRHQ9Zynd2EcB3VawfIeHiHhE2MxR
YVOQvtdD91C+iFwq4OvGcFB/exdbxkaLyIuuayaSPArOvmZP/lUpImKyz5eG
UhTEJpRuTmvE/FhiMabMpyDZWEEqCvnI8U3Pux9AQctf8Y3quN+FX1SibPZT
UG7orROGevEUnDLsOEDBRrnacwPYHxZfRgYOHKSgLM3BirNLRORVvW/LHcbf
ndk/ixJFZMC63ivtCPr/ZlK0DOaVIGD1bMujFKSIu9dPmIn6vZHb0hiC89ew
LjyegXp8rZHACUX/Gr/6UGYtIrZ/zztNCkP8F7op26Jf5uiIpl47QcFUv9wj
r8tE5JcT99WiUxTsGzQwafmG+g9tC391mgJmygMxM8QjLXuDlXc44itf3FoR
LCIhLSVi42fRj0vW3usaY4jLZIPSixEU8JsuLZg2zpD5i64cNoiiwE9gnW+B
+SjhJbW4PJqCDW65v5K2iEhb1MGf22MQ3+FvvxWw3/OLP97/EUuB9PntR9+9
EJHIjy7scxcpWFVskuQdJSLeipW6c+NQn82vfBruY76vMut7FI940I/FIjFv
Fbm3UhwuY94pM+++WYnI5ysKHp8S8fwnor8+QfwrqsJUj1/F8397cvIU6vvq
yPcmlWvYD9/jFzdewn1N0+tiTjIFM6SDgxduRj9uqrW3vYF+sUjTOtLEkLlH
Vsp0puC85s6609xE5G/6veqgmxQYeU095VLOkLcN6qem3qZg+w7luW4HsA/E
olalp6Fe/LyD944yJGz+uNAyA/vj4oTxL6tFZJubf3FTJv4/bc8XL66ILAhv
OcC9g3lccqPiWhtDJB/aLZTIpqBw6ZXpN42xT7qKhq/dw75osx7MsxWRIjnd
u2Y5FOT4GBZLg4jELEvY8zqXgi3gX1CM+bxnj4S2Tx4F4z80g7tS0X9x+7vG
89GvYi6aU9GPKmW91y4VUBBw2OgPhXn57avTdsMinEdn5ccQzOtqtXKlikcU
UCmvd8pOxfy3Na13K6HgxOlH3/QWi0jQ/pTzPx9T4HVUamSpqYhsSpXfEFFK
wT11w6/v/hOReW+OSf4nQH1l+EcVHxIR5t/XiuKnON/m3D2T00SkSdfjuGM5
BQo3P28b+suQe1terxisoOCfwniRcytDToct/3u8EvGYebT25yb05/07BTOr
8byhmpQOPt+8VTUg9zkF3ceYBbYa2D9S54ztXmLfnDlApU/BPjH7M9T5ioI8
mnFS9sR9c9eejIM1FLxVDM0cthCRuPPvvOVrKVg9bXb/P9w/2Y+tNTPqKFBp
zPw+p48haz89bFtZj3p8MmtcDPNllpL2lXcNFBgmGs5bcxT7ZfUlF14TBTs/
rZYyWy4ih8qJaOgd5qmq8YvPxQxh1gxl7GmmQFsYtfeenoiEVSg59rVQ8HJT
IbMF+3Ky1ep/Xq2Y76rWMkazUe/POLfa25Cfda9OKOB88taJG906KOiflC9f
if6Kq6z49a4Tz7fZRH7/G9x3bb5dd+5GPby0PWWC++H1KjW7uh4KvjY9DM/A
ftWytfmxsY+CCctPJxR1MySjmn/1RT/yqZ23tV5ORIzsktfaDPzvPB8vdKFe
Hzx//qX8E+4rax95D3kjvutG42GIgjODO3x88P8lLzTgyWcKPmWIu17EfQHW
b/i05Cv6ZV2Kkzz25bOXQRcKhinInzDDaTXOt27DzWULv2O+PbjUX7ED8+RV
Te/9H+hfsTiLLZi3Thv/RhmOoN5EekdEcQx5/1p7ceYoBaVdZvmCJ7jPbHLo
1B6jQNxDgtz9yZCumuCzqb8peBblkv5KyBBf+wzTOX9RPxudTlpiHw29qf9w
9R8FIkNbNalShlCbRSdVhBRIdCxqkP0kJKO1+vPjGAp2v6zdtRn5OOzg8m4a
i4aY5IFtIetFRFR3PDRajIb2mj/HQnG/POmYrSc9gYZ3W9qlPTRFRLL+/dsz
E2k40ior2/uPIVFOE4MnStCgXr4yaHYXQ6Y3GGsfn0yDbv/BTVcw3+Kd3WqE
kjRwyn6qv8tniFrj6aDDU2iQ6F7pXIB+vrHlgcaYNA1Nsc5f/mMYot3U9jxA
lobNcydNdixgSJaLVMA3Obz+N4FbqiIixu8WzeLI01DmtFFxGeZ7vqvns0/T
aOidTDXmoF6XvI/g+irQ4NGaIZTB55duLVTuUaRhsvpZ0TLEY3Vzt2CnEg1D
6wTLd9wUkaptcvtalWn4UeddmxTFkA0tSxS2zaRhQXTVtGqcv3a7z+NGVRpK
Z5vM39vPkC0fYnwcZ9EgFStxPrqDIS1uj+XeqNOgOVb990E1Q3a2fixcP4eG
24aXQ5Il/tffCl7VGnjeySVZFoUM2dNmOcVqLg1f/kp+vdfLkC/u+/Ke/keD
2ahU7D/0P789boelNg2Xv+w606iFfeTxdFLJPBoufhkP23JQRI50fL63WJeG
zM07Mur0RYTlqbI1X48GtwUdj2saGHKqc42YiQENfpkLNYOR3ylevKxsQxqk
vX+Tneq4/3RdcdKfT4PvvZQ5rECGKOyqHE8zpsGuIoijI2DI5e7vt/8zoaFk
zSX1oavo993q9jdMafhjn+c8faeIpPTY/p61iIa9EuriGzdivnkHpiSa0aBX
uMjXppEhmVXtNXKLaXi1VlQS/5AhhgZ24ycskK/vMdYBIwzJic7T+7OEhgsv
xTadWCYiC3+ou3KX4Xl+uc5twH4o2BJ+smc5DbGr17XfzWDI0kc/crda0tBf
dfptIObXk1nuHa9X/u+6ZFcz5iOEVsmsWUXDLOslD2XnYr/1mCwtWo36Ew/e
Vr5dRGxskvyM1tKwRFOvqR798iJLIi7VioaFC87E8a4xZJMcXaZsQ8PueQp6
4UMMqaM/DEfa0qCwu6Nl9DNDnBut1MXXoT7GfHflJ6A/LXLWBa3H+++9yDql
JCJuSaoHP2+gQXzbERsZ1Gu76ORtr000PL9amicphd9Pu4ffNtnj/WYay9Wu
MqSvchtrgwMN4SdUlD9cRz3oVxg9daThVoKLsvxbhnyOmu9m7kzDGqefBV9m
iQjv++XwO1tosN63S77pIEN+OE8o0HCloSg9a3sq+u1AEacnbisNW5cEVV6a
ICJ/1N7LS29H/oV230b2iEjwsdWWoW7obwvN8/rWDGH13PUf3UHDGDvCdPE6
ETlhrZy4z4OGMxv3htnifBJZxys7dqKf3BIfaDxlyDnZzz+dvRDPsFumHS0M
kaVdNF/somFF2N0fOncZEtMg2LTSm4aZx5ud5zejniwMgvN9aHg0T05DcjdD
4q/GZer5oR7mJDzLvc0QVZGoKXkPDedNRUnnzjDk2q59ExX30fBaZu+tFbIi
olHZYHLWnwa2Jm9pbwhDbumt3MmwaXg/OnO4+yRDdKIyIwO4NGjZFncueYX5
8E2heICHeTXY1+4/EfPcOeSjO03D3zehDX+R/5zCAcV6Pj7vyyVvmyqGLFJz
Wm0bSIPP1T+FqThvYcgT3pP9qN92qqPzG+qtW+eaaRANea8Kxa7HM6TU6sKL
9IP4/GrFkyn3GbIqc3xs1mHkS87ohjn6tULGT/vCERpsLmbrqKF/bKg6x8lH
afj9pPzjF+T3Rf2y0OAQGrKSH6c5OKPeFqdlfz9Gg+ucMduA/ai3K/IffI/T
UK7APZWE+e7MHJZsDaPBnXfDdFoZ6s2rz8zhJOplhaTO8rkMcXtmv7vyFOpZ
f/Kdfty32nWLY5adwetu86aWLGPIrkit0pxwGr7p8id0pqLehqOHtM8hX23P
0264oN6c/qhcjaCBPFetWfoS9Vaw21o+CvNSa3KkIfqPp1oTcCqahlMqgR+f
If8/jlqk/D1Pw8r75a2uv1BvXak1vFgaGlfYcW6h//6slR3vvUBDdcv50T2V
DJmdVdJ66BINShPehv1/3k7d90QuHvNCZ4q5B/rfL1Al+WYCDXOmH4/TRb9F
NleGWCSiXmdrbHxgKCK5lvt3vr5Cw/eirL81mQxpuvkf7EqiYXv0haVHxEXk
n+RbjbFrNHTpDgnP4Pk0uKFikddpiLLtGW7Efduqfn63RgoNAutD6lw83z6L
trKHqTSEkQjzUOyf89cibq67hX6SabuduAD7Q3zpyY7bNBQbJ5xwxnxu9hvw
Dkynoe5XJmOkivvLq3grqUwa4m8fClZXY8h/plbzkrPweQ3Tr9l8ZYhtwk+J
hXdpSHENdvqKfuKMp3ysysY+CDzI68a8uOC1uXrHfRq2JJZM2Yh5UFjJZHzP
Qb1X93Yl3mJIq0H22dMPUB/T/h2NQD2LxbrtU8tHPSlsePhmNUPm/ZJan/OQ
Bqt6vTHmOEPWuRUZWBXS0DJglqiM+wJP4CvTUkRD4A/5P9/1GXJJe8YXbjEN
cDnlrUcMQ4rOlb+e8BjzczCbw6Ce24bpe5efYL+eTLF4UcsQ8S0a540IDYpz
Nkyt4aG/imt4ZQIaHtroDY9jHmyYc3Szaxn2v7lLZLgXQ+iTBiafy2lI8tkS
Uf1dSOI/NU87/oyGAbOSYg88b8mm8B8zqlBfNbckFmGfd+aZ12dV01Dxs+DS
MeznSTP78la+oGGu5IKwbooh+iEXLzW8pGFaRKOT0RGG2Pes2r/3NQ2jpmX5
AneGBNp+28LU0MDn3//2E/G+nJ1sfrGWhoQ2k5fyv4TkyfSNyrpvsZ8vzJ+m
815IuoP+jT2ux7yJva+Waol51pb53qGRhgCbzvHHDgwxWL31UX8T4i27xuai
OUM2p0tcOfKehhtta82XHWbIfpmHh+VbaHC8/elgyyKGXKF3u93+gHqaqrU0
K4AhpGna8qVtmCddUn+9HRnSu0ww6007DYvOOE/cZMYQqRSucHcn+kPSjjzF
fWK+hHr77y7E9+ncPksfhjj5vyyN6qHhF9eJM6LMkIO1h67P7aOhhzm4eqhJ
SK6Z6YYW9tOwodvv6BHUb9mVJs8NAzTYbjRYOtGAIf2ik6u6PmG++lYYtSD/
0j4L5x4YQjzTmgyncxmy4EWXuPQX7K+cOVLadpgnxjE917/ScO/2UYetHxhy
6JJlxaJvNCQ7fVJZq8WQ5D+fbz3/jnmR8V5RDvun3OPqKY+fNLQVGDYr7GLI
QLmd788RGo4Kep3+Q7/L6v22Dv+F5z3MuV+4jSGm0Wk66r+x7/pV7D8fY8hE
m2mj8X9o2F/WW1mC/dokOlIm/w/nfbrV2wvzIaOo//y5cRqC9Q2Wv8X5DtMO
7hMZ3JfYa8ChCPWm/1g/RIT7ZPWON/qTMU965v0eY/HBKlfBqm0nQ75djX1G
i/Oh+2Gd3qlVDHnqPH5haAIfIrz0Ry58FZILsn6ePpP4UNKie5gkMcS7ss6o
Q4IPO+jrMYtvMsT82PJ/WyX5wM9RHpQ3xu9Li/Tqt1J8EBnkhAPmacu3afEb
pPngYniuLDecIXczg3dXyvBBeOTVx7WyDAnZ9XEByPHB/f74DkB8Nqs5Mo+m
8qHn4uq3/xghmdvw+OXCaXywXqI2r3EzQ0YidRKzp/OhPmCoYRD9Xml1wVdH
kQ+dgZqTxq1Qz8z4wpQZfNh1WVlCeBTzqtBPTE2ZDyHt+9KqNjJkOfW25pIK
H2Lm//krQrzl9FYkyany4cDu3sbX2EcdXel7w9X4EBqrP6VpH+5XV6YvFlfn
w1mrhOpHe/F72+noxODZfJBcd2D+OdSjs8xA3egcPjAx8Nt5FubLM8frPE0+
mFVM105Dv/w++oT9aS4fFGfPXfzQH/vLXHfpbi0+PFj0O2/nNIYkDV+Y3KbN
B3X63Pz8fiHhZggbXHT4YFMlMyUf+we89qTW6vLh1F//kqv4/umq9bx1+nxI
+XgGzE6gX96uWFFhwIdjIavj2omQFERkTLE04sMGNX8vG8Q7fK3C+8L5fGhx
HTw3vp0h24VHb5ss4MPQ26rpB3AfMCwY4N8x4cPS/kP7h1DvQq4TaC/kA2d8
+eJo5L9Gp1T2+iI+vLgpkDyLer3RqftBxZwPgataS4brcb9OvJhxYTHef39B
vhXm11pHZr/MEj5EXVbUnCfHECXpvWtOL0W+ajf52LcIUf/18qzlfHjcX9gm
jvtscbBl+6EVfLgx6Fz4Hv0UaZZ556clH2bsHHAZXcAQj68KhzjAB0GttzzB
8y1ID7H+uArxeiD3egD3bXHPTwpea/iwXmtTs0wWQxpUnLta1vKBZSTTpfxT
SNLqSu85W/NhsM7KQHki5sM5veAaGz40/bfkdHeFkKxbc8nO1o4Pu2OvTW1A
vNTGGaWydXxQyX5koor58Tl/b++yDXzwm5Yg71AuJKWchtyHG1Efod/zfCfh
vjZv5TFjez60yW7dLYF5tasjc0PmZj78sv/oW5UkJIsuK6r+58iHsv4T9QXN
QiLhcOxjkhPiE+9mEN8hJO+lBvOVtvBhmp/e4hVrcP8qcw6LccH52k5sj3Ri
yIOnJmC+FZ+XmH1nZDlDHgnkmA/b+LCnq0GhNI8hAjJUctyND++XD8RPxvNW
l1Yf0nHnQ7TKy4U3HwrJmye3F7/24MO115c/7NyA+fE4bJTvyQe3h6fWuqL+
2kt25qnsQj2Gy5ecQr76ipfTpbvRr1PNEgjmw+dHM429ffgwvdhT+pZASEaK
fn2W8sP7j2uOmgND/hXWZ93fw4frrl5y+RbIR2HOni37UB/SKv+9+CwkUwqi
5v3z50PA6MKrvXj+aQ/39d7g8OHoqsHn7zB/VfJtUq15fBDb/sJEbCnuH3la
np8pPlQuuWJh3Ckkug/EZl/g82HesfvsSuwj49z2D4sD+fCyCQ75dQmJeU5J
Ytt+PvifCcuJw3yzvH/Z9UQQH5LXZjq5on6t7u2foXeID0mXPieM2GAeZjvW
1xzmw5YfvLp+/L/zXePYwGA+SBxIbXbE+dzuyNirhvBh8Up5+/uo111Zn2QE
xzAvnb6c6agVkn2ZlS98jvOBuN9yWovvozNuhkuf4EO6Y4PuaIKQHEwPtc49
yYf5C++tcxoSktA094mup/nwznVzerIKQ87cXlo2foYPH0eSEqUx/6JvKYem
nuXD70VjdvePY//fHFlhG4HXtTd/+oJ6T06t+/clEvVue0j6IN5/O+Xeo4vR
fEhV/WlI3gjJ3RsRQUti+PD63bonseuEJP/6HrOOWD4UGmk/McL9tiTZ6ufJ
i3yYM0X1VGKUkJRdm5urH8eHmSy1sijM1xdJIm5tPOrpurwRhd8zdVdbDQ9c
5sO3yLMBIsTn/ZVHg2pX+NCQv2nSgDruH4nxGU+v8sHHLzqiZ0RIPl4O8PW7
xoc7p5IqPEuF5GvCZi3Z63x4+GCTaz7i/SveqPvBDT4s0ij7ljcmJMK4KTe2
pvLB1yNL3b1QSCbGfXRnbvKhnbBnRPkxROZShdqt23y4q3j7xp3zQqJ4MaXZ
Lp0Pdk4bDzMPhETtQkjCcAYfwnReWNgaMWRurNuWuCw+ZN3dLdL+JyT6MRYK
y+7y4UT/lUP5Ctin52fUdWbzYafWSGxEspAsif4Rffo+8jdxqucBJSGBqDcb
DHP5sPfXXPGMCbh/Rt6d8vYB6n1plG/rZCHZHHG2OiifD9s9VRPUg4TE9Zzv
afUC1M/5509T04TE4+yateWFfJgcGu2bi+/zDdcQ3/sI8+B0y5MV6EfOGSGR
K+HDvfx9yZMfCUng6Zaj+Y/58N3452pPX4YEnypctr0U/f3LoPP2YyE5cfLS
HxHhQ+LB1tk3UG//B8vLJFU=
             "]]}}, {}}, 
         NCache[{{{Rational[6, 5], 0}, {0, Rational[216, 5]}}, {0, 
           216}}, {{{1.2, 0}, {0, 43.2}}, {0, 216}}]], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TemplateBox[{"\"\[Pi]/4\"","\"\[Pi]/2\"","\"3\[Pi]/4\""},
              "LineLegend",
              DisplayFunction->(FormBox[
                StyleBox[
                 StyleBox[
                  PaneBox[
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                   ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                   "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                 FontFamily -> "Arial"}, Background -> Automatic, 
                 StripOnInput -> False], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.501999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.334666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.501999]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.501999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.501999], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.690207, 0.188192, 0.376507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.46013800000000005`, 0.12546133333333334`, 
                    0.25100466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.690207, 0.188192, 0.376507]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.690207, 0.188192, 0.376507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.690207, 0.188192, 0.376507], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {198.00000000000003`, 86.4}, {-1, 1}, 
         Automatic, {1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TemplateBox[{"\"\[Pi]/4\"","\"\[Pi]/2\"","\"3\[Pi]/4\""},
             "LineLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0., 0., 0.501999]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.690207, 0.188192, 0.376507]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"LineLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0., 0., 0.501999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.334666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0., 0., 0.501999]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0., 0., 0.501999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0., 0., 0.501999], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.690207, 0.188192, 0.376507], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.46013800000000005`, 0.12546133333333334`, 
                    0.25100466666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.690207, 0.188192, 0.376507]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.690207, 0.188192, 0.376507]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.690207, 0.188192, 0.376507], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {198.00000000000003`, 86.4}, {-1, 1}, 
         Automatic, {1, 0}]},
       Frame->False,
       ImageSize->{360, 216},
       PlotRange->{{0, 360}, {0, 216}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}, {
     {FaceForm[None], RectangleBox[{-72, -72}, {432, 288}]}, InsetBox[
      GraphicsBox[{
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 0}, {0, 216}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{2.88, 0.}, {0, 0.}}], 
         LineBox[{{1.44, 13.004495812683984`}, {0, 13.004495812683984`}}], 
         LineBox[{{1.44, 20.611638203889413`}, {0, 20.611638203889413`}}], 
         LineBox[{{1.44, 26.00899162536797}, {0, 26.00899162536797}}], 
         LineBox[{{1.44, 30.195504187316004`}, {0, 30.195504187316004`}}], 
         LineBox[{{1.44, 33.6161340165734}, {0, 33.6161340165734}}], 
         LineBox[{{1.44, 36.50823532861588}, {0, 36.50823532861588}}], 
         LineBox[{{1.44, 39.01348743805195}, {0, 39.01348743805195}}], 
         LineBox[{{1.44, 41.223276407778826`}, {0, 41.223276407778826`}}], 
         LineBox[{{2.88, 43.19999999999999}, {0, 43.19999999999999}}], 
         LineBox[{{1.44, 56.20449581268397}, {0, 56.20449581268397}}], 
         LineBox[{{1.44, 63.8116382038894}, {0, 63.8116382038894}}], 
         LineBox[{{1.44, 69.20899162536796}, {0, 69.20899162536796}}], 
         LineBox[{{1.44, 73.39550418731599}, {0, 73.39550418731599}}], 
         LineBox[{{1.44, 76.81613401657339}, {0, 76.81613401657339}}], 
         LineBox[{{1.44, 79.7082353286159}, {0, 79.7082353286159}}], 
         LineBox[{{1.44, 82.21348743805194}, {0, 82.21348743805194}}], 
         LineBox[{{1.44, 84.42327640777881}, {0, 84.42327640777881}}], 
         LineBox[{{2.88, 86.39999999999998}, {0, 86.39999999999998}}], 
         LineBox[{{1.44, 99.40449581268398}, {0, 99.40449581268398}}], 
         LineBox[{{1.44, 107.01163820388942`}, {0, 107.01163820388942`}}], 
         LineBox[{{1.44, 112.40899162536797`}, {0, 112.40899162536797`}}], 
         LineBox[{{1.44, 116.59550418731601`}, {0, 116.59550418731601`}}], 
         LineBox[{{1.44, 120.01613401657339`}, {0, 120.01613401657339`}}], 
         LineBox[{{1.44, 122.90823532861589`}, {0, 122.90823532861589`}}], 
         LineBox[{{1.44, 125.41348743805194`}, {0, 125.41348743805194`}}], 
         LineBox[{{1.44, 127.62327640777882`}, {0, 127.62327640777882`}}], 
         LineBox[{{2.88, 129.6}, {0, 129.6}}], 
         LineBox[{{1.44, 142.60449581268398`}, {0, 142.60449581268398`}}], 
         LineBox[{{1.44, 150.2116382038894}, {0, 150.2116382038894}}], 
         LineBox[{{1.44, 155.60899162536796`}, {0, 155.60899162536796`}}], 
         LineBox[{{1.44, 159.795504187316}, {0, 159.795504187316}}], 
         LineBox[{{1.44, 163.2161340165734}, {0, 163.2161340165734}}], 
         LineBox[{{1.44, 166.10823532861588`}, {0, 166.10823532861588`}}], 
         LineBox[{{1.44, 168.61348743805195`}, {0, 168.61348743805195`}}], 
         LineBox[{{1.44, 170.82327640777882`}, {0, 170.82327640777882`}}], 
         LineBox[{{2.88, 172.8}, {0, 172.8}}], 
         LineBox[{{1.44, 185.80449581268397`}, {0, 185.80449581268397`}}], 
         LineBox[{{1.44, 193.41163820388942`}, {0, 193.41163820388942`}}], 
         LineBox[{{1.44, 198.80899162536798`}, {0, 198.80899162536798`}}], 
         LineBox[{{1.44, 202.99550418731602`}, {0, 202.99550418731602`}}], 
         LineBox[{{1.44, 206.4161340165734}, {0, 206.4161340165734}}], 
         LineBox[{{1.44, 209.3082353286159}, {0, 209.3082353286159}}], 
         LineBox[{{1.44, 211.81348743805194`}, {0, 211.81348743805194`}}], 
         LineBox[{{1.44, 214.02327640777884`}, {0, 214.02327640777884`}}], 
         LineBox[{{2.88, 216.}, {0, 216.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{360, 0}, {360, 216}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{357.12, 0.}, {360, 0.}}], 
         LineBox[{{358.56, 13.004495812683984`}, {360, 13.004495812683984`}}],
          LineBox[{{358.56, 20.611638203889413`}, {
           360, 20.611638203889413`}}], 
         LineBox[{{358.56, 26.00899162536797}, {360, 26.00899162536797}}], 
         LineBox[{{358.56, 30.195504187316004`}, {360, 30.195504187316004`}}],
          LineBox[{{358.56, 33.6161340165734}, {360, 33.6161340165734}}], 
         LineBox[{{358.56, 36.50823532861588}, {360, 36.50823532861588}}], 
         LineBox[{{358.56, 39.01348743805195}, {360, 39.01348743805195}}], 
         LineBox[{{358.56, 41.223276407778826`}, {360, 41.223276407778826`}}],
          LineBox[{{357.12, 43.19999999999999}, {360, 43.19999999999999}}], 
         LineBox[{{358.56, 56.20449581268397}, {360, 56.20449581268397}}], 
         LineBox[{{358.56, 63.8116382038894}, {360, 63.8116382038894}}], 
         LineBox[{{358.56, 69.20899162536796}, {360, 69.20899162536796}}], 
         LineBox[{{358.56, 73.39550418731599}, {360, 73.39550418731599}}], 
         LineBox[{{358.56, 76.81613401657339}, {360, 76.81613401657339}}], 
         LineBox[{{358.56, 79.7082353286159}, {360, 79.7082353286159}}], 
         LineBox[{{358.56, 82.21348743805194}, {360, 82.21348743805194}}], 
         LineBox[{{358.56, 84.42327640777881}, {360, 84.42327640777881}}], 
         LineBox[{{357.12, 86.39999999999998}, {360, 86.39999999999998}}], 
         LineBox[{{358.56, 99.40449581268398}, {360, 99.40449581268398}}], 
         LineBox[{{358.56, 107.01163820388942`}, {360, 107.01163820388942`}}],
          LineBox[{{358.56, 112.40899162536797`}, {
           360, 112.40899162536797`}}], 
         LineBox[{{358.56, 116.59550418731601`}, {360, 116.59550418731601`}}],
          LineBox[{{358.56, 120.01613401657339`}, {
           360, 120.01613401657339`}}], 
         LineBox[{{358.56, 122.90823532861589`}, {360, 122.90823532861589`}}],
          LineBox[{{358.56, 125.41348743805194`}, {
           360, 125.41348743805194`}}], 
         LineBox[{{358.56, 127.62327640777882`}, {360, 127.62327640777882`}}],
          LineBox[{{357.12, 129.6}, {360, 129.6}}], 
         LineBox[{{358.56, 142.60449581268398`}, {360, 142.60449581268398`}}],
          LineBox[{{358.56, 150.2116382038894}, {360, 150.2116382038894}}], 
         LineBox[{{358.56, 155.60899162536796`}, {360, 155.60899162536796`}}],
          LineBox[{{358.56, 159.795504187316}, {360, 159.795504187316}}], 
         LineBox[{{358.56, 163.2161340165734}, {360, 163.2161340165734}}], 
         LineBox[{{358.56, 166.10823532861588`}, {360, 166.10823532861588`}}],
          LineBox[{{358.56, 168.61348743805195`}, {
           360, 168.61348743805195`}}], 
         LineBox[{{358.56, 170.82327640777882`}, {360, 170.82327640777882`}}],
          LineBox[{{357.12, 172.8}, {360, 172.8}}], 
         LineBox[{{358.56, 185.80449581268397`}, {360, 185.80449581268397`}}],
          LineBox[{{358.56, 193.41163820388942`}, {
           360, 193.41163820388942`}}], 
         LineBox[{{358.56, 198.80899162536798`}, {360, 198.80899162536798`}}],
          LineBox[{{358.56, 202.99550418731602`}, {
           360, 202.99550418731602`}}], 
         LineBox[{{358.56, 206.4161340165734}, {360, 206.4161340165734}}], 
         LineBox[{{358.56, 209.3082353286159}, {360, 209.3082353286159}}], 
         LineBox[{{358.56, 211.81348743805194`}, {360, 211.81348743805194`}}],
          LineBox[{{358.56, 214.02327640777884`}, {
           360, 214.02327640777884`}}], 
         LineBox[{{357.12, 216.}, {360, 216.}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 0}, {360, 0}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 2.88}, {0., 0}}], 
         LineBox[{{12., 1.44}, {12., 0}}], LineBox[{{24., 1.44}, {24., 0}}], 
         LineBox[{{36., 1.44}, {36., 0}}], LineBox[{{48., 1.44}, {48., 0}}], 
         LineBox[{{60., 2.88}, {60., 0}}], LineBox[{{72., 1.44}, {72., 0}}], 
         LineBox[{{84., 1.44}, {84., 0}}], LineBox[{{96., 1.44}, {96., 0}}], 
         LineBox[{{108., 1.44}, {108., 0}}], 
         LineBox[{{120., 2.88}, {120., 0}}], 
         LineBox[{{132., 1.44}, {132., 0}}], 
         LineBox[{{144., 1.44}, {144., 0}}], 
         LineBox[{{156., 1.44}, {156., 0}}], 
         LineBox[{{168., 1.44}, {168., 0}}], 
         LineBox[{{180., 2.88}, {180., 0}}], 
         LineBox[{{192., 1.44}, {192., 0}}], 
         LineBox[{{204., 1.44}, {204., 0}}], 
         LineBox[{{216., 1.44}, {216., 0}}], 
         LineBox[{{228., 1.44}, {228., 0}}], 
         LineBox[{{240., 2.88}, {240., 0}}], 
         LineBox[{{252., 1.44}, {252., 0}}], 
         LineBox[{{264., 1.44}, {264., 0}}], 
         LineBox[{{276., 1.44}, {276., 0}}], 
         LineBox[{{288., 1.44}, {288., 0}}], 
         LineBox[{{300., 2.88}, {300., 0}}], 
         LineBox[{{312., 1.44}, {312., 0}}], 
         LineBox[{{324., 1.44}, {324., 0}}], 
         LineBox[{{336., 1.44}, {336., 0}}], 
         LineBox[{{348., 1.44}, {348., 0}}], 
         LineBox[{{360., 2.88}, {360., 0}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0, 216}, {360, 216}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{}, {}}]}, 
        {GrayLevel[0], AbsoluteThickness[1], Dashing[{}], CapForm[None], 
         JoinForm[{"Miter", 3.25}], LineBox[{{0., 213.12}, {0., 216}}], 
         LineBox[{{12., 214.56}, {12., 216}}], 
         LineBox[{{24., 214.56}, {24., 216}}], 
         LineBox[{{36., 214.56}, {36., 216}}], 
         LineBox[{{48., 214.56}, {48., 216}}], 
         LineBox[{{60., 213.12}, {60., 216}}], 
         LineBox[{{72., 214.56}, {72., 216}}], 
         LineBox[{{84., 214.56}, {84., 216}}], 
         LineBox[{{96., 214.56}, {96., 216}}], 
         LineBox[{{108., 214.56}, {108., 216}}], 
         LineBox[{{120., 213.12}, {120., 216}}], 
         LineBox[{{132., 214.56}, {132., 216}}], 
         LineBox[{{144., 214.56}, {144., 216}}], 
         LineBox[{{156., 214.56}, {156., 216}}], 
         LineBox[{{168., 214.56}, {168., 216}}], 
         LineBox[{{180., 213.12}, {180., 216}}], 
         LineBox[{{192., 214.56}, {192., 216}}], 
         LineBox[{{204., 214.56}, {204., 216}}], 
         LineBox[{{216., 214.56}, {216., 216}}], 
         LineBox[{{228., 214.56}, {228., 216}}], 
         LineBox[{{240., 213.12}, {240., 216}}], 
         LineBox[{{252., 214.56}, {252., 216}}], 
         LineBox[{{264., 214.56}, {264., 216}}], 
         LineBox[{{276., 214.56}, {276., 216}}], 
         LineBox[{{288., 214.56}, {288., 216}}], 
         LineBox[{{300., 213.12}, {300., 216}}], 
         LineBox[{{312., 214.56}, {312., 216}}], 
         LineBox[{{324., 214.56}, {324., 216}}], 
         LineBox[{{336., 214.56}, {336., 216}}], 
         LineBox[{{348., 214.56}, {348., 216}}], 
         LineBox[{{360., 213.12}, {360., 216}}]}, InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "5"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "4"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 43.19999999999999}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "3"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 86.39999999999998}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "2"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 129.6}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 172.8}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox[
             TagBox[
              SuperscriptBox["10", "0"],
              DisplayForm],
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 216.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"1 - F\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-31., 108.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"  0\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\" 50\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {60., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"100\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {120., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"150\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"200\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {240., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"250\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {300., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            TagBox["\<\"300\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->13.6,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           StyleBox[
            
            TagBox["\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"\[Sigma]\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Delta]E\\\"]\\) (V/m)\"\>",
             DisplayForm],
            StripOnInput->False,
            ShowAutoStyles->False,
            SingleLetterItalics->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"Times",
            FontSize->16,
            FontWeight->Plain,
            FontSlant->Plain,
            FontTracking->Plain,
            FontColor->GrayLevel[0]],
           StripOnInput->False,
           ShowContents->False],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 0.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "4"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 43.19999999999999}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "3"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 86.39999999999998}, {1, 0}, Automatic, {
         1, 0}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "2"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 129.6}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", 
              RowBox[{"-", "1"}]],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 172.8}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox[
            TagBox[
             SuperscriptBox["10", "0"],
             DisplayForm],
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-1., 216.}, {1, 0}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"1 - F\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {-31., 108.}, {0, -1}, Automatic, {
         6.123233995736766*^-17, 1.}], InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"  0\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {0., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\" 50\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {60., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"100\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {120., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"150\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"200\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {240., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"250\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {300., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           TagBox["\<\"300\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->13.6,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {360., -1.}, {0, 1}, Automatic, {1, 0}], 
        InsetBox[
         FrameBox[
          StyleBox[
           
           TagBox["\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"\[Sigma]\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Delta]E\\\"]\\) (V/m)\"\>",
            DisplayForm],
           StripOnInput->False,
           ShowAutoStyles->False,
           SingleLetterItalics->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontFamily->"Times",
           FontSize->16,
           FontWeight->Plain,
           FontSlant->Plain,
           FontTracking->Plain,
           FontColor->GrayLevel[0]],
          Background->None,
          ContentPadding->False,
          FrameMargins->{{0, 0}, {0, 0}},
          FrameStyle->None,
          RoundingRadius->{0, 0},
          StripOnInput->False], {180., -17.}, {0, 1}, Automatic, {1., 0.}]},
       Frame->False,
       ImageSize->{504, 360},
       PlotRange->{{-72, 432}, {-72, 288}}], {0, 0}, {0, 0}]}}, {}},
  AspectRatio->NCache[
    Rational[5, 7], 0.7142857142857143],
  Background->None,
  DisplayFunction->Identity,
  Frame->False,
  ImageSize->{504, 360},
  PlotRange->{{-72, 432}, {-72, 288}}]], "Output",
 CellChangeTimes->{3.7686467539620433`*^9, 
  3.768649630534127*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"fDatasets", "[", 
     RowBox[{"\[Pi]", "/", "2"}], "]"}], ",", " ", 
    RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"fDatasets", "[", 
     RowBox[{"\[Pi]", "/", "2"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"%", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1000"}], ",", " ", "1000"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7687549229492846`*^9, 3.7687549489900093`*^9}, {
  3.7687550777698708`*^9, 3.768755079690748*^9}, {3.768755128651451*^9, 
  3.768755142038629*^9}, {3.7687551968918877`*^9, 3.7687552022648144`*^9}, {
  3.7687552731309614`*^9, 3.7687553511917152`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQYHmg4czLCyXHL5vT2Yf6HxwLH1N7hD7kH5DxoO
MBwuk9/2AMavPxBgc2HvqrtQPkPdAYXrtXpHr0P5CjUHxPpKXdUuQvkOVQeW
lZ+5kHIayk+oODBT9m3jjONQfkPZga/c1T7Bx6D8BSUHvv76LL8fJn+g6IDr
1vKPc2H6HxQc0JEUfF0JM58h70Cdc8jhlTdg9mUdEPCf41sOc29D2oGNMgYT
1V7AzEs6MPcY0xTR9zD9cQeqjuu33/4CUx92YNL2SQekfsLk/Q4UNrX57PkN
49sd0PESNLzyB8ZnYPjHl7J1IZxv5xA4zzArH67ez+GoZIXu0p9w8x08Qh9l
Tf0Ot99BcIVwd9NXuPsccuXSlrR+hrvf4dAS47yqj3D/OVQuvSzCDXd/nsOb
7mtPZ7yGh4+D7OGDMj7P4OHnoCZSd0nnHjx8HS4wxCtoXoKHv8OtlCh2i4Pw
+HH408jBn74KHn8OLyYf2inUC49fh15piYiPGfD4dzijr5AqbwdPHw4xV/6a
mvPC04+DiRGjt+/1d7D05eBxxfjiq7lQ/oEmh5gFGWLMye/sAYXl5zE=
       "]]}, {}}, {}}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
VwgPreU+jOfVZqcqeIwvvJM7gYgGW1bCxMEb3+rr5GOIqCzpS4kAmLd0tcQq
nIgSNzBLLvAF3Cm6KICIHq/ymS3D+rZjy/Nt9yYiYtXloilw8MCI4/xtIsp2
aAil74fnjjqaSk5ENEkhLFSBDyRKMXeZEpHdKH/FbbDCJcelRQMi2nsrJ90G
bHwkd5xPh4iS74Xu1wNH1nA32qoSEQvDlsWj4MVvvwJ/HSeivBAl9kHYz29l
6lb3byMi7ZCiE8J063CfHmIioo2V3Xps4KjOHoajm8Eoxt90xzzkl8iTYtw8
08Go29PZqxYczjIiR30VjFa7NMW1wSGFyn5514MR+74+j8uQvwKm/jKzNwSh
yYaONX3IlwF7SuJIz4OQum+UsSTYX/fi7rVHQahfgEJkA/u9KDs6dTcIVXnk
WjRD/vUJs7nQcCMIVdpGSpwCex15c8djdxDyqn9Q9B/kb1f7sL2fXQKR/4uu
Rw1QD1JvPhBitQtEFRLPUzPByL1GQsYyEKVr25B9wdxBlDORGoGoi+uuoSy4
6p7pNTnBQJRXcmC+aICG/X1/pDS2JwBJ1lxfiod6c0f8nYqKbADSmGLBHXuh
3kmPaTiKBSAhtRsBGuDxUxv6yYIBKKu9t1cYLKd2/OpP9gDkofeh7RvUu6FL
98JTJv2RWXs862XwwTiHbkqKP9ph4qZgAfWynLbVNnvND6nL/PfFGeprQcol
nhWKHxpJ5d2iC05TLn+vO+GHUuXdrCXBwREWx/90+qESZttqKtRnPcHSzUv5
fmiCdpfTEzynZ3hvj54fYhp1+BsF9X1sufC8u5ofcuacGHYBD6Rv/G5R8EOx
1wNXDcGvpvOv+Qj5oRSW7Zt7wdFBK9KDa77o6Y3Dx8vbYL88zWi/m++LjjXe
uP+9lYbtN5kPmkvzRTOKL951g7k21GXU431RlYXF6Wrw6jlq2pKPL2q+JMsU
DX73BXcw0vNFTVt7mE6Aa0NS9jxW80V/TKIC94Gfis10MCr6og+ThWpbwSle
ybLPhHxR/b24ys9wXrHbOc3Ate6DTMaqJeLA5pVKz69TfVDRkOROP7COxZ3r
DRM+SPwJ5+nrYNlChS7XLh90uDo7XBXMpBKT0Znvg+oXY4Z/v6dhK+Ojekfu
+6AGp+0Kc+CfkXJMgfE+KPbin++fwD0DXxwlfH1Qu12nSh34gbP0qRg9H7Sd
m9xOBGuJyXfyqPugY7ubGDzA81MqdtmKPmg5ZyDcHoxf0U56Jgztr8+FaYPH
DR2ogxveKD0w1HgfOJrDJcx23hsdDR7l5gLLtHvsn53yRgn4LmEWcIg66cLf
Hm9UKBhwev4d1Gv5zCLhh96Ih4/lfBu4YylP5WmmN6KOlqQ3gj3LHw3IJ3mj
77lSWA34rdhLJu1Ab9QlaUh6BHadfn1/4LY32houLZgH3p3fLG3t6I3+LN3i
ygA77O+zdjf2RtWSSZQ4MMfw0K8NLegfUTUcAa5KGY0NPeONlHjq95DB1kbT
Qhxy3kg8vfVJAJiVk1KbKuaN3oytp3iDy9uXDA8JeiOxslt9t8HmkRs/HvN4
o6gO7WuuYIZzjEQ5Nm/EzlCmdQNczLiNr/4fAfZjLdkBbFDP8VTzFwFtfRe3
6xp4zY/3XO8MAQ1MX/h1BZwjv/+z5RgBWSlxH78MPr982GPyAwF1RjDXWYIX
y8XYXNsJSPue6gNzcLqLdO4qIqC/EpRBM7CquLwCqYqA2P874mAKnplW6WYr
JaAcTvYLJuCkfHWHu7kE9O1nQ4gxWMlG+49AKgH9crT7j+7x/UZ3H8YSEJPJ
nnUjcMyw+bETZAKSuf1Pjh6Xu3flTa03Ad2Kkn5P92cjBwt1FwKq/ZNQRn9+
KKfLfOdVAurImaPQf1+iwyPiojkBrR/mJF8ED0T6HfimS0DJcs03LcAB50gv
bqgR0HTY4ONL9PXAFKmzrEBA59/zYNbgzvr4icDjBLTzkaaoLZjgn+LHKkxA
IZ+UHezABxQydyXugffneL12HfxuOa94LycBdS/dG71JXx/PHmEFzASkqZSy
142+PlzLP0pueKGqpJBHnuB68ZcuL2leyO2JZKwvmLOgOaNtxAvxzE5oh4Kr
bdplTHq8UIZrhGg02Eagr/XLWy/00ovXPIG+Hu6Nrs6XeyFKt2BZFph8xIRT
6qEXkruqYF4ANnneIuKS5YXOb7zSKgGv9j4z/Rnlhcgky3/09dxiI+JylOiF
/JIPvqWv93Raeqg9wQuNzz/sbQWf2Rla+e2qF3rab1A/AubKXGsTtPBCk/4C
2RP0+RJ3Gb+s74VkXjA2z4HDtMx2jSh7ofKD17/9o++nENFbfTxe6PUbRmsx
2H/Z3FnhXOxeSPDTtJMc2C13V7Yeoxf6yplQi4H/a9joaKN4Il6eMLGLYMuN
DvGmd55o0dVUMQr8w819utLHE1V9z9hYB9f+m/qz4OqJgl/xndkO+Sg23pJX
2t4T8bvpN/GDpUrV1EsNPVG10WaiApjwnTevQNwTtX4lK/qDma1rL6d89kDv
9+L+OyA/fpw77tXf54H6JENeC4KL/fNjd7V6oKrAQhVZsPb92FdxLzwQd0nC
imUr/bxpvSc83gOJCWDqT8AHtbd8IOAe6Mb1Wf7LkN/rfCvufTvpgQS11XYR
wBbFtuY6xzyQYXuf7h1wEgv6dGi3B8rVvJz0BsyMAsY7Zm+jqDoiLgH14rvc
Cu1w6m3U0HZqhh3qz9MDP9m6Ke4o1YBmuw716oJuWofihDt6IH310N4uaO+v
GV8w5I5G3qnyKYMPDhfu8mtyR/dzDQoCwUnJV/mP3HdHnOMvT7JAffTa9vmI
v7o7ChTwfycA9fP0Yhd+NMMNvfY4KeIO90WmpVmyRqIbGmDsEEsBtyxte2sf
4Yb2eW7RrwGb/FI9X+Dhhthqa38zQj2/uVZleEjHDa3VcY/cBZ/8o/L21MYt
dPNYsSqC+r/I+3WbYL0rStlp/0cc7o/OmgcSaOecUWu7gqsinGdq7lBfTc06
oFPqH+8afIfz/19Gq28fHZCW+oynH7jLmff350YHRBYNUSkAj58/fXog1QG9
zHcIXwXvYI6ue6PmgA5YDc9k/oB86nPk9YMMe9T8PunN+E94H1uregttO5TV
MM5rMQfrpfuWtekpO2StQvEJBu8+E/LX4JAdiopUrisEH9v3+IzW6jXEvFo7
vgA2+bBafyr/GgpQ/1kcSaFhD88nN/y3eRU1CAp/L6NCvZRpQ52PbVGybsDt
iXm4z5yrsZVJtUXDHmqCWxZo2FbzYqbUEFvU8pL10WFwY2C4uo2VLcKrSEa2
4FOtqi2LO22RuBX3ymfwQZtX3XzuNqi00UqjcxHmd5/F6yZXa8Sde/5swjLc
X8/K/4vVtEZf2kY4SsBW13nPmh20Rql/FZ+9BfdU9Db/6L2MgnhcPDbAtecv
dOw8eRllLoTN2v6iYfHeyp8ubl5CGI9ykegK/H6/wPpshAVyL54QTlmlYft8
pieuX7ZADSHOWCmYQaCsa0LGAmmEbh5pArc74AWfvpijFU6ei/Ngm42r+u2y
5siYI1JLaw3q8aHiwsejZqgj+uw1KvjWO7cEkRdm6O63K8pM6/A9byr650Wb
IYNW4VFesOCLNoP0k2YwnrSo0+DnWpTNqBhTxDzKdDMC/PWWjJGTvAkynuV1
/G+DhjXxbJ6e2mGCtqtN/hECF9c0HbUdN0aDoZ+uyIE9tpj+MY8zRkkiNyJN
wNtSvYu1JowQI2mnSxKYoownN1cbocMtova54L6xbUF4vBFaqH4pVg7OEk83
VlA0QuRVU/5OsEx93d+jdwzRVPj9WOZNGsZ3Lexnvp0hOld78ecu8G9WvQFB
JUO0aDbALQh+bzj6iG/KALFJHO9QAFtNMZqyKhugzgmnYSfwzj3xZp2dusiE
VdrhDVh4OU7KKUgXcYtx/2gHK3XHbWOR0kU7Obec+QB2CIurPZ2gg8TPNjp8
B6OF2AOlRtpIYj64fPtvyF8dsauaW7TRr6niwV3guYexPROVF9BkHz6wB7zH
Opa8j/cCyi1x0RMD326LmY4e1EJdbLHaGuDIwpgGkUgt9P3mn8O64GxiTNob
BS20c1Wl1xjcfirmwsZ9TbRS8LnCBiycH/3UyUoDXdtle8cHrBQUHcGyUwPx
eO0/HAQ2sIi2yX19DtWcZI0LAQdyRnMPHziHzL7vnYujj9c/iqD1TQ3x1rMP
5NDHaxalP5mohnJecUsWgplkokSJqmqI9fyjK4/AUj8iR17mq6IfEieNnoE1
miIrjU1UEX8CmfsF2Co7MpbGrIqyMzmfVNPfxyTyzFGHs4izPc29gf4+UpF8
TbvPotr1uYw34OdskfPW73EkPiud+xb8DUXk3RPF0YCUgko7mCrPuWpXgaF3
d4wHOsH7qByPMv/D0Eo7h2YP2NOSY+eOjypIb44HDYBzuDga1ORV0OdzL959
BHe+2+nun3YaRZdmPBoCbwTsFKpcV0Z6BnOOI2AR2Z0fZiyV0X+27cyfwUY/
d0QcrlNC7RyXA7+Agx/sULQUUEKOUW/7voJLTXfMJgYpos8MYixj4CH2HVmt
owqIt7CE5xuY+Q27PuNZBbSlyJ1xHHzCh51RMU8epck+aKfb+jh7pdsWefQ+
0NxjAhw9yWZfbHcKEZ83rtH9Mp2Nb+ztSVTG+u/SJHjSgK2V7+hJpPlQLotu
LlY2f/1IOaTUFF5Ht8rr7ZIRP2WRX8yeWrorvorv/aIri1Z/8qfSLcqgwypb
IYPSuynGdGcdclmO3C2DZE1r5+m/x60W/+2r3wmUmpzjQneEXVmX3Kg0Ss1/
00Yf7++wnlfRatJoe7bqNron9CYMG/WlUEOGqgj9fbsSj0i48B9HCS8mhenf
o3rg+tY93yTQeWZt5lFwPt/jseZHx9CbnNRm+veMt5yrdbstjrry5+zp39sn
63jKfmUxdFrE+Qd9Pq6Oud1q2SKKpnEFnWGwrlDlec8OEZS5wyNxEHz4kfzf
9svCyGvva9QP3jHnO+QtIoTU4rlKesGrx+sqhGiH0M3dl7y7wWlOpK4VBkHE
+f5yVRvYhcYSope0HykcshRrAat6RcsXCe1FzEsfgujrj0JMzjHV4EVjNgO9
9PX6Ziu/6ZNBbnTveEZ3HTg1NnM7ixMXOjPoVF4DDpHWnnLkY0V1+x/uqwTb
rPtpy+360hAoZZVZAM408h3KqWjCZPL2V9H3198jG4kztj+wcD6G55lgs8mh
AvmifxjBXebyXXDjIWE+qYJdeF9hqDOZvh8zHlwd5ObBK7TjngaCd+/e9zSY
tBvvp7V8pO93Zzbucz3W+/AWvfERV3DsenBNdexhvFT8S7UFOK9KZXRHsxD+
I+y1rAl9fXlsMttuCuPSfBP39MDjFILB9htH8Q+rW/nUwArjLt8tNCXwTM8F
lmP0/DT1JPoPgyx+maA/tAL5zuj9+PrnR7L4i1PSNjTwiUd8TnVGcvjyMbZe
ej6cdyZp+hecxLOkf7sOgW8tmzCvayrgE0x7C6vBzlt+By7Hq+DZnZrqXuBK
rsJqLw513Fuxyugb5Pc8EuY2dVUdRz69cYPgpMXho6Yv1XF5Q8daev6/PcCR
KmdzDte4P/yjhl4P0ny8lp5p4D93E3MSweWCOjLupufxSIOo4jPgJ8eXSpwz
9XChMVpkAtQvIw5BG4VZPfyquTx/OHiFcoGHWUkf3+0UkuMPPvMkLyBjUB/3
SO7OdAB/530kYh9lgPO3NmnR66H3XfPV5GZD/HaOb9I01NPUxJdpC0om+FNV
Ni4F8FCM16fSoxZ4SOuCzyDU84ER0eTTM7b41RYOmZUluG/YW9rJ/LPFMWMZ
8Vnwo/mYk6I8V3FNX7PDY+CgrbTB/85cxSWtJbjbwKIyL/bPJl7FHf+OzWWB
A6LOFt1XvIYPMzHcPgc+omBZsxJphxNVNOyT4HzC1RQTPZdlh1vyKXNEgDd0
X18ar7DDB4c9nvmDe64d/Nv52Q6XNf06ZQf2uzOtWihtj4939DPIg7umb3cY
D9nj3ptHeofh/ENIiRktP3odP8+zacYP5gj4VqaifB33ck18tgNceFWe2KZ3
HQ9TfvyPATwgNXFw0us6Pumz7vkTzl+ybUpX+Zqv493R4rU14Pm/PycDbRzx
B1Yvr1wEOzlqzVy474R3qAZlh9LgfKOfXTtY6oT/t0+qlgBOO7kcbYec8C2v
eOodwS1MOceCvjvhjpk8gTpgkaxV52cnb+BEGlMXN3i8t4jG13cDf2recC0d
zoNWyiy/Jtmc8b6PWjxJcF60Hp9y4z/ojPsZc08EgW2i3s1pn3TGy87Nhd4E
2w9GTFZcccZFDWwwdbCrB9sA8bkzfvqadNASnD+JJZyV+61dcIFnJelaYLLR
/HEDDxf8V7G8oQw4dL3ncUikC84swdm7DxylmZQ3U+GCC9+XEqfOwnqe4Emq
ZnXFrY0ETiSA8/ftdTd55oqzDroytc7QsKI3G3MR71zxE6f6GMvAxU6fHF99
csUfcQigu+DSl5k2h7fewueWKwlXwM+NBQ3mLW/h8fyL1Qtwvp44l8SnweSG
b2tn39gG/hWYuvKtxA3nM0559mcazsf/9si9f+GGC8x6ZX4GFxAz3Usb3HDG
wnfKr8AmIblzhH43/EtGaIo3uCKyZJx90w23V4Pj+BTcF5Mbuk5ecMefSW9/
+n4S5oNHdcc+E3d8NMY+LRcseK/5PIO1O36ecEXSH9yV1trc5u6Ox75/YCIJ
lszur71yH/ozBYbHTdCwmeLvRVE/3HEz7n8/To/T/35xY9J10R3XTX8nvQt8
v2TukMlveN7cBv/UNxqm9XQh8wDXbZz9tUBLDPhh5WZSpfxtnFxNuDMwRsPs
6jmDv4TfxsX02mWNR+G82i9/8cQRD/xi93UHBrjfkM5sezZ53AN/9yA3r+UT
nJ8eDbGlKXjgR96t3EoA3wjyrf+r7YHzMdW9OgBeFX11pOO2B573XHrbqRHY
X0Fnlh2QB86wVLWmN0TDzoqeS8y85Ik7Xfh4UWSA/v9TvLP69p447WNnwSjc
vyL/TKlvueWJ5wmLuqeBu/rC15zInvjqfGfYNrBlYMsV+UeeePChy3fGeyG/
9Wkf71vxxA8YpRQHwv2wIMConTXJC79y6ZSQDtxPAzR/+MVneuHN8QEdc3Df
NeUOEud96IUvlZa1xoK3Fj+KOlznhd+U5XndBvfr6/0MWirTXvgriUueZ+C+
Li5e1nxbiYDHzG+NYm6GfDnIXv9lnIC/cG+8s/U1jDcv18WOQsCNLsjfSKij
YbYu8gKzqwS8rGxr2B4w95ZrAWs7vHHv+4u+Yq/gfH+8Vuk/eW+84dQbE7wG
7i9hji+1YrxxCZZLzudf0LDXMm/LK2V9cAZzDZ53pZD/j1FGw1R8cPuosVoc
vFeYl9Nc0wevGwx6WlsC5wFee5fflj74op6Vf+ljGia3xix+juyDKw4x5EcU
w/p/rZ7/sccHbxMfYNhfQMPStZpT1l188fHtRztfpdOw82fnmtu9fXGlO6ef
CoLXFHmWs0i+uH2S1Ufyfai3x+yMVFN88Tl+7k2NNHgfDmbOmDpfnNHsSeK7
FNiv/WqR+9n9cHU2QldeAozHuskPK/bDH4x3R3SFQT55Wf5vssIP953pn2IH
41zZodGv/fC8JanrWqE0bPsbn/gPfX44933pgXoyjO/I8bybf/wgn/Fb5AbT
sLq5tNZUI3/8qsGD/Sq+kO/8Xfnnf/vjZSJRm9034fyVuqcqxzAQNyjKsnXW
g/1w4H5t4qVAvJ89SiZUF85jBfwNZPtAXPuUkkGGDqyXCr4WO99A3H3SwuP9
BchvnbwjormBeDWFfJVPE77fFu6/5fOBOM8vAbl7GA0bc2XTaLwThEsXnn7C
LQ31XmPzw7fOYLw42uqoGCfkz/wS5g8HSLgzA79AdAsVMyphGRRyJ+NjES4L
jgQqluxSmDFeGoIPdB5VshajYkGnFvh3bAnDGewYWn+NUDAty52d2tvCcCKn
E8PAMAXbFSRGitkZhs8/N5uoGKJgBW9tf7LxQ3yv2bPbHylYq0lfzXbJMBxF
rN/d6KVgPB6VlqwXwcWelRKtFOxxmVcmU0kYLv37PLdwNQXz7E80UC2HuH+y
696XFExl9Qkz+UUYnmDBnr+rioL1nJl2ZkTQ/vK+dKbnFOxXp5kKw4cwfKy2
5zu1jILhc/Jf//wNw3PuyCgtPqRgg6IbgutG4Th+dyz4SRoFi702mvz1Yjhu
w3jboTcV2mc3szZbheMM3j+lVu7BeP67Q4t3CMfHUrndVFMoWMBfoQZhP7Db
1rdTiRTs8ICutUFuOI7uKjWYx1Aw5+DczIc0eN4plonVIAp2sDacK245HD94
9Jy5EvjD8s3Q2+vw/L8lA4GBFOzMjVPOKlsicNyf8J01AL6fabty/+4IHBFe
3hX1pWBV4r9G/qpAnFTGnuVBwRg/au0xi43AiQHFFpZO8P6IS6EwMQJn2LKX
WuFIwXJKhsyW70H7xpLxHeAzJMe7Sbng/pWFZgcYv0QkZ3cVPH8go/ecHQVb
Ib9n0foG8YjCoZgrFOytyx3h1Gl4HvnG/k1rCnbX/KLa9CzEb90cvAmWPf6d
GLoCv8/5o9rwMgVzG976G7FH4gwLp42kLlGwWSmNRcVTkTjRZfiQ7EUKVruX
Y1eUciSORz8JrzWjYNEsH6WGcIibDPuqgUU/2bsQtCE+9pfL0pSCOYSH/aiw
AVssiqcbU7CT7rqsTA6ROHJcFj8OZrbiFTG8Cf2ZPjc3GVGw/BOF12he0P7t
4Y4lQwo29rn567EYiHP9M7huQMHK3sf+8UsA/8nS2gYOqjDZ35YCNiqfeqxP
wQQiJy0cc8DCK7y/9CiYpSzzh4IXYCrBO0uXgokf6FhaqgUXHGrSBq9vu8ut
huB9czsbNnUoWNpXIYNvbRA3n++1AX+IUmsXGIO4fi8J06ZgCTEDj7inwH+c
lv9doGAX4uwjWWfAzddnGsEoIeLcwhJ4l4b9BbBfEr/w9Bo8T484xwU+efcR
06c/EOfv3xw6D+sxtb2hmTUKZ3jl9dIFbHffKrtmRxS0F3RQAgtmUAKe7oL4
17u528B3szmV0vaBHVKbHmnB+xcaP78pBe2PjA/81aRgCg8nk2zkwC/62YbA
S8Ve7qaK0P7I2scKsGNp6nFMDcwdd8oFLPRUdKecFrTXutihA/5aVjMrqgvu
Zv0jCTau/FTMfRHa492yvzQoGMcL5whWK/AEdvoTuKXqj/1vG7DGhck34JDq
ePUFe+h/fp9kKfhMraDQ9A3w21G+VPDaq3LGT7fAac2FIeDK12fHuj2hf87K
oDvYtaGvvtkX4lV5ZbZg0cZrWTVB4Jpfksbg8TfL/k9DwKH7TTTAWc1hlvmR
0P+XmpAy2PzdbsW0OIhPpmWeAHO3POSLS4K4jFajGLijVWGFlAquDUoSAke0
tw4QMqG9mdMuQbBqp2XlzVzwtBy2H/y7azbRpgjan+MQ2Aeu6glwMy2hz8/h
Urrd+3bqXygHf82iCIAlBrIlsRfQvv/J+CHw9AepHXK1EGcNjj0Kzh1EM6IN
ELc4M3ccbDVs2CrQDPE8/i0K4N2fxh9yt0IcKfWpgns/e4SzdoETey31wbFf
me1/94Fp27MvgzXGUtQWBsEvubJcwIzjIoenP8PzmrktgsF1Ey8ZPn2D+Mrp
/iQwYUprtHsa4iJ1O4rBJ74Pv26ehbjs660N4KKZTb+nv+jvt4Yvgm3mYi3y
N8C7Y0M4YD3sowoopP2D9hKmMRLghAXsF2l7NE4sU6LR19OFpZ5+Agf4Q7lu
Ipjll23Fzf/AtZyEKrDfWsgtUwGwlLLYVli/I1RlqxOHo3EGxfefpMBKU0ta
O49CXPz7hUvgzd5rh99KgwsMrr0EW7Xs48w9Cd7Ty/EDXFffvxmgBP0Njf33
wv4IKFH7IKcOnmrLCAV/zt1s5DoPllw1rAOrpFU+ndOF/rzJnb/Af0OFIgsu
glMj9rjC/gy23qLMcxPaX7cT8oT9Pmby6uj8LXA6h3AtGNf24OnwhPb7mJcY
IT8wKExQQoLAa2cYUsHkXU05S4nQfnV55SPkl3FW/7jue+DqjchjkI9U/8r4
lWSAQ44uksBbZvOMrxWCt9npyUH+Cm0mb+2vBn900i2D/DZZq7T09DW4p/gl
N+RD9WeLo9FvwFEzjD5gluyrNaodYNZJJS3In+Heqs4Vo+Dz5Zf/QX6NEmfq
S9waA+1fWLdC/p45WFvvwg6e/6erbQ7zxXe75DwX2JdZqhvMxjweyrgX/PVR
22cLWG9fGuXdJcHjDhGcVhQsPoGUZWACTnzGMWBDwbbL7z95zwJ8PetWiC2M
/0tVxydrsJOt1MmrMN/ic5sOTmCGvb0PrkE9aDazDAwC1041J0L9Ulk7xve4
GMz++PFPZwpWnf3uKe0JmLEtr8GFgsmcs9U4WQk2vcqV5gr5IOmeF3oN5i8w
NHCD84YE48DHPvBV5rtfoZ7OXfmYsOUP+MmGiYc/Bbu+1V30PFMs7A9DPXeo
x+Ol7CieFazX2O8O9XpoHaft4QaLJEX6BVOw5uQSXemj4O6kxschFCzzPZHt
siG4qu9JRCwF05Y6FlpVCLaxNVXJoWAVc/Gfch+DhRQ++eRSMP7HizJxZeBq
CVSVB/MnXPvtWg2YylqqWAjrc+95bFcn+GDFMavHFOwpy/WNm8v035Pt4HkB
+epzntshtTic4fTnTKsOCuZzf2vLDi3wpD4+3Qn52eyG4JoOuLjw+u1uClbS
e6KrywzMkaCR1Afr4z06FnADfDjWfh7Oa4SKr9MfE8GqwWJHpynYcOTey7Fj
YIezA+FMVCwzzOAY2zQ4Nh6lM1MxG3L4esQsmEfuz7OtVGzafzElZAW8OOcy
w0bFll3buvx2xOMM6h8tQv6jYlymfriTAjgvutHsCBXTODQipJEAlrjLcEeb
irEd4FpsSgGPlXBx6VGxzr0a6GwG+C9ecNeAipnwVFipFIHFtayKTamYLWt0
ilwdOC369MYVKhZAUWQV+gGeHhc670XF8JlbH3IoYJPMY1t8qNiW74X5B5bA
tfY9yI+KRY/twvf+BVNjVzWIVCyt/6fPLp47OEM55UdQDBWz6hHUvLMHfPA7
i1k8FRPsNOXdKQiur+mQTqRiRe8an20TByvpWy/co2JOTavB4VLgG+oSg/ep
mASS1GM+CXbzfowyqdh83bX9ZCUwgTTy5AEVq6y5P/MPA+dsvs7Oo2L/AwdL
aCY=
       "]]}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9652096460030817},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-600., 600.}, {0.9668478961754563, 0.9996128996229507}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7687553468304577`*^9, 3.7687553524959583`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"fDatasets", "[", 
  RowBox[{"\[Pi]", "/", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"fDatasets", "[", 
    RowBox[{"\[Pi]", "/", "2"}], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.768755209703511*^9, 3.7687552590629616`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "sweepMax"}], ",", "0.9945851438272016`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "570"}], ",", "0.9958896857619883`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "540"}], ",", "0.9961805929688978`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "510"}], ",", "0.9958089549344411`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "480"}], ",", "0.9950891407049518`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "450"}], ",", "0.9942809445023524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "420"}], ",", "0.9935783460712073`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "390"}], ",", "0.9931147134420143`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "360"}], ",", "0.9929596418154448`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "330"}], ",", "0.9931331276019068`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "300"}], ",", "0.9936055866398098`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "270"}], ",", "0.9943208304546594`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "240"}], ",", "0.9951981368086391`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "210"}], ",", "0.9961506381827991`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "180"}], ",", "0.9970887027456198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "150"}], ",", "0.9979350939595012`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "120"}], ",", "0.9986398353923811`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "90"}], ",", "0.9991582642739891`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "60"}], ",", "0.9994794363629592`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "30"}], ",", "0.9996128996229507`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.9995888273992646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "0.9994427751634679`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "0.9992242706364826`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"90", ",", "0.9989726150112483`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "0.9987194744437621`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"150", ",", "0.9984768114963579`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"180", ",", "0.9982273247125237`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"210", ",", "0.9979300886890733`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"240", ",", "0.9975094307923178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"270", ",", "0.9968624650628929`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"300", ",", "0.9958709822827856`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"330", ",", "0.9944043762443702`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"360", ",", "0.992336286889578`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390", ",", "0.9895510953538742`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420", ",", "0.9859708431364398`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"450", ",", "0.9815603943433061`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"480", ",", "0.9763333296882535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"510", ",", "0.970363240673247`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"540", ",", "0.9637819733557706`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"570", ",", "0.956777008627463`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"sweepMax", ",", "0.9495864331884252`"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.769186299625886*^9, 3.7691862997448387`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "sweepMax"}], ",", 
   RowBox[{"-", "570"}], ",", 
   RowBox[{"-", "540"}], ",", 
   RowBox[{"-", "510"}], ",", 
   RowBox[{"-", "480"}], ",", 
   RowBox[{"-", "450"}], ",", 
   RowBox[{"-", "420"}], ",", 
   RowBox[{"-", "390"}], ",", 
   RowBox[{"-", "360"}], ",", 
   RowBox[{"-", "330"}], ",", 
   RowBox[{"-", "300"}], ",", 
   RowBox[{"-", "270"}], ",", 
   RowBox[{"-", "240"}], ",", 
   RowBox[{"-", "210"}], ",", 
   RowBox[{"-", "180"}], ",", 
   RowBox[{"-", "150"}], ",", 
   RowBox[{"-", "120"}], ",", 
   RowBox[{"-", "90"}], ",", 
   RowBox[{"-", "60"}], ",", 
   RowBox[{"-", "30"}], ",", "0", ",", "30", ",", "60", ",", "90", ",", "120",
    ",", "150", ",", "180", ",", "210", ",", "240", ",", "270", ",", "300", 
   ",", "330", ",", "360", ",", "390", ",", "420", ",", "450", ",", "480", 
   ",", "510", ",", "540", ",", "570", ",", "sweepMax"}], "}"}]], "Input",
 CellChangeTimes->{{3.769186299791794*^9, 3.7691862998087845`*^9}}]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 468, 11, 72, "Input"],
Cell[1029, 33, 291, 6, 52, "Input"],
Cell[CellGroupData[{
Cell[1345, 43, 3579, 88, 192, "Input"],
Cell[CellGroupData[{
Cell[4949, 135, 288, 6, 23, "Print"],
Cell[5240, 143, 296, 7, 23, "Print"],
Cell[5539, 152, 290, 6, 23, "Print"]
}, Open  ]],
Cell[5844, 161, 7416, 206, 212, "Output"]
}, Open  ]],
Cell[13275, 370, 23414, 639, 1092, "Input"],
Cell[CellGroupData[{
Cell[36714, 1013, 3335, 85, 192, "Input"],
Cell[40052, 1100, 15664, 376, 200, "Output"],
Cell[55719, 1478, 16209, 383, 228, "Output"],
Cell[71931, 1863, 15781, 376, 232, "Output"]
}, Open  ]],
Cell[87727, 2242, 12300, 337, 612, "Input"],
Cell[CellGroupData[{
Cell[100052, 2583, 3403, 86, 192, "Input"],
Cell[103458, 2671, 20067, 479, 198, "Output"],
Cell[123528, 3152, 19893, 474, 196, "Output"],
Cell[143424, 3628, 19891, 474, 196, "Output"]
}, Open  ]],
Cell[163330, 4105, 12302, 343, 652, "Input"],
Cell[CellGroupData[{
Cell[175657, 4452, 2936, 79, 192, "Input"],
Cell[CellGroupData[{
Cell[178618, 4535, 238, 5, 23, "Print"],
Cell[178859, 4542, 245, 6, 23, "Print"],
Cell[179107, 4550, 238, 5, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[179394, 4561, 2434, 55, 132, "Input"],
Cell[181831, 4618, 251440, 4598, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433308, 9221, 717, 18, 52, "Input"],
Cell[434028, 9241, 260212, 4745, 375, 245402, 4501, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[694277, 13991, 896, 23, 52, "Input"],
Cell[695176, 14016, 17262, 295, 249, "Output"]
}, Open  ]],
Cell[712453, 14314, 339, 8, 52, "Input"],
Cell[712795, 14324, 3778, 105, 192, "Input"],
Cell[716576, 14431, 1006, 26, 52, "Input"]
}
]
*)

